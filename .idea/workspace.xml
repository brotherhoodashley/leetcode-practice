<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </select>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="abc\ntasd\n" />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.tabs" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
      <recent name="alternate" />
      <recent name="common" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Java Scratch.Scratch (1)">
    <configuration name="GeneralizedAbbreviations" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="GeneralizedAbbreviations" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LastStoneWeight2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="LastStoneWeight2" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="codeforces.Main" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch (1)" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch_1.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.GeneralizedAbbreviations" />
      <item itemvalue="Application.LastStoneWeight2" />
      <item itemvalue="Application.Main" />
      <item itemvalue="Java Scratch.Scratch" />
      <item itemvalue="Java Scratch.Scratch (1)" />
      <item itemvalue="JUnit.Unnamed" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Java Scratch.Scratch (1)" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.LastStoneWeight2" />
        <item itemvalue="Java Scratch.Scratch" />
        <item itemvalue="Application.GeneralizedAbbreviations" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00503" summary="Add approach in find all nodes present at k distance in binary tree">
      <created>1604849239156</created>
      <option name="number" value="00503" />
      <option name="presentableId" value="LOCAL-00503" />
      <option name="project" value="LOCAL" />
      <updated>1604849239156</updated>
    </task>
    <task id="LOCAL-00504" summary="Add gotcha around resetting prefix sum of histogram if the current column value is 0, because we are only interested in longest histogram height of 1's ending at current col">
      <created>1604850172740</created>
      <option name="number" value="00504" />
      <option name="presentableId" value="LOCAL-00504" />
      <option name="project" value="LOCAL" />
      <updated>1604850172740</updated>
    </task>
    <task id="LOCAL-00505" summary="Solve easy find moving average of last k elements from stream using fixed size deque and circular array.&#10;&#10;Learnings -- Circular array can be used to solve question of fixed window size. Circular array can be implemented by fixed size array by keeping two pointers, head/tail and using modular arithmetic while incrementing head/tail">
      <created>1604867094441</created>
      <option name="number" value="00505" />
      <option name="presentableId" value="LOCAL-00505" />
      <option name="project" value="LOCAL" />
      <updated>1604867094441</updated>
    </task>
    <task id="LOCAL-00506" summary="Solve medium find max difference between a node and its ancestor in binary tree by keeping track of min and max val found so far during recursion.&#10;&#10;Little bit tricky but was able to solve it quickly.">
      <created>1604935078578</created>
      <option name="number" value="00506" />
      <option name="presentableId" value="LOCAL-00506" />
      <option name="project" value="LOCAL" />
      <updated>1604935078578</updated>
    </task>
    <task id="LOCAL-00507" summary="Solve hard and tricky find min no of cameras to place to cover a binary tree. This is similar to vertex cover but is very tricky.&#10;&#10;Trick is to consider it as a greedy problem rather than recursion problem, think about not placing a camera at the edge but at the center. So lead node should not have a camera, and instead it's parent should have a camera.&#10;&#10;Sequence of covering would be covered (null pointers of leaf) -&gt; uncovered -&gt; place camera -&gt; covered -&gt; uncovered -&gt; place camera ..">
      <created>1604940499610</created>
      <option name="number" value="00507" />
      <option name="presentableId" value="LOCAL-00507" />
      <option name="project" value="LOCAL" />
      <updated>1604940499610</updated>
    </task>
    <task id="LOCAL-00508" summary="Solve medium and tricky game theory problem. &#10;&#10;Multiple gotchas in game theory:&#10;1. Filter out invalid/unreachable inputs prior to starting recursion.&#10;&#10;2. When there is state to memoize, memoize the input state at the current recursion, not the choices performed after the input state.&#10;&#10;3. When a player wins after making a choice, that's not the end of the game. Other player will still continue performing the backtracking. So reset all the choices made before returning true to the next player.">
      <created>1604952696502</created>
      <option name="number" value="00508" />
      <option name="presentableId" value="LOCAL-00508" />
      <option name="project" value="LOCAL" />
      <updated>1604952696502</updated>
    </task>
    <task id="LOCAL-00509" summary="Solve medium and tricky game theory problem predictTheWinner, need to find the max score of the first player if each player picks either from the left or from the right.&#10;&#10;Since we need to maximise the score, we need to use MaxiMin algorithm. There are two ways of implementing maximin algo. Either use flag to denote who is playing or directly skip to the player1 state without considering player2 state at all.&#10;&#10;Former one needs to carefully handle return value for both the players assuming that we are interested only in score of player1">
      <created>1605022894332</created>
      <option name="number" value="00509" />
      <option name="presentableId" value="LOCAL-00509" />
      <option name="project" value="LOCAL" />
      <updated>1605022894332</updated>
    </task>
    <task id="LOCAL-00510" summary="Solve medium game theory problem, stone game problem similar to PredictTheWinner. Need to find the max score so use minimax algorithm.">
      <created>1605024037167</created>
      <option name="number" value="00510" />
      <option name="presentableId" value="LOCAL-00510" />
      <option name="project" value="LOCAL" />
      <updated>1605024037167</updated>
    </task>
    <task id="LOCAL-00511" summary="Solve medium game theory problem, StoneGame2 problem similar to PredictTheWinner. Need to find the max score so use minimax algorithm.&#10;&#10;It's a bit difficult because the choices are not straightforward. Instead of just picking from left/right, player can choose contiguous X elements, so need to carefully keep track of score of player1 and player2.&#10;&#10;Remove that when dealing with player2 we are interested only in player1 score, so do not add the choices taken by player2 in the return value. Instead return the min score of player1 returned from the remaining state">
      <created>1605029448230</created>
      <option name="number" value="00511" />
      <option name="presentableId" value="LOCAL-00511" />
      <option name="project" value="LOCAL" />
      <updated>1605029448230</updated>
    </task>
    <task id="LOCAL-00512" summary="Solve medium partition array into non overlapping intervals such that every number in left &lt;= every number in right.&#10;&#10;Leverage prior learnings of solving non-overlapping subarray problems via two pass algo, one pass for finding max element in left subarray and another pass for finding min element in right subarray. &#10;&#10;Need to find a partition such that max element of left &lt;= min element of right">
      <created>1605104226145</created>
      <option name="number" value="00512" />
      <option name="presentableId" value="LOCAL-00512" />
      <option name="project" value="LOCAL" />
      <updated>1605104226145</updated>
    </task>
    <task id="LOCAL-00513" summary="Solve hard and tricky find the path in a graph with the smallest edit distance from a target path by generating all the paths and comparing their edit distance&#10;&#10;Need to return the shortest path instead of just the smallest edit distance, returning the path was a bit tricky and new learning for me. Instead of storing the path with min distance and returning it in recursion, create a 2d array which stores the next node in the chain. 2d array will take care of finding the next node if the current node is at index 0 or 1 or 2 in the result path.">
      <created>1605112875257</created>
      <option name="number" value="00513" />
      <option name="presentableId" value="LOCAL-00513" />
      <option name="project" value="LOCAL" />
      <updated>1605112875257</updated>
    </task>
    <task id="LOCAL-00514" summary="Solve medium and a bit tricky remove intervals that overlaps with a target interval. &#10;&#10;Got confused during implementation trying to solve the question in log(n) using binary search as the input array is sorted. Checked the hint and realized that it can't be done in linear time because we have to create a new list and copy all the intervals in worst case.&#10;&#10;So the simple solution is to check each interval and see if it overlaps with the target interval. If it does, split it.">
      <created>1605452094059</created>
      <option name="number" value="00514" />
      <option name="presentableId" value="LOCAL-00514" />
      <option name="project" value="LOCAL" />
      <updated>1605452094060</updated>
    </task>
    <task id="LOCAL-00515" summary="Solve easy but kinda medium if we have to optimize it to linear time complexity using trie, find longest word whose recursive prefixes are present in dictionary.&#10;&#10;I did it by sorting the input and keeping track of valid prefixes. Could have used trie to optimize it. &#10;&#10;Learnings -- Whenever dealing with prefixes in a dictionary use freaking TRIE !">
      <created>1605452930024</created>
      <option name="number" value="00515" />
      <option name="presentableId" value="LOCAL-00515" />
      <option name="project" value="LOCAL" />
      <updated>1605452930024</updated>
    </task>
    <task id="LOCAL-00516" summary="Update approach in finding the duplicate number using warshall/floyd cycle finding algorithm&#10;&#10;Learnings -- Use warshall floyd cycle finding algo to detect cycles inplace&#10;Whenever dealing with input array consisting of 1 to n, use swap or the numbers as indices or xor">
      <created>1605454432198</created>
      <option name="number" value="00516" />
      <option name="presentableId" value="LOCAL-00516" />
      <option name="project" value="LOCAL" />
      <updated>1605454432198</updated>
    </task>
    <task id="LOCAL-00517" summary="Solve medium and tricky 3 way sorting problem using 3 pointers. &#10;&#10;Trick is to know which pointer to increment/decrement and when? i partitions all the 0's, j points to the unclassified and k points to the partition containing 2's">
      <created>1605459765188</created>
      <option name="number" value="00517" />
      <option name="presentableId" value="LOCAL-00517" />
      <option name="project" value="LOCAL" />
      <updated>1605459765188</updated>
    </task>
    <task id="LOCAL-00518" summary="Add another approach of validating a BST using range bound property">
      <created>1605461173694</created>
      <option name="number" value="00518" />
      <option name="presentableId" value="LOCAL-00518" />
      <option name="project" value="LOCAL" />
      <updated>1605461173694</updated>
    </task>
    <task id="LOCAL-00519" summary="Solve medium and tricky find all possible abbreviations of given string by noticing that each char has two choices, either get abbreviated or not. Similar to Subsets&#10;&#10;Learnings -- In case of problems where each char has some choices and there is no mention of subarray, take decision at each char independently i.e don't run a loop. Running a loop can give duplicates and will not be efficient.">
      <created>1605474873614</created>
      <option name="number" value="00519" />
      <option name="presentableId" value="LOCAL-00519" />
      <option name="project" value="LOCAL" />
      <updated>1605474873614</updated>
    </task>
    <task id="LOCAL-00520" summary="Solve medium generate all permutations of given string if each char can either be capitalized or converted to lower case by recursion.&#10;&#10;Leveraged prior learnings of processing each char independently.">
      <created>1605475417498</created>
      <option name="number" value="00520" />
      <option name="presentableId" value="LOCAL-00520" />
      <option name="project" value="LOCAL" />
      <updated>1605475417498</updated>
    </task>
    <task id="LOCAL-00521" summary="Solve hard and tricky interval problem -- find free time common to all employees using line sweep algo similar to meeting rooms 2&#10;&#10;Learnings -- For problems related to interval, pattern for solving them is&#10;1. Line sweep using counter +1, -1&#10;2. Line sweep using start time as key, end time as value&#10;3. Given a target interval and a set of input intervals, compare each interval to the target interval&#10;4. Greedy approach by sorting by start or sorting by end">
      <created>1605539671513</created>
      <option name="number" value="00521" />
      <option name="presentableId" value="LOCAL-00521" />
      <option name="project" value="LOCAL" />
      <updated>1605539671513</updated>
    </task>
    <task id="LOCAL-00522" summary="Solve medium interval problem -- find the intersection of two lists of intervals using multiple approaches, line sweep using counter method, priority queue (overkill but is generic approach of finding intersection for k lists of intervals)&#10;&#10;A simpler approach would be to just use two pointers to compare two sorted intervals one at a time and find the overlap">
      <created>1605543789843</created>
      <option name="number" value="00522" />
      <option name="presentableId" value="LOCAL-00522" />
      <option name="project" value="LOCAL" />
      <updated>1605543789843</updated>
    </task>
    <task id="LOCAL-00523" summary="Solve medium and tricky find combinations of three triplets such that their sum &lt; target sum using multiple approaches&#10;&#10;1. n^2 using two pointers&#10;2. n^2log(n) using binary search&#10;&#10;Learnings -- Using Arrays.binarySearch() to find num &lt; target does not work if input contains duplicates.">
      <created>1605551449350</created>
      <option name="number" value="00523" />
      <option name="presentableId" value="LOCAL-00523" />
      <option name="project" value="LOCAL" />
      <updated>1605551449350</updated>
    </task>
    <task id="LOCAL-00524" summary="Solve medium find triplets such that their sum is closest to target sum using two pointers algorithm.&#10;&#10;Reduce the problem to finding tuples such that their sum is closest to target sum.&#10;&#10;Leveraged prior learnings of ThreeSumSmaller">
      <created>1605557492993</created>
      <option name="number" value="00524" />
      <option name="presentableId" value="LOCAL-00524" />
      <option name="project" value="LOCAL" />
      <updated>1605557492993</updated>
    </task>
    <task id="LOCAL-00525" summary="Fix incorrect if/else logic while placing back the polled next character in ReorganizeString">
      <created>1605593300432</created>
      <option name="number" value="00525" />
      <option name="presentableId" value="LOCAL-00525" />
      <option name="project" value="LOCAL" />
      <updated>1605593300432</updated>
    </task>
    <task id="LOCAL-00526" summary="Add the way to solve this question in a simplified way using TreeMap + ceilingEntry() instead of manually fiddling with return value of Arrays.binarySearch()">
      <created>1605631065314</created>
      <option name="number" value="00526" />
      <option name="presentableId" value="LOCAL-00526" />
      <option name="project" value="LOCAL" />
      <updated>1605631065314</updated>
    </task>
    <task id="LOCAL-00527" summary="Add problem statement in 132 pattern -- still surprised to see that I was able to solve that question in linear time on my own :D">
      <created>1605633518367</created>
      <option name="number" value="00527" />
      <option name="presentableId" value="LOCAL-00527" />
      <option name="project" value="LOCAL" />
      <updated>1605633518368</updated>
    </task>
    <task id="LOCAL-00528" summary="Solve hard and tricky to optimize design search autocomplete system that provides top 3 sentences by hotness for current prefix.&#10;&#10;Learnings -- As the problem explicitly asked for finding all valid sentences that starts with a prefix, trie is the way to go. &#10;In my initial implementation I performed DFS at the last trie node and extracted out all valid sentences and then ranked them.&#10;Instead of performing DFS, a better way is to store the useful information directly at each node i.e store all the valid sentences directly at each trie node.">
      <created>1605706673461</created>
      <option name="number" value="00528" />
      <option name="presentableId" value="LOCAL-00528" />
      <option name="project" value="LOCAL" />
      <updated>1605706673461</updated>
    </task>
    <task id="LOCAL-00529" summary="Solve hard and tricky to optimize find words that starts with provided prefix and ends with provided suffix using two tries.&#10;&#10;Maintaining two tries was straight forward but then searching is a bit slow because now you will have to search in two tries and then filter out common indices. A fast solution is to directly insert all suffixes + delimiter + word in trie &#10;&#10;i.e for &quot;apple&quot;, store words like &quot;e{apple&quot;, &quot;le{apple&quot;, &quot;ple{apple&quot;, &quot;pple{apple&quot;, &quot;apple{apple&quot; in trie">
      <created>1605712414155</created>
      <option name="number" value="00529" />
      <option name="presentableId" value="LOCAL-00529" />
      <option name="project" value="LOCAL" />
      <updated>1605712414155</updated>
    </task>
    <task id="LOCAL-00530" summary="Solve medium find whether the current string contains a permutation of a target string as a substring using sliding window template.&#10;&#10;Leveraged prior learnings of sliding window template. Here we are required to find the smallest valid window that is an anagram of target string. Keep expanding the window until the window has all the required chars of the target string. Then try to shrink the window to see if the window length can be reduced to target string length.">
      <created>1605715670799</created>
      <option name="number" value="00530" />
      <option name="presentableId" value="LOCAL-00530" />
      <option name="project" value="LOCAL" />
      <updated>1605715670799</updated>
    </task>
    <task id="LOCAL-00531" summary="Solve medium find all diagonal traversal of binary tree by keeping a key as the identifier of the diagonal. When going left, increment the key to signify start of a new diagonal, when going right, pass in the same key as current node.&#10;&#10;Keep a map to store all occurrences of nodes in every diagonal.">
      <created>1605720652295</created>
      <option name="number" value="00531" />
      <option name="presentableId" value="LOCAL-00531" />
      <option name="project" value="LOCAL" />
      <updated>1605720652295</updated>
    </task>
    <task id="LOCAL-00532" summary="Update code in FindAllAnagramInString to match the sliding window template">
      <created>1605791804391</created>
      <option name="number" value="00532" />
      <option name="presentableId" value="LOCAL-00532" />
      <option name="project" value="LOCAL" />
      <updated>1605791804392</updated>
    </task>
    <task id="LOCAL-00533" summary="Add more problems related to sliding window">
      <created>1605792129708</created>
      <option name="number" value="00533" />
      <option name="presentableId" value="LOCAL-00533" />
      <option name="project" value="LOCAL" />
      <updated>1605792129708</updated>
    </task>
    <task id="LOCAL-00534" summary="Solve medium and tricky find k closest elements by value to a target value in a sorted array using binary search + two pointers&#10;&#10;Learnings -- Erichto's binary search template is awesome. Best investment of my time to watch and understand that video. All binary search questions are now a breeze.&#10;&#10;In my initial solution I misinterpreted the problem and picked the k closest indices but the problem is asking for k closest elements by value, so need to use two pointer technique to pick elements accordingly.">
      <created>1605797457291</created>
      <option name="number" value="00534" />
      <option name="presentableId" value="LOCAL-00534" />
      <option name="project" value="LOCAL" />
      <updated>1605797457292</updated>
    </task>
    <task id="LOCAL-00535" summary="Solve medium and tricky to understand that the problem is asking for longest subarray with at most 2 distinct type of fruits&#10;&#10;Very happy to quickly solve this question on my own. Initially I was thinking of using recursion but after checking the bounds it seemed a bit difficult to get AC using recursion.&#10;&#10;Leveraged prior sliding window template.">
      <created>1605800624665</created>
      <option name="number" value="00535" />
      <option name="presentableId" value="LOCAL-00535" />
      <option name="project" value="LOCAL" />
      <updated>1605800624665</updated>
    </task>
    <task id="LOCAL-00536" summary="Solve medium find an element in rotated and sorted array using binary search&#10;&#10;Leveraged prior learnings to first find the minimum in sorted rotated array by comparing mid with the last element. Once found, array is partitioned into two sorted halves, check whether target lies in first or second half and perform binary search accordingly">
      <created>1605885557884</created>
      <option name="number" value="00536" />
      <option name="presentableId" value="LOCAL-00536" />
      <option name="project" value="LOCAL" />
      <updated>1605885557884</updated>
    </task>
    <task id="LOCAL-00537" summary="Simplify code in find minimum in rotated and sorted array when duplicates present. &#10;&#10;Trick is to make sure the second half is smaller than first half ie. remove the elements in second half that overlaps with first half&#10;e.g. [3,3,1,3] =&gt; [3,3,1]&#10;&#10;Once done reduce the problem to solving it without duplicates and compare mid with the new last_idx">
      <created>1605886003103</created>
      <option name="number" value="00537" />
      <option name="presentableId" value="LOCAL-00537" />
      <option name="project" value="LOCAL" />
      <updated>1605886003103</updated>
    </task>
    <task id="LOCAL-00538" summary="Solve medium and tricky problem search in rotated sorted array when duplicates are present by removing the overlapping elements in second half &#10;&#10;[1,1,3,1] =&gt; [1,1,3] &#10;&#10;Perform binary search accordingly in first half or second half depending upon which partition the target element lies in">
      <created>1605886387152</created>
      <option name="number" value="00538" />
      <option name="presentableId" value="LOCAL-00538" />
      <option name="project" value="LOCAL" />
      <updated>1605886387152</updated>
    </task>
    <task id="LOCAL-00539" summary="Solve medium find a peak element in 1D array using errichto's binary search template.&#10;&#10;&#10;Finding a peak element in 2D array is trickier and uses divide and conquer algorithm">
      <created>1605894946875</created>
      <option name="number" value="00539" />
      <option name="presentableId" value="LOCAL-00539" />
      <option name="project" value="LOCAL" />
      <updated>1605894946875</updated>
    </task>
    <task id="LOCAL-00540" summary="Rewrite the code by considering each element's choice; either be added to the current set or be skipped. &#10;&#10;Instead of trying all elements in a loop. I feel this is logically more clear to visualize rather than the loop solution.">
      <created>1605896722766</created>
      <option name="number" value="00540" />
      <option name="presentableId" value="LOCAL-00540" />
      <option name="project" value="LOCAL" />
      <updated>1605896722766</updated>
    </task>
    <task id="LOCAL-00541" summary="Solve hard and tricky count unique characters of all substrings possible of a given string in first attempt !&#10;&#10;Leveraged prior learnings of identifying the contribution of each character and then repeating the process for all characters to get the final result. Trick is to understand that each character is bounded by it's previous and next occurrence in the string.">
      <created>1605906741331</created>
      <option name="number" value="00541" />
      <option name="presentableId" value="LOCAL-00541" />
      <option name="project" value="LOCAL" />
      <updated>1605906741331</updated>
    </task>
    <task id="LOCAL-00542" summary="Solve medium and extremely tricky to deduce the crux of the problem -- find the min stone possible after smashing all the stones&#10;&#10;Learnings -- Initially I went with greedy which was against all judgement because the max input range was [1,30] hinting at exponential complexity based solution but my greedy was nlogn&#10;&#10;Problem reduces to finding the min diff between two subsets in an array">
      <created>1605987631521</created>
      <option name="number" value="00542" />
      <option name="presentableId" value="LOCAL-00542" />
      <option name="project" value="LOCAL" />
      <updated>1605987631521</updated>
    </task>
    <task id="LOCAL-00543" summary="Solve medium print a linkedlist in reverse using sqrt(n) extra space by working on blocks of size sqrt. Create blocks containing sqrt(num) elements and reverse each block at a time.&#10;&#10;Learnings -- Introduction to sqrt decomposition in the most trivial question. Life works in mysterious ways.">
      <created>1606037667509</created>
      <option name="number" value="00543" />
      <option name="presentableId" value="LOCAL-00543" />
      <option name="project" value="LOCAL" />
      <updated>1606037667509</updated>
    </task>
    <task id="LOCAL-00544" summary="Solve medium count submatrices with all ones using 2D &quot;compression&quot; technique. Reduce the 2D problem to 1D. If there are n consecutive non zero element, no of subarrays would be n*(n+1)/2.&#10;&#10;Can be optimized to n^2 using monotonic stack but I don't fully understand this solution at the moment.">
      <created>1606055259100</created>
      <option name="number" value="00544" />
      <option name="presentableId" value="LOCAL-00544" />
      <option name="project" value="LOCAL" />
      <updated>1606055259100</updated>
    </task>
    <task id="LOCAL-00545" summary="Solve easy find the total weight of nested list by performing DFS and keeping track of current depth.">
      <created>1606059156121</created>
      <option name="number" value="00545" />
      <option name="presentableId" value="LOCAL-00545" />
      <option name="project" value="LOCAL" />
      <updated>1606059156121</updated>
    </task>
    <task id="LOCAL-00546" summary="Solve hard find the new max size of island after converting a 0 to 1 by using union find&#10;&#10;Learnings -- Was able to write union find code on my own by leveraging previous learnings. Thanks to the wonderful intro to Union Find in GraphValidTree">
      <created>1606063863171</created>
      <option name="number" value="00546" />
      <option name="presentableId" value="LOCAL-00546" />
      <option name="project" value="LOCAL" />
      <updated>1606063863171</updated>
    </task>
    <task id="LOCAL-00547" summary="Solve medium and tricky find the min distance between two sets of islands using multi source bfs&#10;&#10;Learnings -- I could not initially think about the multi source bfs, &#10;&#10;Initially, I went ahead with normal bfs + keeping track of min distance. Then I got WA when a cell is reachable from multiple cells of first island. Then I thought instead of visited cell, I would need BFS with pruning i.e proceed ahead if I can reach a cell with min distance. Which got me AC at ~22ms&#10;&#10;Then I thought of multi source bfs by checking the implementation of RottingOranges, and it got me AC at ~9 ms&#10;&#10;Bidirectional BFS can reduce the runtime even lower">
      <created>1606133931408</created>
      <option name="number" value="00547" />
      <option name="presentableId" value="LOCAL-00547" />
      <option name="project" value="LOCAL" />
      <updated>1606133931408</updated>
    </task>
    <task id="LOCAL-00548" summary="Solve hard find a number in mountain array using 3 binary searches, first find the peak element and then apply binary search in either of the partitions.&#10;&#10;Learnings -- For finding a number in modified sorted array always find the pivot element first. Then apply binary search in the partitions to find the target number.">
      <created>1606142593079</created>
      <option name="number" value="00548" />
      <option name="presentableId" value="LOCAL-00548" />
      <option name="project" value="LOCAL" />
      <updated>1606142593079</updated>
    </task>
    <task id="LOCAL-00549" summary="Solve hard and tricky find the median of a sliding window using two treeMap's &#10;&#10;Learnings -- 1. TreeMap can be used in place of priority queue in situations where removal is required as treeMap supports logn for removal&#10;2. firstKey() returns the first key of map, so in case of normal treeMap it returns the smallest key else in case of descending treeMap, it returns the largest key&#10;3. Take care while counting the elements in treeMap when used as priority queue because a no can occur more than 1.">
      <created>1606159637274</created>
      <option name="number" value="00549" />
      <option name="presentableId" value="LOCAL-00549" />
      <option name="project" value="LOCAL" />
      <updated>1606159637275</updated>
    </task>
    <task id="LOCAL-00550" summary="Add clarifications in the logic behind setting the bounds in recursion. Do note that the parent bounds must be obeyed">
      <created>1606222649518</created>
      <option name="number" value="00550" />
      <option name="presentableId" value="LOCAL-00550" />
      <option name="project" value="LOCAL" />
      <updated>1606222649518</updated>
    </task>
    <task id="LOCAL-00551" summary="Solve medium and tricky math problem find length of smallest integer with repeated 1's i.e 1, 11, 111, 1111, 11111, 111111.. that divides k&#10;&#10;We are required to return only the length as the actual no can be very huge. Since we can't store the number itself, we have to rely on current remainder to generate the remainder of the next no in series. That was a pretty cool math trick.&#10;&#10;Another trick is to realize that we can have only a finite set of remainders so sometimes remainders can repeat. When they do, we got ourselves an infinite loop. We have to use a set to keep track of seen remainders.">
      <created>1606312065267</created>
      <option name="number" value="00551" />
      <option name="presentableId" value="LOCAL-00551" />
      <option name="project" value="LOCAL" />
      <updated>1606312065267</updated>
    </task>
    <option name="localTasksCounter" value="552" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="text">
                    <value>
                      <list>
                        <option value="hard and tricky" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_WIDTH">
                <map>
                  <entry key="2" value="82" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Add problem statement in 132 pattern -- still surprised to see that I was able to solve that question in linear time on my own :D" />
    <MESSAGE value="Solve hard and tricky to optimize design search autocomplete system that provides top 3 sentences by hotness for current prefix.&#10;&#10;Learnings -- As the problem explicitly asked for finding all valid sentences that starts with a prefix, trie is the way to go. &#10;In my initial implementation I performed DFS at the last trie node and extracted out all valid sentences and then ranked them.&#10;Instead of performing DFS, a better way is to store the useful information directly at each node i.e store all the valid sentences directly at each trie node." />
    <MESSAGE value="Solve hard and tricky to optimize find words that starts with provided prefix and ends with provided suffix using two tries.&#10;&#10;Maintaining two tries was straight forward but then searching is a bit slow because now you will have to search in two tries and then filter out common indices. A fast solution is to directly insert all suffixes + delimiter + word in trie &#10;&#10;i.e for &quot;apple&quot;, store words like &quot;e{apple&quot;, &quot;le{apple&quot;, &quot;ple{apple&quot;, &quot;pple{apple&quot;, &quot;apple{apple&quot; in trie" />
    <MESSAGE value="Solve medium find whether the current string contains a permutation of a target string as a substring using sliding window template.&#10;&#10;Leveraged prior learnings of sliding window template. Here we are required to find the smallest valid window that is an anagram of target string. Keep expanding the window until the window has all the required chars of the target string. Then try to shrink the window to see if the window length can be reduced to target string length." />
    <MESSAGE value="Solve medium find all diagonal traversal of binary tree by keeping a key as the identifier of the diagonal. When going left, increment the key to signify start of a new diagonal, when going right, pass in the same key as current node.&#10;&#10;Keep a map to store all occurrences of nodes in every diagonal." />
    <MESSAGE value="Update code in FindAllAnagramInString to match the sliding window template" />
    <MESSAGE value="Add more problems related to sliding window" />
    <MESSAGE value="Solve medium and tricky find k closest elements by value to a target value in a sorted array using binary search + two pointers&#10;&#10;Learnings -- Erichto's binary search template is awesome. Best investment of my time to watch and understand that video. All binary search questions are now a breeze.&#10;&#10;In my initial solution I misinterpreted the problem and picked the k closest indices but the problem is asking for k closest elements by value, so need to use two pointer technique to pick elements accordingly." />
    <MESSAGE value="Solve medium and tricky to understand that the problem is asking for longest subarray with at most 2 distinct type of fruits&#10;&#10;Very happy to quickly solve this question on my own. Initially I was thinking of using recursion but after checking the bounds it seemed a bit difficult to get AC using recursion.&#10;&#10;Leveraged prior sliding window template." />
    <MESSAGE value="Solve medium find an element in rotated and sorted array using binary search&#10;&#10;Leveraged prior learnings to first find the minimum in sorted rotated array by comparing mid with the last element. Once found, array is partitioned into two sorted halves, check whether target lies in first or second half and perform binary search accordingly" />
    <MESSAGE value="Simplify code in find minimum in rotated and sorted array when duplicates present. &#10;&#10;Trick is to make sure the second half is smaller than first half ie. remove the elements in second half that overlaps with first half&#10;e.g. [3,3,1,3] =&gt; [3,3,1]&#10;&#10;Once done reduce the problem to solving it without duplicates and compare mid with the new last_idx" />
    <MESSAGE value="Solve medium and tricky problem search in rotated sorted array when duplicates are present by removing the overlapping elements in second half &#10;&#10;[1,1,3,1] =&gt; [1,1,3] &#10;&#10;Perform binary search accordingly in first half or second half depending upon which partition the target element lies in" />
    <MESSAGE value="Solve medium find a peak element in 1D array using errichto's binary search template.&#10;&#10;&#10;Finding a peak element in 2D array is trickier and uses divide and conquer algorithm" />
    <MESSAGE value="Rewrite the code by considering each element's choice; either be added to the current set or be skipped. &#10;&#10;Instead of trying all elements in a loop. I feel this is logically more clear to visualize rather than the loop solution." />
    <MESSAGE value="Solve hard and tricky count unique characters of all substrings possible of a given string in first attempt !&#10;&#10;Leveraged prior learnings of identifying the contribution of each character and then repeating the process for all characters to get the final result. Trick is to understand that each character is bounded by it's previous and next occurrence in the string." />
    <MESSAGE value="Solve medium and extremely tricky to deduce the crux of the problem -- find the min stone possible after smashing all the stones&#10;&#10;Learnings -- Initially I went with greedy which was against all judgement because the max input range was [1,30] hinting at exponential complexity based solution but my greedy was nlogn&#10;&#10;Problem reduces to finding the min diff between two subsets in an array" />
    <MESSAGE value="Solve medium print a linkedlist in reverse using sqrt(n) extra space by working on blocks of size sqrt. Create blocks containing sqrt(num) elements and reverse each block at a time.&#10;&#10;Learnings -- Introduction to sqrt decomposition in the most trivial question. Life works in mysterious ways." />
    <MESSAGE value="Solve medium count submatrices with all ones using 2D &quot;compression&quot; technique. Reduce the 2D problem to 1D. If there are n consecutive non zero element, no of subarrays would be n*(n+1)/2.&#10;&#10;Can be optimized to n^2 using monotonic stack but I don't fully understand this solution at the moment." />
    <MESSAGE value="Solve easy find the total weight of nested list by performing DFS and keeping track of current depth." />
    <MESSAGE value="Solve hard find the new max size of island after converting a 0 to 1 by using union find&#10;&#10;Learnings -- Was able to write union find code on my own by leveraging previous learnings. Thanks to the wonderful intro to Union Find in GraphValidTree" />
    <MESSAGE value="Solve medium and tricky find the min distance between two sets of islands using multi source bfs&#10;&#10;Learnings -- I could not initially think about the multi source bfs, &#10;&#10;Initially, I went ahead with normal bfs + keeping track of min distance. Then I got WA when a cell is reachable from multiple cells of first island. Then I thought instead of visited cell, I would need BFS with pruning i.e proceed ahead if I can reach a cell with min distance. Which got me AC at ~22ms&#10;&#10;Then I thought of multi source bfs by checking the implementation of RottingOranges, and it got me AC at ~9 ms&#10;&#10;Bidirectional BFS can reduce the runtime even lower" />
    <MESSAGE value="Solve hard find a number in mountain array using 3 binary searches, first find the peak element and then apply binary search in either of the partitions.&#10;&#10;Learnings -- For finding a number in modified sorted array always find the pivot element first. Then apply binary search in the partitions to find the target number." />
    <MESSAGE value="Solve hard and tricky find the median of a sliding window using two treeMap's &#10;&#10;Learnings -- 1. TreeMap can be used in place of priority queue in situations where removal is required as treeMap supports logn for removal&#10;2. firstKey() returns the first key of map, so in case of normal treeMap it returns the smallest key else in case of descending treeMap, it returns the largest key&#10;3. Take care while counting the elements in treeMap when used as priority queue because a no can occur more than 1." />
    <MESSAGE value="Add clarifications in the logic behind setting the bounds in recursion. Do note that the parent bounds must be obeyed" />
    <MESSAGE value="Solve medium and tricky math problem find length of smallest integer with repeated 1's i.e 1, 11, 111, 1111, 11111, 111111.. that divides k&#10;&#10;We are required to return only the length as the actual no can be very huge. Since we can't store the number itself, we have to rely on current remainder to generate the remainder of the next no in series. That was a pretty cool math trick.&#10;&#10;Another trick is to realize that we can have only a finite set of remainders so sometimes remainders can repeat. When they do, we got ourselves an infinite loop. We have to use a set to keep track of seen remainders." />
    <option name="LAST_COMMIT_MESSAGE" value="Solve medium and tricky math problem find length of smallest integer with repeated 1's i.e 1, 11, 111, 1111, 11111, 111111.. that divides k&#10;&#10;We are required to return only the length as the actual no can be very huge. Since we can't store the number itself, we have to rely on current remainder to generate the remainder of the next no in series. That was a pretty cool math trick.&#10;&#10;Another trick is to realize that we can have only a finite set of remainders so sometimes remainders can repeat. When they do, we got ourselves an infinite loop. We have to use a set to keep track of seen remainders." />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="726" y="229" key="#Auto_Import" timestamp="1599427305776">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="726" y="229" key="#Auto_Import/0.0.1920.1050@0.0.1920.1050" timestamp="1599427305776" />
    <state x="586" y="203" key="#Inspections" timestamp="1602866625843">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="586" y="203" key="#Inspections/0.0.1920.1050@0.0.1920.1050" timestamp="1602866625843" />
    <state x="727" y="349" key="#Notifications" timestamp="1598814073398">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="727" y="349" key="#Notifications/0.0.1920.1050@0.0.1920.1050" timestamp="1598814073398" />
    <state x="552" y="166" key="#Plugins" timestamp="1605009261465">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="166" key="#Plugins/0.0.1920.1050@0.0.1920.1050" timestamp="1605009261465" />
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser" timestamp="1606124245484">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1606124245484" />
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog" timestamp="1597609089094">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609089094" />
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog" timestamp="1600328299277">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1600328299277" />
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1597609083441">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609083441" />
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1604606328118">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1920.1050@0.0.1920.1050" timestamp="1604606328118" />
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog" timestamp="1597609092731">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092731" />
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1604840703273">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1604840703273" />
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1601403451266">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601403451266" />
    <state x="1378" y="422" key="#xdebugger.evaluate" timestamp="1603206721809">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="1378" y="422" key="#xdebugger.evaluate/0.0.1920.1050@0.0.1920.1050" timestamp="1603206721809" />
    <state x="491" y="29" width="1374" height="978" key="CommitChangelistDialog2" timestamp="1606312064610">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="491" y="29" width="1374" height="978" key="CommitChangelistDialog2/0.0.1920.1050@0.0.1920.1050" timestamp="1606312064610" />
    <state width="412" height="466" key="DebuggerActiveHint" timestamp="1599062046773">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="412" height="466" key="DebuggerActiveHint/0.0.1920.1050@0.0.1920.1050" timestamp="1599062046773" />
    <state width="456" height="442" key="Diff.GoToChangePopup" timestamp="1603722673482">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="456" height="442" key="Diff.GoToChangePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1603722673482" />
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog" timestamp="1606055262688">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1606055262688" />
    <state x="969" y="325" key="FileChooserDialogImpl" timestamp="1604517634549">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="969" y="325" key="FileChooserDialogImpl/0.0.1920.1050@0.0.1920.1050" timestamp="1604517634549" />
    <state width="1877" height="352" key="GridCell.Tab.0.bottom" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.0.center" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.0.left" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.0.right" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.1.bottom" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.1.center" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.center/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.1.left" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.left/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="352" key="GridCell.Tab.1.right" timestamp="1606224636775">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.right/0.0.1920.1050@0.0.1920.1050" timestamp="1606224636775" />
    <state width="1877" height="282" key="GridCell.Tab.2.bottom" timestamp="1605972491813">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.2.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1605972491813" />
    <state width="1877" height="282" key="GridCell.Tab.2.center" timestamp="1605972491813">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.2.center/0.0.1920.1050@0.0.1920.1050" timestamp="1605972491813" />
    <state width="1877" height="282" key="GridCell.Tab.2.left" timestamp="1605972491813">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.2.left/0.0.1920.1050@0.0.1920.1050" timestamp="1605972491813" />
    <state width="1877" height="282" key="GridCell.Tab.2.right" timestamp="1605972491813">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.2.right/0.0.1920.1050@0.0.1920.1050" timestamp="1605972491813" />
    <state x="540" y="268" key="IDE.errors.dialog" timestamp="1606224673327">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="540" y="268" key="IDE.errors.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1606224673327" />
    <state x="695" y="245" key="RollbackChangesDialog" timestamp="1598184917635">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="695" y="245" key="RollbackChangesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598184917635" />
    <state x="668" y="259" key="SettingsEditor" timestamp="1605479761668">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="668" y="259" key="SettingsEditor/0.0.1920.1050@0.0.1920.1050" timestamp="1605479761668" />
    <state x="681" y="266" width="570" height="524" key="StructurePopup" timestamp="1604434978061">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="681" y="266" width="570" height="524" key="StructurePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1604434978061" />
    <state width="498" height="446" key="SwitcherDM" timestamp="1606151991958">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="498" height="446" key="SwitcherDM/0.0.1920.1050@0.0.1920.1050" timestamp="1606151991958" />
    <state x="669" y="222" key="VCS.ChangeListViewerDialog" timestamp="1606041356204">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="669" y="222" key="VCS.ChangeListViewerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1606041356204" />
    <state x="807" y="439" key="VCS.ChangelistChooser" timestamp="1598799850245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="807" y="439" key="VCS.ChangelistChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1598799850245" />
    <state x="870" y="99" key="Vcs.Push.Dialog.v2" timestamp="1606312066273">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="870" y="99" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1606312066273" />
    <state x="775" y="303" key="chooseDestDirectoryDialog" timestamp="1597609092682">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="775" y="303" key="chooseDestDirectoryDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092682" />
    <state x="562" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1603744207245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="562" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1603744207245" />
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1606152657211">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1606152657211" />
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1603983886792">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1920.1050@0.0.1920.1050" timestamp="1603983886792" />
    <state x="690" y="275" key="extract.method.dialog" timestamp="1604653793268">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="275" key="extract.method.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1604653793268" />
    <state x="667" y="258" width="1045" height="624" key="find.popup" timestamp="1606062861866">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="667" y="258" width="1045" height="624" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1606062861866" />
    <state width="750" height="232" key="javadoc.popup.new" timestamp="1606316687517">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="750" height="232" key="javadoc.popup.new/0.0.1920.1050@0.0.1920.1050" timestamp="1606316687517" />
    <state x="551" y="145" key="new project wizard" timestamp="1606165512459">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="551" y="145" key="new project wizard/0.0.1920.1050@0.0.1920.1050" timestamp="1606165512459" />
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog" timestamp="1605974591167">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1605974591167" />
    <state x="616" y="243" width="672" height="677" key="run.anything.popup" timestamp="1606124609224">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="616" y="243" width="672" height="677" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1606124609224" />
    <state x="623" y="227" width="766" height="650" key="search.everywhere.popup" timestamp="1606324319074">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="623" y="227" width="766" height="650" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1606324319074" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/DistinctSubsequences.java</url>
          <line>78</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/SortColors.java</url>
          <line>29</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/GeneralizedAbbreviations.java</url>
          <line>33</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <condition expression="this instanceof StringIndexOutOfBoundsException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
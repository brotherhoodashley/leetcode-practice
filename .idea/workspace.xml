<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="Solve easy find sum of all root to leaf binary path by storing the current path as base2 to avoid storing the path in a list.&#10;&#10;Learnings -- Trick to avoid extra space was to directly store the current path as base2.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ShortestUnsortedContinuousSubarray.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ShortestUnsortedContinuousSubarray.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="1111111111111111111111111." />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.codota.intellij.common.configuration.CodotaConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="alternate" />
      <recent name="common" />
      <recent name="" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.TargetNumberWithOperationsTest">
    <configuration name="ContainsDuplicate3Test.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="ContainsDuplicate3Test" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LRUCacheTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="LRUCacheTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TargetNumberWithOperationsTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TargetNumberWithOperationsTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TargetNumberWithOperationsTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="TargetNumberWithOperationsTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch (1)" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch_1.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Java Scratch.Scratch (1)" />
      <item itemvalue="JUnit.Unnamed" />
      <item itemvalue="JUnit.ContainsDuplicate3Test.test" />
      <item itemvalue="JUnit.LRUCacheTest.test" />
      <item itemvalue="JUnit.TargetNumberWithOperationsTest.test" />
      <item itemvalue="JUnit.TargetNumberWithOperationsTest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.TargetNumberWithOperationsTest" />
        <item itemvalue="Java Scratch.Scratch (1)" />
        <item itemvalue="JUnit.TargetNumberWithOperationsTest.test" />
        <item itemvalue="JUnit.LRUCacheTest.test" />
        <item itemvalue="JUnit.ContainsDuplicate3Test.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00236" summary="Solve hard find whether valid word in stream of characters by using trie and storing the words in trie in reverse order as trie does not support reverse search.&#10;&#10;Learnings -- Whenever provided with a dictionary think of trie / bfs. Here the trick was to reverse the word and store in trie.">
      <created>1598198290336</created>
      <option name="number" value="00236" />
      <option name="presentableId" value="LOCAL-00236" />
      <option name="project" value="LOCAL" />
      <updated>1598198290336</updated>
    </task>
    <task id="LOCAL-00237" summary="Solve medium reorganize strings by placing different characters in adjacent position in first attempt. &#10;&#10;Similar to Task Scheduler problem. Use Heap and place one character and check if a different character is available to be placed.">
      <created>1598302458772</created>
      <option name="number" value="00237" />
      <option name="presentableId" value="LOCAL-00237" />
      <option name="project" value="LOCAL" />
      <updated>1598302458772</updated>
    </task>
    <task id="LOCAL-00238" summary="Solve medium min cost to buy tickets if three choices available, you can buy 1 day, 7 day, 30 days pass using bottom up DP&#10;&#10;Find the first day outside of the 7 day or 30 day window, find the min cost at that day and add the cost to buy respective pass.">
      <created>1598369438326</created>
      <option name="number" value="00238" />
      <option name="presentableId" value="LOCAL-00238" />
      <option name="project" value="LOCAL" />
      <updated>1598369438326</updated>
    </task>
    <task id="LOCAL-00239" summary="Solve medium string transformation question -- find and replace in string. Given multiple sources substrings, you have to replace them with corresponding target substring.&#10;&#10;Learnings -- Logic was simple but implementation had some gotchas, like to skip all the characters of source substring once a match is found">
      <created>1598370496628</created>
      <option name="number" value="00239" />
      <option name="presentableId" value="LOCAL-00239" />
      <option name="project" value="LOCAL" />
      <updated>1598370496628</updated>
    </task>
    <task id="LOCAL-00240" summary="Solve medium find whether contiguous block of 1 with size m exists, provided we can switch bit from 0 to 1 multiple times using Union Find algorithm&#10;&#10;Learnings -- Learnt a super cool jutsu, union find algorithm. Post that question boiled down to keep track of set sizes along with keeping count of how many set of sizes 1,2,3.. occurs">
      <created>1598373228525</created>
      <option name="number" value="00240" />
      <option name="presentableId" value="LOCAL-00240" />
      <option name="project" value="LOCAL" />
      <updated>1598373228525</updated>
    </task>
    <task id="LOCAL-00241" summary="Solve easy verifying whether alien words are sorted or not given their alien dictionary.&#10;&#10;Learnings -- Meaning of sorted lexicographically">
      <created>1598707434673</created>
      <option name="number" value="00241" />
      <option name="presentableId" value="LOCAL-00241" />
      <option name="project" value="LOCAL" />
      <updated>1598707434674</updated>
    </task>
    <task id="LOCAL-00242" summary="Solve medium find next right interval given a set of intervals using binary search and sorting&#10;&#10;Leanings -- Implementation details of binary search. When the key is greater than the largest value prsent in the array, it returns - (size of array) - 1&#10;Care must be taken to handle this, because converting this to positive number will return an index out of bounds.&#10;&#10;Also if there are multiple occurrences of the key present in the array, any one of them can be returned. So need to manually traverse back and find the first occurrence.">
      <created>1598709005864</created>
      <option name="number" value="00242" />
      <option name="presentableId" value="LOCAL-00242" />
      <option name="project" value="LOCAL" />
      <updated>1598709005864</updated>
    </task>
    <task id="LOCAL-00243" summary="Solve medium generate rand10 from rand7 using rejection sampling. Math is hard&#10;&#10;Learning -- Rejection sampling, if your intended result is outside the expected range, reject it and sample it again. If the input is uniform, then the output should also be uniform.">
      <created>1598710104258</created>
      <option name="number" value="00243" />
      <option name="presentableId" value="LOCAL-00243" />
      <option name="project" value="LOCAL" />
      <updated>1598710104258</updated>
    </task>
    <task id="LOCAL-00244" summary="Solve medium find longest subarray where min and max number lies within a limit in linear time using deque and in nlogn time using treeMap&#10;&#10;Learning -- Nlogn implementation was easy to implement. Maintain a sliding window and add elements to treeMap. Keep checking the constraints by getting the min and max of window using firstKey() and lastKey()&#10;&#10;Linear time implementation was tricky as it requires two deque to track sliding min and max element of the window. If the min and max diff does not satisy constraint, shorten the window by comparing whether the num at begin index is present, then pollFirst(). Can't directly pollFirst() because we won't be able to identify the new window length by doing so. Hence need to iteratively check the begin element and shorten by 1 repeatedly.">
      <created>1598716248569</created>
      <option name="number" value="00244" />
      <option name="presentableId" value="LOCAL-00244" />
      <option name="project" value="LOCAL" />
      <updated>1598716248569</updated>
    </task>
    <task id="LOCAL-00245" summary="Solve hard find the maximum number for all sliding windows in linear time using deque. Related to find max length of subarray whose diff of min and max element lies within a limit&#10;&#10;Learning -- Sliding window implementation using deque.">
      <created>1598718325500</created>
      <option name="number" value="00245" />
      <option name="presentableId" value="LOCAL-00245" />
      <option name="project" value="LOCAL" />
      <updated>1598718325500</updated>
    </task>
    <task id="LOCAL-00246" summary="Solve hard find the max subsequence sum such that any two indices in the subsequences are max k distance apart using brute force, treemap and monotonic deque&#10;&#10;Learnings -- When there are k options to choose from at each state, DP or recursion is always the answer. Here I have optimized the N*K dp solution using TreeMap and Deque to reduce time complexity">
      <created>1598726021651</created>
      <option name="number" value="00246" />
      <option name="presentableId" value="LOCAL-00246" />
      <option name="project" value="LOCAL" />
      <updated>1598726021651</updated>
    </task>
    <task id="LOCAL-00247" summary="Solve medium yet another subarray problem by sliding window. Maximise the sum by either picking the first or the last number&#10;&#10;Learning -- Google loves sliding window problem. This problem can be converted to a min sliding window sum problem.">
      <created>1598742004638</created>
      <option name="number" value="00247" />
      <option name="presentableId" value="LOCAL-00247" />
      <option name="project" value="LOCAL" />
      <updated>1598742004639</updated>
    </task>
    <task id="LOCAL-00248" summary="Solve medium minimum no of fibonacci numbers required to reach sum k using BFS and greedy. Find the biggest fibonacci &lt;= k&#10;&#10;Learnings -- In case of large input constraints, think of greedy if can't allocate that much memory in DP solution.">
      <created>1598793993489</created>
      <option name="number" value="00248" />
      <option name="presentableId" value="LOCAL-00248" />
      <option name="project" value="LOCAL" />
      <updated>1598793993489</updated>
    </task>
    <task id="LOCAL-00249" summary="Add gotcha around using greedy to find min no of numbers required to reach n -- it only works for fibonacci and is not a generic solution. Tried on perfect squares, does not work. Generic solution is BFS.">
      <created>1598794544823</created>
      <option name="number" value="00249" />
      <option name="presentableId" value="LOCAL-00249" />
      <option name="project" value="LOCAL" />
      <updated>1598794544823</updated>
    </task>
    <task id="LOCAL-00250" summary="Solve medium return string with valid parenthesis after removing min no of unbalanced brackets using stack&#10;&#10;Learnings -- Keep track of unbalanced brackets with their index. Reiterate the input string and add only those characters in the result whose index are not present in the unbalanced indices set.">
      <created>1598798173277</created>
      <option name="number" value="00250" />
      <option name="presentableId" value="LOCAL-00250" />
      <option name="project" value="LOCAL" />
      <updated>1598798173277</updated>
    </task>
    <task id="LOCAL-00251" summary="Amend previous commit -- Add the actual file">
      <created>1598800003929</created>
      <option name="number" value="00251" />
      <option name="presentableId" value="LOCAL-00251" />
      <option name="project" value="LOCAL" />
      <updated>1598800003929</updated>
    </task>
    <task id="LOCAL-00252" summary="Solve medium remove sub folders from a list of folder hierarchy by representing folders as trie and discarding the subfolders under a common folder&#10;&#10;Learnings -- Folder hierarchy can be represented as trie.">
      <created>1598812496114</created>
      <option name="number" value="00252" />
      <option name="presentableId" value="LOCAL-00252" />
      <option name="project" value="LOCAL" />
      <updated>1598812496114</updated>
    </task>
    <task id="LOCAL-00253" summary="Solve medium find minimum no of steps required to transform one word to another provided we can only replace one character in the word and the transformation should be valid ie. the transformed word should exist in the dictionary&#10;&#10;Learning -- During my original implementation, I chickened out thinking that the implementation is too complex for this medium level of problem and I might be going in the wrong direction but I was wrong. Although it was a bit slow than pre-processing all the dictionary, it was still a valid solution.&#10;&#10;If you are transforming a string by replacing some characters, instead of using substring to concatenate left and right part, get the charArray() and then replace the characters at the required indices directly. Cleaner to implement.">
      <created>1598821969495</created>
      <option name="number" value="00253" />
      <option name="presentableId" value="LOCAL-00253" />
      <option name="project" value="LOCAL" />
      <updated>1598821969495</updated>
    </task>
    <task id="LOCAL-00254" summary="Solve easy check whether a string is palindrome or not after deleting at most one character &#10;&#10;Learning -- Recursion is fun. Tried both options, in case of mismatch, ignore the begin character and check if remaining string is palindrome OR ignore the end character">
      <created>1598890790961</created>
      <option name="number" value="00254" />
      <option name="presentableId" value="LOCAL-00254" />
      <option name="project" value="LOCAL" />
      <updated>1598890790962</updated>
    </task>
    <task id="LOCAL-00255" summary="Solve easy generate largest time possible from given digits using recursion with backtracking&#10;&#10;Learning -- Initially I implemented greedy solution in which I tried to place the largest possible candidate at first digit and so on, which failed for {2,0,6,6}&#10;Then I moved on to recursion + backtracking. Generally all problems in which we have to generate some valid combinations are solved via recursion + backtracking.">
      <created>1598951670607</created>
      <option name="number" value="00255" />
      <option name="presentableId" value="LOCAL-00255" />
      <option name="project" value="LOCAL" />
      <updated>1598951670608</updated>
    </task>
    <task id="LOCAL-00256" summary="Solve medium find whether two binary trees are flip equivalents i.e. if they can be made equivalent by flipping any node (swapping left and right pointer)&#10;&#10;Learnings -- Got confused during implementation, still made it ! Every non null node has two options, either the children are flipped or not. Compare the children accordingly.">
      <created>1598970581541</created>
      <option name="number" value="00256" />
      <option name="presentableId" value="LOCAL-00256" />
      <option name="project" value="LOCAL" />
      <updated>1598970581541</updated>
    </task>
    <task id="LOCAL-00257" summary="Update SymmetricTree with problem statement and simplify if/else">
      <created>1598970642239</created>
      <option name="number" value="00257" />
      <option name="presentableId" value="LOCAL-00257" />
      <option name="project" value="LOCAL" />
      <updated>1598970642239</updated>
    </task>
    <task id="LOCAL-00258" summary="Solve medium KnightDialler problem, find total no of valid moves possible of required length in a dial pad&#10;&#10;Learning -- As this problem asked for total no of moves, recursion was the way to go. Added memoization to fasten it up.&#10;&#10;Thought of time complexity of the recursion problem with and without memoization, disadvantages of top down recursion.">
      <created>1598976358392</created>
      <option name="number" value="00258" />
      <option name="presentableId" value="LOCAL-00258" />
      <option name="project" value="LOCAL" />
      <updated>1598976358392</updated>
    </task>
    <task id="LOCAL-00259" summary="Update comment in ContainsDuplicate3, very tricky problem&#10;&#10;Tried checking the diff between the smallest and second smallest element, whether the diff lies within maxDiff but it does not work because maybe second smallest and third smallest elements diff were within range.&#10;&#10;Hence the best thing would be to just iterate over all the input elements and check whether any element is present in window &gt;= (current element - maxDiff)">
      <created>1599056242559</created>
      <option name="number" value="00259" />
      <option name="presentableId" value="LOCAL-00259" />
      <option name="project" value="LOCAL" />
      <updated>1599056242559</updated>
    </task>
    <task id="LOCAL-00260" summary="Solve easy but tricky remove nodes whose values are outside a given range in the provided BST&#10;&#10;Learnings -- I solved the problem on my own but it took time. In case of removal of nodes, it makes sense to directly recur in the appropriate half of subtree and return the first valid node">
      <created>1599057697913</created>
      <option name="number" value="00260" />
      <option name="presentableId" value="LOCAL-00260" />
      <option name="project" value="LOCAL" />
      <updated>1599057697913</updated>
    </task>
    <task id="LOCAL-00261" summary="Solve medium find total no of ways to make total amount of sum if a coin can be used multiple amount of times using memoization and bottom up DP&#10;&#10;Learnings -- Bottom up DP theory : If my current coin is 10 and I can reach 8 in 5 different ways, this enables me to reach 18 in +5 different ways too.">
      <created>1599065074008</created>
      <option name="number" value="00261" />
      <option name="presentableId" value="LOCAL-00261" />
      <option name="project" value="LOCAL" />
      <updated>1599065074008</updated>
    </task>
    <task id="LOCAL-00262" summary="Solve medium change making problem, find min no of coins required to make sum using top-down and bottom up approach&#10;&#10;Learnings -- Be careful when converting recursion to top down memoization and make sure that it's actually top down, during my initial implementation I implemented it wrong. I started from 0 till max amount, which led to incorrect results being stored in intermediate dp.&#10;&#10;Although I solved up the bottom up DP quickly, top down DP became tricky.">
      <created>1599078999184</created>
      <option name="number" value="00262" />
      <option name="presentableId" value="LOCAL-00262" />
      <option name="project" value="LOCAL" />
      <updated>1599078999184</updated>
    </task>
    <task id="LOCAL-00263" summary="Update problem statement in CoinChange2">
      <created>1599081624111</created>
      <option name="number" value="00263" />
      <option name="presentableId" value="LOCAL-00263" />
      <option name="project" value="LOCAL" />
      <updated>1599081624111</updated>
    </task>
    <task id="LOCAL-00264" summary="Solve medium find total no of ways to reach end if their are obstacles in grid using bottom up DP&#10;&#10;Learnings -- Trick was to correctly generate the base case of first row and first column and to reset the count if their is an obstacle.">
      <created>1599163353480</created>
      <option name="number" value="00264" />
      <option name="presentableId" value="LOCAL-00264" />
      <option name="project" value="LOCAL" />
      <updated>1599163353480</updated>
    </task>
    <task id="LOCAL-00265" summary="Solve easy but tricky find whether a string is composed of repeated substrings by checking all the occurrences of the first character and generating substrings&#10;&#10;Learning -- Initially I was thinking of checking substrings of length 2,3,4... and to see whether the input string length is a multiplier of substring length. If yes multiply the substring and check whether the expected string matches the input string. Then I thought it would be slow, but after solving it and moving on to discuss, realized that that was one of the most upvoted solutions. FML.">
      <created>1599163631492</created>
      <option name="number" value="00265" />
      <option name="presentableId" value="LOCAL-00265" />
      <option name="project" value="LOCAL" />
      <updated>1599163631492</updated>
    </task>
    <task id="LOCAL-00266" summary="Solve medium and tricky problem, divide the current string into substrings such that there are no common characters in any substrings by reducing the problem to merge non-overlapping intervals&#10;&#10;Learnings -- Be careful with list.add(index, value) vs list.set(index, value). Former one just adds the value at the index, it does not replace it.">
      <created>1599235578357</created>
      <option name="number" value="00266" />
      <option name="presentableId" value="LOCAL-00266" />
      <option name="project" value="LOCAL" />
      <updated>1599235578357</updated>
    </task>
    <task id="LOCAL-00267" summary="Solve medium but tricky problem to implement LRU cache using HashMap and DoublyLinkedList using dummy head and tail node&#10;&#10;Learnings --&#10;1. Dummy nodes are useful in all cases in which we need to add/remove elements from linked list&#10;2. During my initial implementation I got stuck while implementing my own hashMap, I didn't think of the fact that I could use the inbuilt hashMap">
      <created>1599254126941</created>
      <option name="number" value="00267" />
      <option name="presentableId" value="LOCAL-00267" />
      <option name="project" value="LOCAL" />
      <updated>1599254126941</updated>
    </task>
    <task id="LOCAL-00268" summary="Solve medium find min cost to delete characters to avoid repeating characters &#10;&#10;The trick was to understand that we need to keep only the character with the maximum cost, rest all needs to be deleted.">
      <created>1599423208650</created>
      <option name="number" value="00268" />
      <option name="presentableId" value="LOCAL-00268" />
      <option name="project" value="LOCAL" />
      <updated>1599423208650</updated>
    </task>
    <task id="LOCAL-00269" summary="Solve BinarySearch.io google easy find whether a tree is a subtree in another tree. Also any node of that tree can be optionally flipped. Very similar to FlipBinaryTrees of LeetCode.">
      <created>1599426744551</created>
      <option name="number" value="00269" />
      <option name="presentableId" value="LOCAL-00269" />
      <option name="project" value="LOCAL" />
      <updated>1599426744551</updated>
    </task>
    <task id="LOCAL-00270" summary="Solved medium BinarySearch.io count no of ways to partition a binary tree such that both the partitions contains either 0's or 1's&#10;&#10;Learning -- Partition problems have a pattern. First iterate the entire tree to get total no of 0's and 1's. Then do a postorder traversal and let parent node decide whether to cut edge of left/right subtree. Here the decision is made if the subtree contains all the 1's and no 0's and vice versa.">
      <created>1599429370530</created>
      <option name="number" value="00270" />
      <option name="presentableId" value="LOCAL-00270" />
      <option name="project" value="LOCAL" />
      <updated>1599429370530</updated>
    </task>
    <task id="LOCAL-00271" summary="Solve medium jump game, find whether it's possible to reach the end from start provided we can hop to only specific indices.&#10;&#10;Learning -- Was able to solve the problem in O(n^2) using simple bottom up DP. Linear way of solving would be to keep track of the maximum index reachable. If maximum index &gt;= last index, we got ourselves a winner.">
      <created>1599431090761</created>
      <option name="number" value="00271" />
      <option name="presentableId" value="LOCAL-00271" />
      <option name="project" value="LOCAL" />
      <updated>1599431090762</updated>
    </task>
    <task id="LOCAL-00272" summary="Solve easy word pattern, similar to finding whether two strings are isomorphic or not. &#10;&#10;Learnings -- Use two hashmaps to keep track of source to target mapping and vice versa.">
      <created>1599490597687</created>
      <option name="number" value="00272" />
      <option name="presentableId" value="LOCAL-00272" />
      <option name="project" value="LOCAL" />
      <updated>1599490597687</updated>
    </task>
    <task id="LOCAL-00273" summary="Solve easy find whether a string is rotated version of another string&#10;&#10;Learnings -- contains() time complexity is not linear.">
      <created>1599494070147</created>
      <option name="number" value="00273" />
      <option name="presentableId" value="LOCAL-00273" />
      <option name="project" value="LOCAL" />
      <updated>1599494070147</updated>
    </task>
    <task id="LOCAL-00274" summary="Solve medium compare two version numbers of the form 1.213.123.3 by comparing strings numerically. Care must be taken to remove leading zeroes before comparison.&#10;&#10;Learning -- Removal of leading zeroes.">
      <created>1599499954534</created>
      <option name="number" value="00274" />
      <option name="presentableId" value="LOCAL-00274" />
      <option name="project" value="LOCAL" />
      <updated>1599499954535</updated>
    </task>
    <task id="LOCAL-00275" summary="Solve medium find all disjoint group of friends by performing DFS from each friend and marking all the friends reachable as visited.">
      <created>1599502528981</created>
      <option name="number" value="00275" />
      <option name="presentableId" value="LOCAL-00275" />
      <option name="project" value="LOCAL" />
      <updated>1599502528981</updated>
    </task>
    <task id="LOCAL-00276" summary="Solve easy find sum of all root to leaf binary path by storing the current path as base2 to avoid storing the path in a list.&#10;&#10;Learnings -- Trick to avoid extra space was to directly store the current path as base2.">
      <created>1599582874393</created>
      <option name="number" value="00276" />
      <option name="presentableId" value="LOCAL-00276" />
      <option name="project" value="LOCAL" />
      <updated>1599582874393</updated>
    </task>
    <task id="LOCAL-00277" summary="Solve medium check if a 'O' inner node is able to connect with a border 'O'. Trick was to do DFS from the border nodes instead of the inner nodes. &#10;&#10;Learning -- In questions dealing with whether a list of source nodes can reach any target nodes, it's better to do DFS from target nodes and mark all reachable nodes.">
      <created>1599583888793</created>
      <option name="number" value="00277" />
      <option name="presentableId" value="LOCAL-00277" />
      <option name="project" value="LOCAL" />
      <updated>1599583888793</updated>
    </task>
    <task id="LOCAL-00278" summary="Solve easy decode a run length encoded string by parsing string&#10;&#10;Learnings -- Whenever a string has numbers in it and you are parsing it, remember that a number can have multiple digits.&#10;(During my initial implementation I forgot about it and got WA)&#10;A String can be converted into integer while traversing the string without storing the digits in a list">
      <created>1599585277123</created>
      <option name="number" value="00278" />
      <option name="presentableId" value="LOCAL-00278" />
      <option name="project" value="LOCAL" />
      <updated>1599585277123</updated>
    </task>
    <task id="LOCAL-00279" summary="Add TODO to solve FriendGroups using UnionFind algorithm.">
      <created>1599587238651</created>
      <option name="number" value="00279" />
      <option name="presentableId" value="LOCAL-00279" />
      <option name="project" value="LOCAL" />
      <updated>1599587238651</updated>
    </task>
    <task id="LOCAL-00280" summary="Solve easy find min steps to reach a target number if you can either double the input or increment it by 1&#10;&#10;Learnings -- In case of problems dealing with find min no of steps to reach start from end, sometimes its prudent to traverse in reverse.">
      <created>1599758929451</created>
      <option name="number" value="00280" />
      <option name="presentableId" value="LOCAL-00280" />
      <option name="project" value="LOCAL" />
      <updated>1599758929451</updated>
    </task>
    <task id="LOCAL-00281" summary="Solve easy check whether a matrix is valid toeplitz matrix or not i.e whether all the elements present in all the left diagonals are equal or not.&#10;&#10;In my initial approach I did it by storing the leader of all the left diagonals. All the elements belonging to the same left diagonal has same value of (i-j).&#10;&#10;But we don't need to go all this way, we can just iterate the matrix and compare the top left diagonal element during traversal.">
      <created>1599765850411</created>
      <option name="number" value="00281" />
      <option name="presentableId" value="LOCAL-00281" />
      <option name="project" value="LOCAL" />
      <updated>1599765850411</updated>
    </task>
    <task id="LOCAL-00282" summary="Solve easy find all unique rotation groups of a set of strings by keeping track of unique rotation group and checking if current word is part of existing rotation group.&#10;&#10;Learnings -- How to check rotations of a string.">
      <created>1599766628554</created>
      <option name="number" value="00282" />
      <option name="presentableId" value="LOCAL-00282" />
      <option name="project" value="LOCAL" />
      <updated>1599766628554</updated>
    </task>
    <task id="LOCAL-00283" summary="Update solution for RectangleOverlap to include awice@ trick to find whether two line segments intersect.&#10;&#10;awice@ is legend.">
      <created>1599776938066</created>
      <option name="number" value="00283" />
      <option name="presentableId" value="LOCAL-00283" />
      <option name="project" value="LOCAL" />
      <updated>1599776938066</updated>
    </task>
    <task id="LOCAL-00284" summary="Solve find max product subarray by keeping track of the max prefix / suffix subarray product.&#10;&#10;Learnings -- During my thought process of solving the problem, I incorrectly calculated that the max product subarray can be a middle subarray, otherwise I would have been on to something :(&#10;Trick was to understand that max product subarray can only start from the front or from the end. Take some examples of array with 1 -ve, 2 -ve and 3 -ve and you will understand why.">
      <created>1599865641583</created>
      <option name="number" value="00284" />
      <option name="presentableId" value="LOCAL-00284" />
      <option name="project" value="LOCAL" />
      <updated>1599865641583</updated>
    </task>
    <option name="localTasksCounter" value="285" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_WIDTH">
                <map>
                  <entry key="2" value="82" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="1" value="TOOL_WINDOW" />
        <entry key="2" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Solve easy but tricky remove nodes whose values are outside a given range in the provided BST&#10;&#10;Learnings -- I solved the problem on my own but it took time. In case of removal of nodes, it makes sense to directly recur in the appropriate half of subtree and return the first valid node" />
    <MESSAGE value="Solve medium find total no of ways to make total amount of sum if a coin can be used multiple amount of times using memoization and bottom up DP&#10;&#10;Learnings -- Bottom up DP theory : If my current coin is 10 and I can reach 8 in 5 different ways, this enables me to reach 18 in +5 different ways too." />
    <MESSAGE value="Solve medium change making problem, find min no of coins required to make sum using top-down and bottom up approach&#10;&#10;Learnings -- Be careful when converting recursion to top down memoization and make sure that it's actually top down, during my initial implementation I implemented it wrong. I started from 0 till max amount, which led to incorrect results being stored in intermediate dp.&#10;&#10;Although I solved up the bottom up DP quickly, top down DP became tricky." />
    <MESSAGE value="Update problem statement in CoinChange2" />
    <MESSAGE value="Solve medium find total no of ways to reach end if their are obstacles in grid using bottom up DP&#10;&#10;Learnings -- Trick was to correctly generate the base case of first row and first column and to reset the count if their is an obstacle." />
    <MESSAGE value="Solve easy but tricky find whether a string is composed of repeated substrings by checking all the occurrences of the first character and generating substrings&#10;&#10;Learning -- Initially I was thinking of checking substrings of length 2,3,4... and to see whether the input string length is a multiplier of substring length. If yes multiply the substring and check whether the expected string matches the input string. Then I thought it would be slow, but after solving it and moving on to discuss, realized that that was one of the most upvoted solutions. FML." />
    <MESSAGE value="Solve medium and tricky problem, divide the current string into substrings such that there are no common characters in any substrings by reducing the problem to merge non-overlapping intervals&#10;&#10;Learnings -- Be careful with list.add(index, value) vs list.set(index, value). Former one just adds the value at the index, it does not replace it." />
    <MESSAGE value="Solve medium but tricky problem to implement LRU cache using HashMap and DoublyLinkedList using dummy head and tail node&#10;&#10;Learnings --&#10;1. Dummy nodes are useful in all cases in which we need to add/remove elements from linked list&#10;2. During my initial implementation I got stuck while implementing my own hashMap, I didn't think of the fact that I could use the inbuilt hashMap" />
    <MESSAGE value="Solve medium find min cost to delete characters to avoid repeating characters &#10;&#10;The trick was to understand that we need to keep only the character with the maximum cost, rest all needs to be deleted." />
    <MESSAGE value="Solve BinarySearch.io google easy find whether a tree is a subtree in another tree. Also any node of that tree can be optionally flipped. Very similar to FlipBinaryTrees of LeetCode." />
    <MESSAGE value="Solved medium BinarySearch.io count no of ways to partition a binary tree such that both the partitions contains either 0's or 1's&#10;&#10;Learning -- Partition problems have a pattern. First iterate the entire tree to get total no of 0's and 1's. Then do a postorder traversal and let parent node decide whether to cut edge of left/right subtree. Here the decision is made if the subtree contains all the 1's and no 0's and vice versa." />
    <MESSAGE value="Solve medium jump game, find whether it's possible to reach the end from start provided we can hop to only specific indices.&#10;&#10;Learning -- Was able to solve the problem in O(n^2) using simple bottom up DP. Linear way of solving would be to keep track of the maximum index reachable. If maximum index &gt;= last index, we got ourselves a winner." />
    <MESSAGE value="Solve easy word pattern, similar to finding whether two strings are isomorphic or not. &#10;&#10;Learnings -- Use two hashmaps to keep track of source to target mapping and vice versa." />
    <MESSAGE value="Solve easy find whether a string is rotated version of another string&#10;&#10;Learnings -- contains() time complexity is not linear." />
    <MESSAGE value="Solve medium compare two version numbers of the form 1.213.123.3 by comparing strings numerically. Care must be taken to remove leading zeroes before comparison.&#10;&#10;Learning -- Removal of leading zeroes." />
    <MESSAGE value="Solve medium find all disjoint group of friends by performing DFS from each friend and marking all the friends reachable as visited." />
    <MESSAGE value="Solve easy find sum of all root to leaf binary path by storing the current path as base2 to avoid storing the path in a list.&#10;&#10;Learnings -- Trick to avoid extra space was to directly store the current path as base2." />
    <MESSAGE value="Solve medium check if a 'O' inner node is able to connect with a border 'O'. Trick was to do DFS from the border nodes instead of the inner nodes. &#10;&#10;Learning -- In questions dealing with whether a list of source nodes can reach any target nodes, it's better to do DFS from target nodes and mark all reachable nodes." />
    <MESSAGE value="Solve easy decode a run length encoded string by parsing string&#10;&#10;Learnings -- Whenever a string has numbers in it and you are parsing it, remember that a number can have multiple digits.&#10;(During my initial implementation I forgot about it and got WA)&#10;A String can be converted into integer while traversing the string without storing the digits in a list" />
    <MESSAGE value="Add TODO to solve FriendGroups using UnionFind algorithm." />
    <MESSAGE value="Solve easy find min steps to reach a target number if you can either double the input or increment it by 1&#10;&#10;Learnings -- In case of problems dealing with find min no of steps to reach start from end, sometimes its prudent to traverse in reverse." />
    <MESSAGE value="Solve easy check whether a matrix is valid toeplitz matrix or not i.e whether all the elements present in all the left diagonals are equal or not.&#10;&#10;In my initial approach I did it by storing the leader of all the left diagonals. All the elements belonging to the same left diagonal has same value of (i-j).&#10;&#10;But we don't need to go all this way, we can just iterate the matrix and compare the top left diagonal element during traversal." />
    <MESSAGE value="Solve easy find all unique rotation groups of a set of strings by keeping track of unique rotation group and checking if current word is part of existing rotation group.&#10;&#10;Learnings -- How to check rotations of a string." />
    <MESSAGE value="Update solution for RectangleOverlap to include awice@ trick to find whether two line segments intersect.&#10;&#10;awice@ is legend." />
    <MESSAGE value="Solve find max product subarray by keeping track of the max prefix / suffix subarray product.&#10;&#10;Learnings -- During my thought process of solving the problem, I incorrectly calculated that the max product subarray can be a middle subarray, otherwise I would have been on to something :(&#10;Trick was to understand that max product subarray can only start from the front or from the end. Take some examples of array with 1 -ve, 2 -ve and 3 -ve and you will understand why." />
    <option name="LAST_COMMIT_MESSAGE" value="Solve find max product subarray by keeping track of the max prefix / suffix subarray product.&#10;&#10;Learnings -- During my thought process of solving the problem, I incorrectly calculated that the max product subarray can be a middle subarray, otherwise I would have been on to something :(&#10;Trick was to understand that max product subarray can only start from the front or from the end. Take some examples of array with 1 -ve, 2 -ve and 3 -ve and you will understand why." />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="726" y="229" key="#Auto_Import" timestamp="1599427305776">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="726" y="229" key="#Auto_Import/0.0.1920.1050@0.0.1920.1050" timestamp="1599427305776" />
    <state x="552" y="183" width="816" height="729" key="#Intentions" timestamp="1592860555493">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="183" width="816" height="729" key="#Intentions/0.0.1920.1050@0.0.1920.1050" timestamp="1592860555493" />
    <state x="727" y="349" key="#Notifications" timestamp="1598814073398">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="727" y="349" key="#Notifications/0.0.1920.1050@0.0.1920.1050" timestamp="1598814073398" />
    <state x="552" y="166" key="#Plugins" timestamp="1598814068976">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="166" key="#Plugins/0.0.1920.1050@0.0.1920.1050" timestamp="1598814068976" />
    <state x="552" y="183" key="#Project_Structure" timestamp="1594324360886">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="183" key="#Project_Structure/0.0.1920.1050@0.0.1920.1050" timestamp="1594324360886" />
    <state x="540" y="380" key="#com.intellij.debugger.ui.breakpoints.EditClassFiltersDialog" timestamp="1592130861520">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="540" y="380" key="#com.intellij.debugger.ui.breakpoints.EditClassFiltersDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1592130861520" />
    <state x="414" y="180" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1592165013412">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="414" y="180" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1592165013412" />
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser" timestamp="1599244193353">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1599244193353" />
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog" timestamp="1597609089094">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609089094" />
    <state x="689" y="315" key="#com.intellij.ide.util.TreeClassChooserDialog" timestamp="1592130784851">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="689" y="315" key="#com.intellij.ide.util.TreeClassChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1592130784851" />
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog" timestamp="1594451678382">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451678382" />
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog" timestamp="1594451490581">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451490581" />
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog" timestamp="1598568130695">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598568130695" />
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1597609083441">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609083441" />
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1599753949547">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1920.1050@0.0.1920.1050" timestamp="1599753949547" />
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog" timestamp="1597609092731">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092731" />
    <state x="504" y="227" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1597507849061">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="504" y="227" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597507849061" />
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1594384167063">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594384167063" />
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog" timestamp="1595271326137">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1595271326137" />
    <state x="1378" y="422" key="#xdebugger.evaluate" timestamp="1599053535463">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="1378" y="422" key="#xdebugger.evaluate/0.0.1920.1050@0.0.1920.1050" timestamp="1599053535463" />
    <state x="419" y="75" width="1374" height="975" key="CommitChangelistDialog2" timestamp="1599865640810">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="419" y="75" width="1374" height="975" key="CommitChangelistDialog2/0.0.1920.1050@0.0.1920.1050" timestamp="1599865640810" />
    <state width="412" height="466" key="DebuggerActiveHint" timestamp="1599062046773">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="412" height="466" key="DebuggerActiveHint/0.0.1920.1050@0.0.1920.1050" timestamp="1599062046773" />
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog" timestamp="1599756478509">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599756478509" />
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog" timestamp="1596567099935">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1596567099935" />
    <state width="1877" height="285" key="GridCell.Tab.0.bottom" timestamp="1599758443364">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599758443364" />
    <state width="1877" height="285" key="GridCell.Tab.0.center" timestamp="1599758443364">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599758443364" />
    <state width="1877" height="285" key="GridCell.Tab.0.left" timestamp="1599758443364">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599758443364" />
    <state width="1877" height="285" key="GridCell.Tab.0.right" timestamp="1599758443364">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599758443364" />
    <state width="1877" height="285" key="GridCell.Tab.1.bottom" timestamp="1599758056922">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.1.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599758056922" />
    <state width="1877" height="285" key="GridCell.Tab.1.center" timestamp="1599758056922">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.1.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599758056922" />
    <state width="1877" height="285" key="GridCell.Tab.1.left" timestamp="1599758056922">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.1.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599758056922" />
    <state width="1877" height="285" key="GridCell.Tab.1.right" timestamp="1599758056922">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.1.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599758056922" />
    <state width="1877" height="285" key="GridCell.Tab.2.bottom" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.center" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.left" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.right" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state x="540" y="268" key="IDE.errors.dialog" timestamp="1593289890023">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="540" y="268" key="IDE.errors.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1593289890023" />
    <state x="490" y="180" key="Maven.ArtifactSearchDialog" timestamp="1594451518521">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="490" y="180" key="Maven.ArtifactSearchDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451518521" />
    <state x="695" y="245" key="RollbackChangesDialog" timestamp="1598184917635">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="695" y="245" key="RollbackChangesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598184917635" />
    <state x="461" y="167" key="SettingsEditor" timestamp="1599061696994">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="461" y="167" key="SettingsEditor/0.0.1920.1050@0.0.1920.1050" timestamp="1599061696994" />
    <state x="681" y="266" width="570" height="524" key="StructurePopup" timestamp="1599055538726">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="681" y="266" width="570" height="524" key="StructurePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1599055538726" />
    <state width="498" height="446" key="SwitcherDM" timestamp="1599656776994">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="498" height="446" key="SwitcherDM/0.0.1920.1050@0.0.1920.1050" timestamp="1599656776994" />
    <state x="807" y="439" key="VCS.ChangelistChooser" timestamp="1598799850245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="807" y="439" key="VCS.ChangelistChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1598799850245" />
    <state x="870" y="99" key="Vcs.Push.Dialog.v2" timestamp="1599865642562">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="870" y="99" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1599865642562" />
    <state x="775" y="303" key="chooseDestDirectoryDialog" timestamp="1597609092682">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="775" y="303" key="chooseDestDirectoryDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092682" />
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD" timestamp="1594451868089">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD/0.0.1920.1050@0.0.1920.1050" timestamp="1594451868089" />
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1598817571167">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1598817571167" />
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog" timestamp="1594592599434">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594592599434" />
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1597606354834">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1920.1050@0.0.1920.1050" timestamp="1597606354834" />
    <state x="690" y="275" key="extract.method.dialog" timestamp="1599589184838">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="275" key="extract.method.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599589184838" />
    <state x="667" y="258" width="1045" height="624" key="find.popup" timestamp="1599602879601">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="667" y="258" width="1045" height="624" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1599602879601" />
    <state width="735" height="247" key="javadoc.popup.new" timestamp="1599581910229">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="735" height="247" key="javadoc.popup.new/0.0.1920.1050@0.0.1920.1050" timestamp="1599581910229" />
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog" timestamp="1599506537354">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599506537354" />
    <state x="616" y="243" width="672" height="677" key="run.anything.popup" timestamp="1599865352707">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="616" y="243" width="672" height="677" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1599865352707" />
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup" timestamp="1599915630517">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1599915630517" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KDiffPairInArray.java</url>
          <line>50</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RepeatedStringMatch.java</url>
          <line>11</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ShuffleTheArray.java</url>
          <line>17</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RotateArray.java</url>
          <line>15</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CreateTargetArrayinGivenOrder.java</url>
          <line>40</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MergeSortedArray.java</url>
          <line>35</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>67</line>
          <option name="timeStamp" value="26" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>62</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>36</line>
          <option name="timeStamp" value="32" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>30</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/RottingOrangesTest.java</url>
          <line>12</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RottingOranges.java</url>
          <line>55</line>
          <option name="timeStamp" value="46" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>51</line>
          <option name="timeStamp" value="55" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>57</line>
          <option name="timeStamp" value="56" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Permutations2.java</url>
          <line>37</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Trie.java</url>
          <line>40</line>
          <option name="timeStamp" value="61" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/AddAndSearchWordTest.java</url>
          <line>20</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/AddAndSearchWord.java</url>
          <line>52</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PrisonCellAfterNDays.java</url>
          <line>69</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch2.java</url>
          <line>49</line>
          <option name="timeStamp" value="72" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>59</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>31</line>
          <option name="timeStamp" value="75" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/ArrangingCoinsTest.java</url>
          <line>9</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>45</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>53</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CountUniqueBST.java</url>
          <line>35</line>
          <option name="timeStamp" value="83" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CountUniqueBST.java</url>
          <line>37</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/GroupAnagrams.java</url>
          <line>51</line>
          <option name="timeStamp" value="85" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>61</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>55</line>
          <option name="timeStamp" value="87" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>27</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/HeightBalancedBinaryTree.java</url>
          <line>26</line>
          <option name="timeStamp" value="91" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CourseSchedule.java</url>
          <line>23</line>
          <option name="timeStamp" value="96" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PathWithMaxProbability.java</url>
          <line>41</line>
          <option name="timeStamp" value="101" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>70</line>
          <option name="timeStamp" value="106" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>79</line>
          <option name="timeStamp" value="107" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FindTwoSingleNumber.java</url>
          <line>23</line>
          <option name="timeStamp" value="116" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BestTimeToBuyAndSellStockWithCooldown.java</url>
          <line>45</line>
          <option name="timeStamp" value="117" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak2.java</url>
          <line>114</line>
          <option name="timeStamp" value="120" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak1.java</url>
          <line>63</line>
          <option name="timeStamp" value="122" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ConstructMaximumBinaryTree.java</url>
          <line>37</line>
          <option name="timeStamp" value="123" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LargestRectangleInHistogram.java</url>
          <line>30</line>
          <option name="timeStamp" value="125" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/NQueen.java</url>
          <line>53</line>
          <option name="timeStamp" value="132" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KthSymbolInGrammar.java</url>
          <line>25</line>
          <option name="timeStamp" value="134" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/DivisorGame.java</url>
          <line>34</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CheapestFlightWithinKStop.java</url>
          <line>50</line>
          <option name="timeStamp" value="136" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LongestCommonSubarray.java</url>
          <line>47</line>
          <option name="timeStamp" value="140" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinimumNumberOfFibonacciRequiredToReachSumK.java</url>
          <line>91</line>
          <option name="timeStamp" value="141" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange2.java</url>
          <line>47</line>
          <option name="timeStamp" value="148" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange.java</url>
          <line>51</line>
          <option name="timeStamp" value="150" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>11</line>
          <option name="timeStamp" value="152" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>8</line>
          <option name="timeStamp" value="153" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/alternate/TargetNumberWithOperations.java</url>
          <line>38</line>
          <option name="timeStamp" value="157" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <condition expression="this instanceof java.lang.NullPointerException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
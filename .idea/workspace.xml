<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="1111111111111111111111111." />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.codota.intellij.common.configuration.CodotaConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="alternate" />
      <recent name="common" />
      <recent name="" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Java Scratch.Scratch">
    <configuration name="BusRoutesTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BusRoutesTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DecodeStringTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="DecodeStringTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PartitionEqualSubsetSumTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="PartitionEqualSubsetSumTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PartitionKEqualSumSubsetsTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="PartitionKEqualSumSubsetsTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch_1.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Java Scratch.Scratch" />
      <item itemvalue="JUnit.Unnamed" />
      <item itemvalue="JUnit.PartitionEqualSubsetSumTest" />
      <item itemvalue="JUnit.PartitionKEqualSumSubsetsTest.test" />
      <item itemvalue="JUnit.BusRoutesTest.test" />
      <item itemvalue="JUnit.DecodeStringTest.test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Java Scratch.Scratch" />
        <item itemvalue="JUnit.DecodeStringTest.test" />
        <item itemvalue="JUnit.BusRoutesTest.test" />
        <item itemvalue="JUnit.PartitionKEqualSumSubsetsTest.test" />
        <item itemvalue="JUnit.PartitionEqualSubsetSumTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00310" summary="Update approach in LargestRectangleInHistogram">
      <created>1600545009612</created>
      <option name="number" value="00310" />
      <option name="presentableId" value="LOCAL-00310" />
      <option name="project" value="LOCAL" />
      <updated>1600545009612</updated>
    </task>
    <task id="LOCAL-00311" summary="Solve medium find the number of consecutive days where current stock price &gt;= previous day's stock price using monotonic stack&#10;&#10;Learnings -- Leveraged previous learnings of using monotonic stack to deal with problems related to finding next greater/smaller element.">
      <created>1600549204635</created>
      <option name="number" value="00311" />
      <option name="presentableId" value="LOCAL-00311" />
      <option name="project" value="LOCAL" />
      <updated>1600549204635</updated>
    </task>
    <task id="LOCAL-00312" summary="Solve medium but hard find 132 pattern in array i.e find three numbers such that a[i] &lt; a[k] &lt; a[j] and i &lt; j &lt; k using monotonic stack&#10;&#10;Learnings -- I solved this problem on my own, took a couple of hours but went through couple of different approaches and then finalized this. The crux of the problem was to fix i and then look for a valid k for each j. a[i] can be the smallest number on the left of a[j] and a[k] can be the largest number on the right smaller than a[j]. Once we find all three, check if they make 132 pattern.">
      <created>1600611074192</created>
      <option name="number" value="00312" />
      <option name="presentableId" value="LOCAL-00312" />
      <option name="project" value="LOCAL" />
      <updated>1600611074192</updated>
    </task>
    <task id="LOCAL-00313" summary="Simplify code in SubarraySumEqualsK">
      <created>1600613663164</created>
      <option name="number" value="00313" />
      <option name="presentableId" value="LOCAL-00313" />
      <option name="project" value="LOCAL" />
      <updated>1600613663164</updated>
    </task>
    <task id="LOCAL-00314" summary="Add approach in finding NextGreaterElement">
      <created>1600614058928</created>
      <option name="number" value="00314" />
      <option name="presentableId" value="LOCAL-00314" />
      <option name="project" value="LOCAL" />
      <updated>1600614058928</updated>
    </task>
    <task id="LOCAL-00315" summary="Solve medium but tricky problem related to finding the smallest subarray to be removed to make subarray divisible by p&#10;&#10;Learnings -- Look in the comment for approach. Modulo arithmetic is tricky. For problems related to subarray sum prefix sum is the way to go.">
      <created>1600616118714</created>
      <option name="number" value="00315" />
      <option name="presentableId" value="LOCAL-00315" />
      <option name="project" value="LOCAL" />
      <updated>1600616118714</updated>
    </task>
    <task id="LOCAL-00316" summary="Solve medium but tricky problem related to finding all subarray whose sums are divisible by k. Input can contain -ve number.&#10;&#10;Learnings -- Look in the comment for approach. Modulo arithmetic is tricky. For problems related to subarray sum prefix sum is the way to go.">
      <created>1600629658927</created>
      <option name="number" value="00316" />
      <option name="presentableId" value="LOCAL-00316" />
      <option name="project" value="LOCAL" />
      <updated>1600629658927</updated>
    </task>
    <task id="LOCAL-00317" summary="Update logic in MakeSumDivisibleByP. While comparing mod's -ve number should be made +ve because they are similar otherwise we would miss out some subarray. This is similar to the way he handled mod sum in SubarraySumsDivisibleByK">
      <created>1600630245508</created>
      <option name="number" value="00317" />
      <option name="presentableId" value="LOCAL-00317" />
      <option name="project" value="LOCAL" />
      <updated>1600630245508</updated>
    </task>
    <task id="LOCAL-00318" summary="Update logic behind choosing same modsum in SubarraySumsDivisibleByK">
      <created>1600700948582</created>
      <option name="number" value="00318" />
      <option name="presentableId" value="LOCAL-00318" />
      <option name="project" value="LOCAL" />
      <updated>1600700948583</updated>
    </task>
    <task id="LOCAL-00319" summary="Solve hard but medium find all the unique paths from source to destination by visiting all the intermediate nodes exactly once using backtracking.&#10;&#10;Learnings -- In Graph theory, a path which visits all the vertices exactly once is an hamiltonian path. We can solve it using backtracking but there is an optimized way of solving it using DP.">
      <created>1600701103264</created>
      <option name="number" value="00319" />
      <option name="presentableId" value="LOCAL-00319" />
      <option name="project" value="LOCAL" />
      <updated>1600701103264</updated>
    </task>
    <task id="LOCAL-00320" summary="Solve medium find max capacity required to car pool given start, end time and no of people hopping in by greedy approach. Keep track of people hopping in and out at each time.&#10;&#10;Learnings -- It's very critical to understand that if you copy the solution of other users without understanding why they used a specific DS, you won't be able to solve similar questions in the future. This question is similar to MeetingsRoom2">
      <created>1600710789507</created>
      <option name="number" value="00320" />
      <option name="presentableId" value="LOCAL-00320" />
      <option name="project" value="LOCAL" />
      <updated>1600710789507</updated>
    </task>
    <task id="LOCAL-00321" summary="Solve easy find longest subsequence with max diff of 1 by considering each element as the smallest and checking if we can find the corresponding max element&#10;&#10;Learning -- Leveraged previous learning of interpreting 'max difference' in a subarray.">
      <created>1600715153659</created>
      <option name="number" value="00321" />
      <option name="presentableId" value="LOCAL-00321" />
      <option name="project" value="LOCAL" />
      <updated>1600715153659</updated>
    </task>
    <task id="LOCAL-00322" summary="Add time complexity for DFS solution, very important to understand time complexity of DFS solution. Find number of next states for each node, which can be 3^n (because one is parent) and we can reach this node from 4 different node so total is 4*(3^n)">
      <created>1600722211499</created>
      <option name="number" value="00322" />
      <option name="presentableId" value="LOCAL-00322" />
      <option name="project" value="LOCAL" />
      <updated>1600722211500</updated>
    </task>
    <task id="LOCAL-00323" summary="Solve easy find longest path in a tree which has nodes with same value. &#10;&#10;Learnings -- Similar to finding max diameter of a tree, got a little confused during the implementation.">
      <created>1600777563484</created>
      <option name="number" value="00323" />
      <option name="presentableId" value="LOCAL-00323" />
      <option name="project" value="LOCAL" />
      <updated>1600777563484</updated>
    </task>
    <task id="LOCAL-00324" summary="Solve medium but tricky problem find all ways to solve an expression by adding parenthesis at all valid places. An optimization would be to memoize the expressions as we repeatedly solve same expression again and again.&#10;&#10;Learnings -- Sometimes for recursion problems, you have to recursively solve for both left and right.">
      <created>1600778195306</created>
      <option name="number" value="00324" />
      <option name="presentableId" value="LOCAL-00324" />
      <option name="project" value="LOCAL" />
      <updated>1600778195306</updated>
    </task>
    <task id="LOCAL-00325" summary="Solved hard find minimum distance to type using two fingers using simple recursion and memoization.&#10;&#10;Learnings -- Google is tricky. Oh lord, give me the strength to continue. Losing strength at this moment.">
      <created>1600881622891</created>
      <option name="number" value="00325" />
      <option name="presentableId" value="LOCAL-00325" />
      <option name="project" value="LOCAL" />
      <updated>1600881622891</updated>
    </task>
    <task id="LOCAL-00326" summary="Solve hard but medium find longest increasing path in a matrix by DFS + Memoization">
      <created>1600952890758</created>
      <option name="number" value="00326" />
      <option name="presentableId" value="LOCAL-00326" />
      <option name="project" value="LOCAL" />
      <updated>1600952890758</updated>
    </task>
    <task id="LOCAL-00327" summary="Fix incorrect comment in CourseSchedule2">
      <created>1600952946729</created>
      <option name="number" value="00327" />
      <option name="presentableId" value="LOCAL-00327" />
      <option name="project" value="LOCAL" />
      <updated>1600952946729</updated>
    </task>
    <task id="LOCAL-00328" summary="Solve hard but tricky serialize and deserialize a binary tree. &#10;&#10;Learnings -- I solved the question on my own but wrote a long answer. I could have leveraged a queue to always set the head of the queue to either the left or right of node.">
      <created>1600968505061</created>
      <option name="number" value="00328" />
      <option name="presentableId" value="LOCAL-00328" />
      <option name="project" value="LOCAL" />
      <updated>1600968505062</updated>
    </task>
    <task id="LOCAL-00329" summary="Solve medium but tricky problem find the largest number possible by re-arranging a list of numbers&#10;&#10;Learnings -- Try to break down the problems by ericto's method i.e. try to solve the problem by asking if i had the largest number possible at ith index, how can i extend it to i+1. &#10;Take care of stripping leading zeroes when dealing with integers and strings.">
      <created>1601061100379</created>
      <option name="number" value="00329" />
      <option name="presentableId" value="LOCAL-00329" />
      <option name="project" value="LOCAL" />
      <updated>1601061100379</updated>
    </task>
    <task id="LOCAL-00330" summary="Solve medium but tricky problem similar to JumpGame, find whether you can visit all the gas stations, provided you get certain amount of gas at each station and it takes a certain cost to visit next station.&#10;&#10;Learnings -- Yes/No questions can be solved via greedy approach as mentioned by ericto, trick to solve them is to keep track of the max state possible, if current state is invalid, reset it.">
      <created>1601116110915</created>
      <option name="number" value="00330" />
      <option name="presentableId" value="LOCAL-00330" />
      <option name="project" value="LOCAL" />
      <updated>1601116110915</updated>
    </task>
    <task id="LOCAL-00331" summary="Fix broken tests">
      <created>1601139989344</created>
      <option name="number" value="00331" />
      <option name="presentableId" value="LOCAL-00331" />
      <option name="project" value="LOCAL" />
      <updated>1601139989344</updated>
    </task>
    <task id="LOCAL-00332" summary="Solve medium find total count of permutations to make sum k given n different numbers via memoization&#10;&#10;Learnings -- Very similar to CoinChange2 which asked for total combinations. While writing top down DP it was important to start from target sum and reach down to 0, so that we can reuse intermediate results, if started from 0, intermediate results were not usable.">
      <created>1601140199887</created>
      <option name="number" value="00332" />
      <option name="presentableId" value="LOCAL-00332" />
      <option name="project" value="LOCAL" />
      <updated>1601140199888</updated>
    </task>
    <task id="LOCAL-00333" summary="Solve hard and tricky problem find largest number where using each digit incurs a specific cost by memoization.&#10;&#10;Learnings -- 1. While comparing strings as integers, compare them via compareTo() only when their lengths match, otherwise the longer string is the greater of them because &quot;12&quot;.compareTo(&quot;3&quot;) &lt; 0&#10;&#10;2. For solving cost related problems, always start from the target and recurse down to 0, this recursion gives a memoization friendly code.">
      <created>1601154552362</created>
      <option name="number" value="00333" />
      <option name="presentableId" value="LOCAL-00333" />
      <option name="project" value="LOCAL" />
      <updated>1601154552362</updated>
    </task>
    <task id="LOCAL-00334" summary="Update comment in MinDistanceToTypeUsingTwoFingers">
      <created>1601218100237</created>
      <option name="number" value="00334" />
      <option name="presentableId" value="LOCAL-00334" />
      <option name="project" value="LOCAL" />
      <updated>1601218100238</updated>
    </task>
    <task id="LOCAL-00335" summary="Solve hard and tricky find shortest path to reach target node in a grid if blocked nodes can be eliminated by BFS&#10;&#10;Learnings -- As ericto mentioned earlier that try to understand what should be remembered, here it's current path length and no of eliminations performed so far. Since this problem deals with shortest path, use fucking BFS, not DFS !">
      <created>1601218868535</created>
      <option name="number" value="00335" />
      <option name="presentableId" value="LOCAL-00335" />
      <option name="project" value="LOCAL" />
      <updated>1601218868535</updated>
    </task>
    <task id="LOCAL-00336" summary="Solve hard and tricky split array into k subarrays such that maximum sum of subarrays is minimized. This kind of partitioning problems are known as painter partition problem. It can be solved via recursion. Make cuts at all indices, keeping track of left subarray sum and then recurse into right subarray which will yield right subarray sum.&#10;Need to minimize the maximum of left and right subarray sum. &#10;&#10;This problem was asked to vinayendra in amazon online assessment test.">
      <created>1601298220061</created>
      <option name="number" value="00336" />
      <option name="presentableId" value="LOCAL-00336" />
      <option name="project" value="LOCAL" />
      <updated>1601298220063</updated>
    </task>
    <task id="LOCAL-00337" summary="Simplify code and update approach in sorting an array by changing only one element.">
      <created>1601310502268</created>
      <option name="number" value="00337" />
      <option name="presentableId" value="LOCAL-00337" />
      <option name="project" value="LOCAL" />
      <updated>1601310502268</updated>
    </task>
    <task id="LOCAL-00338" summary="Solve hard and tricky find the smallest substring that contains all the characters of the target string by sliding window.&#10;&#10;Learnings -- In sliding window implementation, we are only interested in characters with +ve count. Increase the curCount only if the count of char[end] &gt; 0. Decrease the curCount when count of char[begin] &gt; 0. That's the trick. Incrementing/Decrementing count of characters that are not required wont have any affect because their count will always &lt;= 0">
      <created>1601317140963</created>
      <option name="number" value="00338" />
      <option name="presentableId" value="LOCAL-00338" />
      <option name="project" value="LOCAL" />
      <updated>1601317140963</updated>
    </task>
    <task id="LOCAL-00339" summary="Add related problems">
      <created>1601319014770</created>
      <option name="number" value="00339" />
      <option name="presentableId" value="LOCAL-00339" />
      <option name="project" value="LOCAL" />
      <updated>1601319014770</updated>
    </task>
    <task id="LOCAL-00340" summary="Solve medium find minimum size subarray whose sum &gt;= target sum by sliding window. Keep increasing the window until curSum &gt;= targetSum. Once such window is found, keep shortening the window to find a smaller valid window.&#10;&#10;Learnings -- Utilized the learnings from previous solved problem MinimumWindowSubstring">
      <created>1601319140541</created>
      <option name="number" value="00340" />
      <option name="presentableId" value="LOCAL-00340" />
      <option name="project" value="LOCAL" />
      <updated>1601319140541</updated>
    </task>
    <task id="LOCAL-00341" summary="Solve medium find count of subarrays whose product is &lt; k by sliding window approach.&#10;&#10;Learnings -- Counting no of valid subarrays via sliding window was tricky, use (end-start+1)&#10;Keep increasing the window until current product &lt; k. If not, decrement the window from the start">
      <created>1601325217508</created>
      <option name="number" value="00341" />
      <option name="presentableId" value="LOCAL-00341" />
      <option name="project" value="LOCAL" />
      <updated>1601325217509</updated>
    </task>
    <task id="LOCAL-00342" summary="Solve medium find whether a subarray can be divided into two subsets with equal sum by recursion + memoization.&#10;&#10;Learnings -- yet another partition problem, trick to solve this problem was to find a subset with a sum = totalSum/2. So any element can either be part of left subset or right subset. Try both and recur accordingly.">
      <created>1601396426649</created>
      <option name="number" value="00342" />
      <option name="presentableId" value="LOCAL-00342" />
      <option name="project" value="LOCAL" />
      <updated>1601396426649</updated>
    </task>
    <task id="LOCAL-00343" summary="Solve medium but tricky problem find whether a array can be divided into k subsets each with equal sum via recursion + backtracking.&#10;&#10;Learnings -- In case of difficult recursion problems, think about backtracking. I was able to think that we need k subsets each with totalSum/k sum, but was unable to think about backtracking. Once you find a subset with targetSum, reset current sum and recurse again from 0 to k-1 subsets with target sum.">
      <created>1601410027647</created>
      <option name="number" value="00343" />
      <option name="presentableId" value="LOCAL-00343" />
      <option name="project" value="LOCAL" />
      <updated>1601410027647</updated>
    </task>
    <task id="LOCAL-00344" summary="Solve medium find a subarray whose subarray sum is divisible by k -- keep track of running mod sum, if you see a repeating modsum, you got yourself a subarray whose sum is divisible by k, hence modsum is 0">
      <created>1601411953569</created>
      <option name="number" value="00344" />
      <option name="presentableId" value="LOCAL-00344" />
      <option name="project" value="LOCAL" />
      <updated>1601411953569</updated>
    </task>
    <task id="LOCAL-00345" summary="Solve medium find min cost to connect all vertices of a complete graph by creating a minimum spanning tree using prim's algorithm&#10;&#10;Learnings -- Repeat the process until all nodes are visited. Pop the node with the smallest distance and mark it visited. Update the distance of all unvisited adjacent nodes.">
      <created>1601416300636</created>
      <option name="number" value="00345" />
      <option name="presentableId" value="LOCAL-00345" />
      <option name="project" value="LOCAL" />
      <updated>1601416300636</updated>
    </task>
    <task id="LOCAL-00346" summary="Solve easy find no of elements that lies within a specific range [x, x-3000] using sliding window + deque">
      <created>1601533195432</created>
      <option name="number" value="00346" />
      <option name="presentableId" value="LOCAL-00346" />
      <option name="project" value="LOCAL" />
      <updated>1601533195432</updated>
    </task>
    <task id="LOCAL-00347" summary="Solve hard but medium find length of longest consecutive sequence by DFS + Memoization.&#10;&#10;Learnings -- Leverage prior learning of reusing previously computed results.">
      <created>1601547616239</created>
      <option name="number" value="00347" />
      <option name="presentableId" value="LOCAL-00347" />
      <option name="project" value="LOCAL" />
      <updated>1601547616239</updated>
    </task>
    <task id="LOCAL-00348" summary="Solve hard and tricky find the first missing positive number by swapping the number to their correct index or by flagging their index.&#10;&#10;Learnings -- Its a tricky question with edge cases around boundary cases. In case of placing the flag by negating the value present at that index, the tricky thing is to take care of -ve numbers already present in the input by setting it to a high positive value outside the working range [1,n]">
      <created>1601566783907</created>
      <option name="number" value="00348" />
      <option name="presentableId" value="LOCAL-00348" />
      <option name="project" value="LOCAL" />
      <updated>1601566783907</updated>
    </task>
    <task id="LOCAL-00349" summary="Solve medium but tricky find xor all subarray elements by leveraging the property that xor is the inverse function of xor&#10;&#10;Learnings: If the xor of a[0...i] is X and the xor of a[0 to k] is Y then xor of a[k+1, i] is X ^ Y">
      <created>1601587015396</created>
      <option name="number" value="00349" />
      <option name="presentableId" value="LOCAL-00349" />
      <option name="project" value="LOCAL" />
      <updated>1601587015396</updated>
    </task>
    <task id="LOCAL-00350" summary="Simplify code in DecodeString by coalescing string when ']' is encountered. This code fits naturally into the stack style of solving things.">
      <created>1601658878424</created>
      <option name="number" value="00350" />
      <option name="presentableId" value="LOCAL-00350" />
      <option name="project" value="LOCAL" />
      <updated>1601658878425</updated>
    </task>
    <task id="LOCAL-00351" summary="Solve hard and tricky BusRoutes. Here the BFS is not to find the shortest length between two stop's but to find the shortest no of buses between two stops. Due to this we have to do BFS on buses. How to know whether two buses are connected i.e. share an edge? They will share an edge if they share a stop.">
      <created>1601661149701</created>
      <option name="number" value="00351" />
      <option name="presentableId" value="LOCAL-00351" />
      <option name="project" value="LOCAL" />
      <updated>1601661149701</updated>
    </task>
    <task id="LOCAL-00352" summary="Solve medium and tricky find the best index which maximises the distance between two occupied indices by keeping track of occupied indices in treeset.&#10;&#10;Learnings -- In problems dealing with holes, leverage treeset to keep track of occupied indices. Use it to find the next best free index.">
      <created>1601716430748</created>
      <option name="number" value="00352" />
      <option name="presentableId" value="LOCAL-00352" />
      <option name="project" value="LOCAL" />
      <updated>1601716430748</updated>
    </task>
    <task id="LOCAL-00353" summary="Solve medium find all strings that part of the same group, here group consists of strings whose each characters are shifted by same diff&#10;&#10;Learnings -- In case of grouping questions, in order to solve in linear time, create the key for each string and add it to the results present for that key">
      <created>1601726380593</created>
      <option name="number" value="00353" />
      <option name="presentableId" value="LOCAL-00353" />
      <option name="project" value="LOCAL" />
      <updated>1601726380593</updated>
    </task>
    <task id="LOCAL-00354" summary="Solve medium track count of occurrences in the last hour via sliding window.&#10;&#10;Learnings -- As the problem talks about dealing with elements present in the last hour, sliding window fits perfectly. Thought about using treeSet or queue but they didn't pan out.">
      <created>1601757379592</created>
      <option name="number" value="00354" />
      <option name="presentableId" value="LOCAL-00354" />
      <option name="project" value="LOCAL" />
      <updated>1601757379592</updated>
    </task>
    <task id="LOCAL-00355" summary="Solve medium generate all possible combinations by trying all permissible characters for that index via backtracking.&#10;&#10;Learnings -- Leveraged prior learning of using recursion to generate all possible combinations. Also this question is very similar to GeneratePhoneCombinations">
      <created>1601758285747</created>
      <option name="number" value="00355" />
      <option name="presentableId" value="LOCAL-00355" />
      <option name="project" value="LOCAL" />
      <updated>1601758285747</updated>
    </task>
    <task id="LOCAL-00356" summary="Solve medium find minimum height to fill a bookcase where height of a shelf is the max height of the books placed in that shelf.&#10;Solved using recursion + memoization. Part of google mock interviews. Leveraged prior learning of splitting an array into smaller subarrays while minimizing a variable.&#10;&#10;Learnings -- Similar to solved problem SplitArrayLargestSum">
      <created>1601811387770</created>
      <option name="number" value="00356" />
      <option name="presentableId" value="LOCAL-00356" />
      <option name="project" value="LOCAL" />
      <updated>1601811387770</updated>
    </task>
    <task id="LOCAL-00357" summary="Add another approach in FillingBookCaseShelves">
      <created>1601812339730</created>
      <option name="number" value="00357" />
      <option name="presentableId" value="LOCAL-00357" />
      <option name="project" value="LOCAL" />
      <updated>1601812339730</updated>
    </task>
    <task id="LOCAL-00358" summary="Solve medium find the largest sum of values possible by picking only specified number of values with same label.&#10;&#10;Learnings -- Initially I thought it as a knapsack problem but it a greedy problem. Part of google mock interview. Pick the largest values first.">
      <created>1601812621348</created>
      <option name="number" value="00358" />
      <option name="presentableId" value="LOCAL-00358" />
      <option name="project" value="LOCAL" />
      <updated>1601812621348</updated>
    </task>
    <option name="localTasksCounter" value="359" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="text">
                    <value>
                      <list>
                        <option value="minimize" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="COLUMN_WIDTH">
                <map>
                  <entry key="2" value="82" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="1" value="TOOL_WINDOW" />
        <entry key="2" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Update comment in MinDistanceToTypeUsingTwoFingers" />
    <MESSAGE value="Solve hard and tricky find shortest path to reach target node in a grid if blocked nodes can be eliminated by BFS&#10;&#10;Learnings -- As ericto mentioned earlier that try to understand what should be remembered, here it's current path length and no of eliminations performed so far. Since this problem deals with shortest path, use fucking BFS, not DFS !" />
    <MESSAGE value="Solve hard and tricky split array into k subarrays such that maximum sum of subarrays is minimized. This kind of partitioning problems are known as painter partition problem. It can be solved via recursion. Make cuts at all indices, keeping track of left subarray sum and then recurse into right subarray which will yield right subarray sum.&#10;Need to minimize the maximum of left and right subarray sum. &#10;&#10;This problem was asked to vinayendra in amazon online assessment test." />
    <MESSAGE value="Simplify code and update approach in sorting an array by changing only one element." />
    <MESSAGE value="Solve hard and tricky find the smallest substring that contains all the characters of the target string by sliding window.&#10;&#10;Learnings -- In sliding window implementation, we are only interested in characters with +ve count. Increase the curCount only if the count of char[end] &gt; 0. Decrease the curCount when count of char[begin] &gt; 0. That's the trick. Incrementing/Decrementing count of characters that are not required wont have any affect because their count will always &lt;= 0" />
    <MESSAGE value="Add related problems" />
    <MESSAGE value="Solve medium find minimum size subarray whose sum &gt;= target sum by sliding window. Keep increasing the window until curSum &gt;= targetSum. Once such window is found, keep shortening the window to find a smaller valid window.&#10;&#10;Learnings -- Utilized the learnings from previous solved problem MinimumWindowSubstring" />
    <MESSAGE value="Solve medium find count of subarrays whose product is &lt; k by sliding window approach.&#10;&#10;Learnings -- Counting no of valid subarrays via sliding window was tricky, use (end-start+1)&#10;Keep increasing the window until current product &lt; k. If not, decrement the window from the start" />
    <MESSAGE value="Solve medium find whether a subarray can be divided into two subsets with equal sum by recursion + memoization.&#10;&#10;Learnings -- yet another partition problem, trick to solve this problem was to find a subset with a sum = totalSum/2. So any element can either be part of left subset or right subset. Try both and recur accordingly." />
    <MESSAGE value="Solve medium but tricky problem find whether a array can be divided into k subsets each with equal sum via recursion + backtracking.&#10;&#10;Learnings -- In case of difficult recursion problems, think about backtracking. I was able to think that we need k subsets each with totalSum/k sum, but was unable to think about backtracking. Once you find a subset with targetSum, reset current sum and recurse again from 0 to k-1 subsets with target sum." />
    <MESSAGE value="Solve medium find a subarray whose subarray sum is divisible by k -- keep track of running mod sum, if you see a repeating modsum, you got yourself a subarray whose sum is divisible by k, hence modsum is 0" />
    <MESSAGE value="Solve medium find min cost to connect all vertices of a complete graph by creating a minimum spanning tree using prim's algorithm&#10;&#10;Learnings -- Repeat the process until all nodes are visited. Pop the node with the smallest distance and mark it visited. Update the distance of all unvisited adjacent nodes." />
    <MESSAGE value="Solve easy find no of elements that lies within a specific range [x, x-3000] using sliding window + deque" />
    <MESSAGE value="Solve hard but medium find length of longest consecutive sequence by DFS + Memoization.&#10;&#10;Learnings -- Leverage prior learning of reusing previously computed results." />
    <MESSAGE value="Solve hard and tricky find the first missing positive number by swapping the number to their correct index or by flagging their index.&#10;&#10;Learnings -- Its a tricky question with edge cases around boundary cases. In case of placing the flag by negating the value present at that index, the tricky thing is to take care of -ve numbers already present in the input by setting it to a high positive value outside the working range [1,n]" />
    <MESSAGE value="Solve medium but tricky find xor all subarray elements by leveraging the property that xor is the inverse function of xor&#10;&#10;Learnings: If the xor of a[0...i] is X and the xor of a[0 to k] is Y then xor of a[k+1, i] is X ^ Y" />
    <MESSAGE value="Simplify code in DecodeString by coalescing string when ']' is encountered. This code fits naturally into the stack style of solving things." />
    <MESSAGE value="Solve hard and tricky BusRoutes. Here the BFS is not to find the shortest length between two stop's but to find the shortest no of buses between two stops. Due to this we have to do BFS on buses. How to know whether two buses are connected i.e. share an edge? They will share an edge if they share a stop." />
    <MESSAGE value="Solve medium and tricky find the best index which maximises the distance between two occupied indices by keeping track of occupied indices in treeset.&#10;&#10;Learnings -- In problems dealing with holes, leverage treeset to keep track of occupied indices. Use it to find the next best free index." />
    <MESSAGE value="Solve medium find all strings that part of the same group, here group consists of strings whose each characters are shifted by same diff&#10;&#10;Learnings -- In case of grouping questions, in order to solve in linear time, create the key for each string and add it to the results present for that key" />
    <MESSAGE value="Solve medium track count of occurrences in the last hour via sliding window.&#10;&#10;Learnings -- As the problem talks about dealing with elements present in the last hour, sliding window fits perfectly. Thought about using treeSet or queue but they didn't pan out." />
    <MESSAGE value="Solve medium generate all possible combinations by trying all permissible characters for that index via backtracking.&#10;&#10;Learnings -- Leveraged prior learning of using recursion to generate all possible combinations. Also this question is very similar to GeneratePhoneCombinations" />
    <MESSAGE value="Solve medium find minimum height to fill a bookcase where height of a shelf is the max height of the books placed in that shelf.&#10;Solved using recursion + memoization. Part of google mock interviews. Leveraged prior learning of splitting an array into smaller subarrays while minimizing a variable.&#10;&#10;Learnings -- Similar to solved problem SplitArrayLargestSum" />
    <MESSAGE value="Add another approach in FillingBookCaseShelves" />
    <MESSAGE value="Solve medium find the largest sum of values possible by picking only specified number of values with same label.&#10;&#10;Learnings -- Initially I thought it as a knapsack problem but it a greedy problem. Part of google mock interview. Pick the largest values first." />
    <option name="LAST_COMMIT_MESSAGE" value="Solve medium find the largest sum of values possible by picking only specified number of values with same label.&#10;&#10;Learnings -- Initially I thought it as a knapsack problem but it a greedy problem. Part of google mock interview. Pick the largest values first." />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="726" y="229" key="#Auto_Import" timestamp="1599427305776">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="726" y="229" key="#Auto_Import/0.0.1920.1050@0.0.1920.1050" timestamp="1599427305776" />
    <state x="727" y="349" key="#Notifications" timestamp="1598814073398">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="727" y="349" key="#Notifications/0.0.1920.1050@0.0.1920.1050" timestamp="1598814073398" />
    <state x="552" y="166" key="#Plugins" timestamp="1598814068976">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="166" key="#Plugins/0.0.1920.1050@0.0.1920.1050" timestamp="1598814068976" />
    <state x="552" y="183" key="#Project_Structure" timestamp="1594324360886">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="183" key="#Project_Structure/0.0.1920.1050@0.0.1920.1050" timestamp="1594324360886" />
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser" timestamp="1601567541934">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1601567541934" />
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog" timestamp="1597609089094">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609089094" />
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog" timestamp="1594451678382">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451678382" />
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog" timestamp="1594451490581">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451490581" />
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog" timestamp="1600328299277">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1600328299277" />
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1597609083441">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609083441" />
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1599753949547">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1920.1050@0.0.1920.1050" timestamp="1599753949547" />
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog" timestamp="1597609092731">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092731" />
    <state x="504" y="227" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1600159733361">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="504" y="227" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1600159733361" />
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1601403451266">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601403451266" />
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog" timestamp="1595271326137">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1595271326137" />
    <state x="1378" y="422" key="#xdebugger.evaluate" timestamp="1599053535463">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="1378" y="422" key="#xdebugger.evaluate/0.0.1920.1050@0.0.1920.1050" timestamp="1599053535463" />
    <state x="397" y="75" width="1374" height="975" key="CommitChangelistDialog2" timestamp="1601812620831">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="397" y="75" width="1374" height="975" key="CommitChangelistDialog2/0.0.1920.1050@0.0.1920.1050" timestamp="1601812620831" />
    <state width="412" height="466" key="DebuggerActiveHint" timestamp="1599062046773">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="412" height="466" key="DebuggerActiveHint/0.0.1920.1050@0.0.1920.1050" timestamp="1599062046773" />
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog" timestamp="1601810750204">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601810750204" />
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog" timestamp="1596567099935">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1596567099935" />
    <state width="1877" height="285" key="GridCell.Tab.0.bottom" timestamp="1601757523202">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1601757523202" />
    <state width="1877" height="285" key="GridCell.Tab.0.center" timestamp="1601757523201">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1601757523201" />
    <state width="1877" height="285" key="GridCell.Tab.0.left" timestamp="1601757523201">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1601757523201" />
    <state width="1877" height="285" key="GridCell.Tab.0.right" timestamp="1601757523202">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1601757523202" />
    <state width="1877" height="352" key="GridCell.Tab.1.bottom" timestamp="1601650370687">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1601650370687" />
    <state width="1877" height="352" key="GridCell.Tab.1.center" timestamp="1601650370687">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.center/0.0.1920.1050@0.0.1920.1050" timestamp="1601650370687" />
    <state width="1877" height="352" key="GridCell.Tab.1.left" timestamp="1601650370687">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.left/0.0.1920.1050@0.0.1920.1050" timestamp="1601650370687" />
    <state width="1877" height="352" key="GridCell.Tab.1.right" timestamp="1601650370687">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.right/0.0.1920.1050@0.0.1920.1050" timestamp="1601650370687" />
    <state width="1877" height="285" key="GridCell.Tab.2.bottom" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.center" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.left" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.right" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state x="540" y="268" key="IDE.errors.dialog" timestamp="1593289890023">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="540" y="268" key="IDE.errors.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1593289890023" />
    <state x="490" y="180" key="Maven.ArtifactSearchDialog" timestamp="1594451518521">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="490" y="180" key="Maven.ArtifactSearchDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451518521" />
    <state x="695" y="245" key="RollbackChangesDialog" timestamp="1598184917635">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="695" y="245" key="RollbackChangesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598184917635" />
    <state x="668" y="259" key="SettingsEditor" timestamp="1601568700981">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="668" y="259" key="SettingsEditor/0.0.1920.1050@0.0.1920.1050" timestamp="1601568700981" />
    <state x="681" y="266" width="570" height="524" key="StructurePopup" timestamp="1601656990249">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="681" y="266" width="570" height="524" key="StructurePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1601656990249" />
    <state width="498" height="446" key="SwitcherDM" timestamp="1601735527656">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="498" height="446" key="SwitcherDM/0.0.1920.1050@0.0.1920.1050" timestamp="1601735527656" />
    <state x="807" y="439" key="VCS.ChangelistChooser" timestamp="1598799850245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="807" y="439" key="VCS.ChangelistChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1598799850245" />
    <state x="870" y="99" key="Vcs.Push.Dialog.v2" timestamp="1601812340729">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="870" y="99" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1601812340729" />
    <state x="775" y="303" key="chooseDestDirectoryDialog" timestamp="1597609092682">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="775" y="303" key="chooseDestDirectoryDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092682" />
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD" timestamp="1594451868089">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD/0.0.1920.1050@0.0.1920.1050" timestamp="1594451868089" />
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1601403444304">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1601403444304" />
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog" timestamp="1594592599434">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594592599434" />
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1597606354834">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1920.1050@0.0.1920.1050" timestamp="1597606354834" />
    <state x="690" y="275" key="extract.method.dialog" timestamp="1599589184838">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="275" key="extract.method.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599589184838" />
    <state x="667" y="258" width="1045" height="624" key="find.popup" timestamp="1601756480495">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="667" y="258" width="1045" height="624" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1601756480495" />
    <state width="720" height="169" key="javadoc.popup.new" timestamp="1601814224757">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="720" height="169" key="javadoc.popup.new/0.0.1920.1050@0.0.1920.1050" timestamp="1601814224757" />
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog" timestamp="1601815715145">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601815715145" />
    <state x="616" y="243" width="672" height="677" key="run.anything.popup" timestamp="1601716221784">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="616" y="243" width="672" height="677" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1601716221784" />
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup" timestamp="1601810633701">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1601810633701" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KDiffPairInArray.java</url>
          <line>50</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RepeatedStringMatch.java</url>
          <line>11</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ShuffleTheArray.java</url>
          <line>17</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RotateArray.java</url>
          <line>15</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CreateTargetArrayinGivenOrder.java</url>
          <line>40</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MergeSortedArray.java</url>
          <line>35</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>67</line>
          <option name="timeStamp" value="26" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>62</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>36</line>
          <option name="timeStamp" value="32" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>30</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/RottingOrangesTest.java</url>
          <line>12</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RottingOranges.java</url>
          <line>55</line>
          <option name="timeStamp" value="46" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>51</line>
          <option name="timeStamp" value="55" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>57</line>
          <option name="timeStamp" value="56" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Permutations2.java</url>
          <line>37</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Trie.java</url>
          <line>40</line>
          <option name="timeStamp" value="61" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/AddAndSearchWordTest.java</url>
          <line>20</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/AddAndSearchWord.java</url>
          <line>52</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PrisonCellAfterNDays.java</url>
          <line>69</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch2.java</url>
          <line>49</line>
          <option name="timeStamp" value="72" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>59</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>31</line>
          <option name="timeStamp" value="75" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/ArrangingCoinsTest.java</url>
          <line>9</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>45</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>53</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/UniqueBST.java</url>
          <line>35</line>
          <option name="timeStamp" value="83" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/UniqueBST.java</url>
          <line>37</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/GroupAnagrams.java</url>
          <line>51</line>
          <option name="timeStamp" value="85" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>61</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>55</line>
          <option name="timeStamp" value="87" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>27</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/HeightBalancedBinaryTree.java</url>
          <line>26</line>
          <option name="timeStamp" value="91" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CourseSchedule.java</url>
          <line>23</line>
          <option name="timeStamp" value="96" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PathWithMaxProbability.java</url>
          <line>41</line>
          <option name="timeStamp" value="101" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>70</line>
          <option name="timeStamp" value="106" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>79</line>
          <option name="timeStamp" value="107" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FindTwoSingleNumber.java</url>
          <line>23</line>
          <option name="timeStamp" value="116" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BestTimeToBuyAndSellStockWithCooldown.java</url>
          <line>45</line>
          <option name="timeStamp" value="117" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak2.java</url>
          <line>114</line>
          <option name="timeStamp" value="120" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak1.java</url>
          <line>63</line>
          <option name="timeStamp" value="122" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ConstructMaximumBinaryTree.java</url>
          <line>37</line>
          <option name="timeStamp" value="123" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LargestRectangleInHistogram.java</url>
          <line>30</line>
          <option name="timeStamp" value="125" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/NQueen.java</url>
          <line>53</line>
          <option name="timeStamp" value="132" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KthSymbolInGrammar.java</url>
          <line>25</line>
          <option name="timeStamp" value="134" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/DivisorGame.java</url>
          <line>34</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CheapestFlightWithinKStop.java</url>
          <line>50</line>
          <option name="timeStamp" value="136" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LongestCommonSubarray.java</url>
          <line>47</line>
          <option name="timeStamp" value="140" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinimumNumberOfFibonacciRequiredToReachSumK.java</url>
          <line>91</line>
          <option name="timeStamp" value="141" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange2.java</url>
          <line>47</line>
          <option name="timeStamp" value="148" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange.java</url>
          <line>51</line>
          <option name="timeStamp" value="150" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>11</line>
          <option name="timeStamp" value="152" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>8</line>
          <option name="timeStamp" value="153" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/alternate/TargetNumberWithOperations.java</url>
          <line>38</line>
          <option name="timeStamp" value="157" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <condition expression="this instanceof java.lang.NullPointerException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
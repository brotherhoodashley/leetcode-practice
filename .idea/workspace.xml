<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </select>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="Add comment">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ConstructTreeFromPreorderAndPostorderTraversal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ConstructTreeFromPreorderAndPostorderTraversal.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/MaxSumOfRectangleNoLargerThanK.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/MaxSumOfRectangleNoLargerThanK.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/StudentAttendanceRecord2.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/StudentAttendanceRecord2.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/alternate/BoundaryTraversalOfBinaryTree.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/alternate/RotationGroups.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/alternate/RotationGroups.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="abc\ntasd\n" />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
      <recent name="alternate" />
      <recent name="common" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Application.DiceRollSimulation">
    <configuration name="BeautifulArrangement" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="BeautifulArrangement" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiceRollSimulation" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DiceRollSimulation" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DivideChocolates" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DivideChocolates" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="JumpGame4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="JumpGame4" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.BeautifulArrangement" />
      <item itemvalue="Application.DiceRollSimulation" />
      <item itemvalue="Application.DivideChocolates" />
      <item itemvalue="Application.JumpGame4" />
      <item itemvalue="Java Scratch.Scratch" />
      <item itemvalue="JUnit.Unnamed" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Java Scratch.Scratch" />
        <item itemvalue="Application.JumpGame4" />
        <item itemvalue="Application.DivideChocolates" />
        <item itemvalue="Application.DiceRollSimulation" />
        <item itemvalue="Application.BeautifulArrangement" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00708" summary="Add comment to solve the problem in another way">
      <created>1610208437237</created>
      <option name="number" value="00708" />
      <option name="presentableId" value="LOCAL-00708" />
      <option name="project" value="LOCAL" />
      <updated>1610208437237</updated>
    </task>
    <task id="LOCAL-00709" summary="Solve hard and extremely tricky represent data stream as disjoint intervals by merging consecutive integers ie. 1,2,3,4 are merged to form [1,4] using treeMap&#10;&#10;Learnings -- To handle interval related problem, always ensure that there is no overlapping interval before or after an operation, so whenever do something, remove overlapped intervals and introduce a merged interval">
      <created>1610212671533</created>
      <option name="number" value="00709" />
      <option name="presentableId" value="LOCAL-00709" />
      <option name="project" value="LOCAL" />
      <updated>1610212671533</updated>
    </task>
    <task id="LOCAL-00710" summary="Solve hard and extremely tricky find the min no of flips required so that array does not have any 0. Whenever flip is performed, we have to flip k consecutive bits. Need to use greedy ie. whenever we see a 0, flip k consecutive bits. If we actually flip it, time complexity would be o(nk), instead we perform virtual flips i.e we keep track of indices till which we have to perform flips and size of queue would indicate the no of flips performed. If A[i] == 1 and we have performed even bits, A[i] is still 1, so skip it.">
      <created>1610224169591</created>
      <option name="number" value="00710" />
      <option name="presentableId" value="LOCAL-00710" />
      <option name="project" value="LOCAL" />
      <updated>1610224169592</updated>
    </task>
    <task id="LOCAL-00711" summary="Add problem statement and approach for counting prime numbers &lt; n using sieve of eratosthenes">
      <created>1610225971292</created>
      <option name="number" value="00711" />
      <option name="presentableId" value="LOCAL-00711" />
      <option name="project" value="LOCAL" />
      <updated>1610225971292</updated>
    </task>
    <task id="LOCAL-00712" summary="Solve medium math related problem, find the count of numbers with odd no of divisors by counting perfect squares">
      <created>1610226299442</created>
      <option name="number" value="00712" />
      <option name="presentableId" value="LOCAL-00712" />
      <option name="project" value="LOCAL" />
      <updated>1610226299442</updated>
    </task>
    <task id="LOCAL-00713" summary="Solve hard and extremely tricky count the no of ways in which we can place P,A,L to generate strings of N length such that we can have at most 1 A and at most 2 consecutive L in the generated string using recursion with memoization&#10;&#10;Learnings -- Figure out the information required at each state, this will help in figuring the parameters required in recursion. Here we need to know the count of P, A and consecutive L present at each state">
      <created>1610232934993</created>
      <option name="number" value="00713" />
      <option name="presentableId" value="LOCAL-00713" />
      <option name="project" value="LOCAL" />
      <updated>1610232934993</updated>
    </task>
    <task id="LOCAL-00714" summary="Add gotcha in hard and extremely tricky problem in counting subsequences that matches a given target string">
      <created>1610294517355</created>
      <option name="number" value="00714" />
      <option name="presentableId" value="LOCAL-00714" />
      <option name="project" value="LOCAL" />
      <updated>1610294517355</updated>
    </task>
    <task id="LOCAL-00715" summary="Solve count distinct subsequences in a string that matches target string using binary search + memoization. In my initial attempt, I thought my solution isn't memoizable but I proved myself wrong ! What a day !">
      <created>1610295833004</created>
      <option name="number" value="00715" />
      <option name="presentableId" value="LOCAL-00715" />
      <option name="project" value="LOCAL" />
      <updated>1610295833004</updated>
    </task>
    <task id="LOCAL-00716" summary="Simplify code by removing if/else check during removal of key from hashmap">
      <created>1610297472757</created>
      <option name="number" value="00716" />
      <option name="presentableId" value="LOCAL-00716" />
      <option name="project" value="LOCAL" />
      <updated>1610297472757</updated>
    </task>
    <task id="LOCAL-00717" summary="Fix typo">
      <created>1610308799198</created>
      <option name="number" value="00717" />
      <option name="presentableId" value="LOCAL-00717" />
      <option name="project" value="LOCAL" />
      <updated>1610308799198</updated>
    </task>
    <task id="LOCAL-00718" summary="Fix typo">
      <created>1610309736556</created>
      <option name="number" value="00718" />
      <option name="presentableId" value="LOCAL-00718" />
      <option name="project" value="LOCAL" />
      <updated>1610309736556</updated>
    </task>
    <task id="LOCAL-00719" summary="Update comment">
      <created>1610310729051</created>
      <option name="number" value="00719" />
      <option name="presentableId" value="LOCAL-00719" />
      <option name="project" value="LOCAL" />
      <updated>1610310729051</updated>
    </task>
    <task id="LOCAL-00720" summary="Add time complexity for both the approaches">
      <created>1610311434389</created>
      <option name="number" value="00720" />
      <option name="presentableId" value="LOCAL-00720" />
      <option name="project" value="LOCAL" />
      <updated>1610311434389</updated>
    </task>
    <task id="LOCAL-00721" summary="Update approach">
      <created>1610311932855</created>
      <option name="number" value="00721" />
      <option name="presentableId" value="LOCAL-00721" />
      <option name="project" value="LOCAL" />
      <updated>1610311932855</updated>
    </task>
    <task id="LOCAL-00722" summary="Add comment and simplify code">
      <created>1610449035792</created>
      <option name="number" value="00722" />
      <option name="presentableId" value="LOCAL-00722" />
      <option name="project" value="LOCAL" />
      <updated>1610449035792</updated>
    </task>
    <task id="LOCAL-00723" summary="Fix logic by iterating over worker indexes first, because worker index have higher priority over bike indexes &#10;ie. (worker_idx, bike_idx) (1,2) &gt; (2,0) if distances is same">
      <created>1610457362444</created>
      <option name="number" value="00723" />
      <option name="presentableId" value="LOCAL-00723" />
      <option name="project" value="LOCAL" />
      <updated>1610457362444</updated>
    </task>
    <task id="LOCAL-00724" summary="Add comment on reason behind tracking max and min because we have to keep track of difference between smallest and largest transformed number">
      <created>1610458254247</created>
      <option name="number" value="00724" />
      <option name="presentableId" value="LOCAL-00724" />
      <option name="project" value="LOCAL" />
      <updated>1610458254247</updated>
    </task>
    <task id="LOCAL-00725" summary="Update comment to add sample calculations">
      <created>1610461017710</created>
      <option name="number" value="00725" />
      <option name="presentableId" value="LOCAL-00725" />
      <option name="project" value="LOCAL" />
      <updated>1610461017710</updated>
    </task>
    <task id="LOCAL-00726" summary="Add related problem, this greedy problem is also extremely tricky">
      <created>1610461388663</created>
      <option name="number" value="00726" />
      <option name="presentableId" value="LOCAL-00726" />
      <option name="project" value="LOCAL" />
      <updated>1610461388663</updated>
    </task>
    <task id="LOCAL-00727" summary="Add explanation behind counting valid subarrays using (end - begin + 1)">
      <created>1610464880983</created>
      <option name="number" value="00727" />
      <option name="presentableId" value="LOCAL-00727" />
      <option name="project" value="LOCAL" />
      <updated>1610464880983</updated>
    </task>
    <task id="LOCAL-00728" summary="Add gotcha and explanation behind iterating from beginning">
      <created>1610468688609</created>
      <option name="number" value="00728" />
      <option name="presentableId" value="LOCAL-00728" />
      <option name="project" value="LOCAL" />
      <updated>1610468688610</updated>
    </task>
    <task id="LOCAL-00729" summary="Add related problems and comment in hard and extremely tricky find the largest subsequence sum such that all indices are within k distance">
      <created>1610469838819</created>
      <option name="number" value="00729" />
      <option name="presentableId" value="LOCAL-00729" />
      <option name="project" value="LOCAL" />
      <updated>1610469838819</updated>
    </task>
    <task id="LOCAL-00730" summary="Add related multi bfs problems">
      <created>1610470524012</created>
      <option name="number" value="00730" />
      <option name="presentableId" value="LOCAL-00730" />
      <option name="project" value="LOCAL" />
      <updated>1610470524012</updated>
    </task>
    <task id="LOCAL-00731" summary="Add gotcha about incrementing the result rather than assigning">
      <created>1610471934809</created>
      <option name="number" value="00731" />
      <option name="presentableId" value="LOCAL-00731" />
      <option name="project" value="LOCAL" />
      <updated>1610471934810</updated>
    </task>
    <task id="LOCAL-00732" summary="Add comment on explaining that we have to check whether target tree contains source tree as an inverted subtree or not.">
      <created>1610473023349</created>
      <option name="number" value="00732" />
      <option name="presentableId" value="LOCAL-00732" />
      <option name="project" value="LOCAL" />
      <updated>1610473023349</updated>
    </task>
    <task id="LOCAL-00733" summary="Add related sliding window max/min problems">
      <created>1610473902720</created>
      <option name="number" value="00733" />
      <option name="presentableId" value="LOCAL-00733" />
      <option name="project" value="LOCAL" />
      <updated>1610473902720</updated>
    </task>
    <task id="LOCAL-00734" summary="Simplify code by rewriting it to fit sliding window template">
      <created>1610479945631</created>
      <option name="number" value="00734" />
      <option name="presentableId" value="LOCAL-00734" />
      <option name="project" value="LOCAL" />
      <updated>1610479945631</updated>
    </task>
    <task id="LOCAL-00735" summary="Add gotcha to make sure previous DP state is valid before we extend the result">
      <created>1610481390979</created>
      <option name="number" value="00735" />
      <option name="presentableId" value="LOCAL-00735" />
      <option name="project" value="LOCAL" />
      <updated>1610481390979</updated>
    </task>
    <task id="LOCAL-00736" summary="Solve easy find an element in an array where a[i] == i using binary search.">
      <created>1610639379877</created>
      <option name="number" value="00736" />
      <option name="presentableId" value="LOCAL-00736" />
      <option name="project" value="LOCAL" />
      <updated>1610639379877</updated>
    </task>
    <task id="LOCAL-00737" summary="Solve easy count pairs of consecutive elements in array containing duplicate elements e.g {3,4} {4,5} using hashmap">
      <created>1610640833411</created>
      <option name="number" value="00737" />
      <option name="presentableId" value="LOCAL-00737" />
      <option name="project" value="LOCAL" />
      <updated>1610640833411</updated>
    </task>
    <task id="LOCAL-00738" summary="Simplify code by removing if/else check during key removal in map and add comments to explain the reason behind Math.max()">
      <created>1610641009537</created>
      <option name="number" value="00738" />
      <option name="presentableId" value="LOCAL-00738" />
      <option name="project" value="LOCAL" />
      <updated>1610641009537</updated>
    </task>
    <task id="LOCAL-00739" summary="Tag my personal interview questions">
      <created>1610641279189</created>
      <option name="number" value="00739" />
      <option name="presentableId" value="LOCAL-00739" />
      <option name="project" value="LOCAL" />
      <updated>1610641279189</updated>
    </task>
    <task id="LOCAL-00740" summary="Add related subsequences problem">
      <created>1610641365170</created>
      <option name="number" value="00740" />
      <option name="presentableId" value="LOCAL-00740" />
      <option name="project" value="LOCAL" />
      <updated>1610641365170</updated>
    </task>
    <task id="LOCAL-00741" summary="Solve medium find total no of pairs with sum = k using hashmap. This seems to be a followup question for twoSum problem">
      <created>1611063291352</created>
      <option name="number" value="00741" />
      <option name="presentableId" value="LOCAL-00741" />
      <option name="project" value="LOCAL" />
      <updated>1611063291352</updated>
    </task>
    <task id="LOCAL-00742" summary="Solve medium count no of strings that its characters are lexicographically sorted and consists only of a,e,i,o,u using recursion + memoization&#10;&#10;Leveraged prior learning of solving digit DP problems">
      <created>1611069225449</created>
      <option name="number" value="00742" />
      <option name="presentableId" value="LOCAL-00742" />
      <option name="project" value="LOCAL" />
      <updated>1611069225449</updated>
    </task>
    <task id="LOCAL-00743" summary="Solve medium design a subway system which tracks avg travel time between two pairs of stations, provided the checkin and checkout time of a person using hashmaps">
      <created>1611071887587</created>
      <option name="number" value="00743" />
      <option name="presentableId" value="LOCAL-00743" />
      <option name="project" value="LOCAL" />
      <updated>1611071887588</updated>
    </task>
    <task id="LOCAL-00744" summary="Solve medium and extremely tricky find the max profit from popping either &quot;ab&quot; or &quot;ba&quot; from a string using greedy. Tried to solve it via recursion but then realized it would give TLE, switched to greedy and got AC&#10;Feeling extremely proud of myself for solving this problem on my own.">
      <created>1611074569571</created>
      <option name="number" value="00744" />
      <option name="presentableId" value="LOCAL-00744" />
      <option name="project" value="LOCAL" />
      <updated>1611074569571</updated>
    </task>
    <task id="LOCAL-00745" summary="Solve medium design tic tac toe game for simulating game play for two players by tracking characters placed per row, per column, per diagonal and anti diagonal for each player. If count matches n, that player has won the game.">
      <created>1611165043553</created>
      <option name="number" value="00745" />
      <option name="presentableId" value="LOCAL-00745" />
      <option name="project" value="LOCAL" />
      <updated>1611165043553</updated>
    </task>
    <task id="LOCAL-00746" summary="Solve medium and extremely tricky find the lexicographically smallest subsequence of length k using stack. &#10;Tricky thing to understand was that we need to ensure at least k items in the stack. This observation was critical and I couldn't figure it out.">
      <created>1611246911123</created>
      <option name="number" value="00746" />
      <option name="presentableId" value="LOCAL-00746" />
      <option name="project" value="LOCAL" />
      <updated>1611246911123</updated>
    </task>
    <task id="LOCAL-00747" summary="Solve medium and tricky find the lexicographically smallest subsequence after deleting k chars from input string using greedy stack&#10;&#10;Leveraged prior learning of using stack to build lexicographically smallest subsequence">
      <created>1611253263152</created>
      <option name="number" value="00747" />
      <option name="presentableId" value="LOCAL-00747" />
      <option name="project" value="LOCAL" />
      <updated>1611253263152</updated>
    </task>
    <task id="LOCAL-00748" summary="Solve medium and a bit tricky find whether two strings have edit distance of 1 or not using two pointers solution. &#10;Implementation heavy solution. Initially I solved by comparing frequency count of two strings but it failed for anagrams.">
      <created>1611321333099</created>
      <option name="number" value="00748" />
      <option name="presentableId" value="LOCAL-00748" />
      <option name="project" value="LOCAL" />
      <updated>1611321333099</updated>
    </task>
    <task id="LOCAL-00749" summary="Solve medium and a bit tricky determine if two strings can be made similar if we can swap any two existing characters or we can transform every occurrence of one existing character to another existing character&#10;&#10;Problem reduces to finding whether two strings are anagram of each other (operation1) or their frequencies are anagram of each other (operation2)">
      <created>1611322700802</created>
      <option name="number" value="00749" />
      <option name="presentableId" value="LOCAL-00749" />
      <option name="project" value="LOCAL" />
      <updated>1611322700802</updated>
    </task>
    <task id="LOCAL-00750" summary="Add constraints and explanation behind why recursive solution works because of low constraints">
      <created>1611603125757</created>
      <option name="number" value="00750" />
      <option name="presentableId" value="LOCAL-00750" />
      <option name="project" value="LOCAL" />
      <updated>1611603125757</updated>
    </task>
    <task id="LOCAL-00751" summary="Solve medium and bit tricky find boundary traversal of a binary tree by finding the left boundary + leaves + right boundary (reversed)&#10;&#10;Trick to find left/right boundary was to recur from root.left and root.right respectively. This handles a lot of edge cases.">
      <created>1611603288804</created>
      <option name="number" value="00751" />
      <option name="presentableId" value="LOCAL-00751" />
      <option name="project" value="LOCAL" />
      <updated>1611603288804</updated>
    </task>
    <task id="LOCAL-00752" summary="Solve medium design twitter in which we have to generate news feed of a person by getting 10 most recent tweets of him and the person he follows, using priority queue + dequeue of fixed size of 10">
      <created>1611606628438</created>
      <option name="number" value="00752" />
      <option name="presentableId" value="LOCAL-00752" />
      <option name="project" value="LOCAL" />
      <updated>1611606628438</updated>
    </task>
    <task id="LOCAL-00753" summary="Solve easy find the smallest positive value that can lead to positive prefix sum at every step by tracking the smallest negative prefix sum found">
      <created>1611688668473</created>
      <option name="number" value="00753" />
      <option name="presentableId" value="LOCAL-00753" />
      <option name="project" value="LOCAL" />
      <updated>1611688668473</updated>
    </task>
    <task id="LOCAL-00754" summary="Solve medium and extremely tricky find whether it's possible to divide a string into k palindromic strings by counting chars with odd frequency">
      <created>1612082520173</created>
      <option name="number" value="00754" />
      <option name="presentableId" value="LOCAL-00754" />
      <option name="project" value="LOCAL" />
      <updated>1612082520173</updated>
    </task>
    <task id="LOCAL-00755" summary="Solve medium find the max no of customers that can be satisfied if the owner becomes happy for a window of size X, by finding the largest subarray sum of size X using sliding window">
      <created>1612098509135</created>
      <option name="number" value="00755" />
      <option name="presentableId" value="LOCAL-00755" />
      <option name="project" value="LOCAL" />
      <updated>1612098509135</updated>
    </task>
    <task id="LOCAL-00756" summary="Solve medium print binary tree in a 2D matrix, using recursion">
      <created>1612100373274</created>
      <option name="number" value="00756" />
      <option name="presentableId" value="LOCAL-00756" />
      <option name="project" value="LOCAL" />
      <updated>1612100373274</updated>
    </task>
    <option name="localTasksCounter" value="757" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="text">
                    <value>
                      <list>
                        <option value="hard and tricky" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ID_WIDTH">
                <map>
                  <entry key="Table.Default.Date.ColumnIdWidth" value="119" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Add comment on explaining that we have to check whether target tree contains source tree as an inverted subtree or not." />
    <MESSAGE value="Add related sliding window max/min problems" />
    <MESSAGE value="Simplify code by rewriting it to fit sliding window template" />
    <MESSAGE value="Add gotcha to make sure previous DP state is valid before we extend the result" />
    <MESSAGE value="Solve easy find an element in an array where a[i] == i using binary search." />
    <MESSAGE value="Solve easy count pairs of consecutive elements in array containing duplicate elements e.g {3,4} {4,5} using hashmap" />
    <MESSAGE value="Simplify code by removing if/else check during key removal in map and add comments to explain the reason behind Math.max()" />
    <MESSAGE value="Tag my personal interview questions" />
    <MESSAGE value="Add related subsequences problem" />
    <MESSAGE value="Solve medium find total no of pairs with sum = k using hashmap. This seems to be a followup question for twoSum problem" />
    <MESSAGE value="Solve medium count no of strings that its characters are lexicographically sorted and consists only of a,e,i,o,u using recursion + memoization&#10;&#10;Leveraged prior learning of solving digit DP problems" />
    <MESSAGE value="Solve medium design a subway system which tracks avg travel time between two pairs of stations, provided the checkin and checkout time of a person using hashmaps" />
    <MESSAGE value="Solve medium and extremely tricky find the max profit from popping either &quot;ab&quot; or &quot;ba&quot; from a string using greedy. Tried to solve it via recursion but then realized it would give TLE, switched to greedy and got AC&#10;Feeling extremely proud of myself for solving this problem on my own." />
    <MESSAGE value="Solve medium design tic tac toe game for simulating game play for two players by tracking characters placed per row, per column, per diagonal and anti diagonal for each player. If count matches n, that player has won the game." />
    <MESSAGE value="Solve medium and extremely tricky find the lexicographically smallest subsequence of length k using stack. &#10;Tricky thing to understand was that we need to ensure at least k items in the stack. This observation was critical and I couldn't figure it out." />
    <MESSAGE value="Solve medium and tricky find the lexicographically smallest subsequence after deleting k chars from input string using greedy stack&#10;&#10;Leveraged prior learning of using stack to build lexicographically smallest subsequence" />
    <MESSAGE value="Solve medium and a bit tricky find whether two strings have edit distance of 1 or not using two pointers solution. &#10;Implementation heavy solution. Initially I solved by comparing frequency count of two strings but it failed for anagrams." />
    <MESSAGE value="Solve medium and a bit tricky determine if two strings can be made similar if we can swap any two existing characters or we can transform every occurrence of one existing character to another existing character&#10;&#10;Problem reduces to finding whether two strings are anagram of each other (operation1) or their frequencies are anagram of each other (operation2)" />
    <MESSAGE value="Add constraints and explanation behind why recursive solution works because of low constraints" />
    <MESSAGE value="Solve medium and bit tricky find boundary traversal of a binary tree by finding the left boundary + leaves + right boundary (reversed)&#10;&#10;Trick to find left/right boundary was to recur from root.left and root.right respectively. This handles a lot of edge cases." />
    <MESSAGE value="Solve medium design twitter in which we have to generate news feed of a person by getting 10 most recent tweets of him and the person he follows, using priority queue + dequeue of fixed size of 10" />
    <MESSAGE value="Solve easy find the smallest positive value that can lead to positive prefix sum at every step by tracking the smallest negative prefix sum found" />
    <MESSAGE value="Solve medium and extremely tricky find whether it's possible to divide a string into k palindromic strings by counting chars with odd frequency" />
    <MESSAGE value="Solve medium find the max no of customers that can be satisfied if the owner becomes happy for a window of size X, by finding the largest subarray sum of size X using sliding window" />
    <MESSAGE value="Solve medium print binary tree in a 2D matrix, using recursion" />
    <option name="LAST_COMMIT_MESSAGE" value="Solve medium print binary tree in a 2D matrix, using recursion" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/SortColors.java</url>
          <line>29</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/GeneralizedAbbreviations.java</url>
          <line>33</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.StackOverflowError" package="java.lang" />
          <option name="timeStamp" value="9" />
        </breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="java-exception">
          <condition expression="this instanceof StringIndexOutOfBoundsException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="1111111111111111111111111." />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.codota.intellij.common.configuration.CodotaConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
      <recent name="alternate" />
      <recent name="common" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Application.HouseRobber2">
    <configuration name="HouseRobber2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="HouseRobber2" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MinimumWindowSubsequence" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="MinimumWindowSubsequence" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CheapestFlightWithinKStopTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="CheapestFlightWithinKStopTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringTransformsIntoAnotherStringTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="StringTransformsIntoAnotherStringTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch_1.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.MinimumWindowSubsequence" />
      <item itemvalue="Application.HouseRobber2" />
      <item itemvalue="Java Scratch.Scratch" />
      <item itemvalue="JUnit.Unnamed" />
      <item itemvalue="JUnit.StringTransformsIntoAnotherStringTest.test" />
      <item itemvalue="JUnit.CheapestFlightWithinKStopTest.test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.HouseRobber2" />
        <item itemvalue="Application.MinimumWindowSubsequence" />
        <item itemvalue="JUnit.CheapestFlightWithinKStopTest.test" />
        <item itemvalue="Java Scratch.Scratch" />
        <item itemvalue="JUnit.StringTransformsIntoAnotherStringTest.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00359" summary="Solve medium find max sum after partitioning array into subarrays such that size of each subarray &lt;= k and all elements of the subarray transforms to the largest element present in the subarray.&#10;&#10;Learnings -- Yet another array partitioning problem. Trick is to keep track of max of (putting element in current subarray, putting it in next subarray)">
      <created>1601816996523</created>
      <option name="number" value="00359" />
      <option name="presentableId" value="LOCAL-00359" />
      <option name="project" value="LOCAL" />
      <updated>1601816996523</updated>
    </task>
    <task id="LOCAL-00360" summary="Add another approach in MeetingsRoom2. Find min no of meeting rooms required to schedule all the meetings">
      <created>1601818628605</created>
      <option name="number" value="00360" />
      <option name="presentableId" value="LOCAL-00360" />
      <option name="project" value="LOCAL" />
      <updated>1601818628606</updated>
    </task>
    <task id="LOCAL-00361" summary="Update greedy logic in GasStations">
      <created>1601822162116</created>
      <option name="number" value="00361" />
      <option name="presentableId" value="LOCAL-00361" />
      <option name="project" value="LOCAL" />
      <updated>1601822162116</updated>
    </task>
    <task id="LOCAL-00362" summary="Add another approach by sorting from start point in MinimumArrowsToBurstBalloons">
      <created>1601822275930</created>
      <option name="number" value="00362" />
      <option name="presentableId" value="LOCAL-00362" />
      <option name="project" value="LOCAL" />
      <updated>1601822275930</updated>
    </task>
    <task id="LOCAL-00363" summary="Simplify code and add approach in MergeIntervals">
      <created>1601822472766</created>
      <option name="number" value="00363" />
      <option name="presentableId" value="LOCAL-00363" />
      <option name="project" value="LOCAL" />
      <updated>1601822472766</updated>
    </task>
    <task id="LOCAL-00364" summary="Solve easy find the two's complement of a number using bit magic&#10;&#10;Learnings -- Number + 2's complement = Number with all bit's set (3,7,15,31,63....) Find the first number greater than current number that has all bits set and return the diff of that number with current number.">
      <created>1601891907955</created>
      <option name="number" value="00364" />
      <option name="presentableId" value="LOCAL-00364" />
      <option name="project" value="LOCAL" />
      <updated>1601891907955</updated>
    </task>
    <task id="LOCAL-00365" summary="Solve medium remove intervals that are completely covering other intervals, partial covering is allowed. Similar to previously solved MergeIntervals. Care needs to be taken for edge cases for partial covering intervals.">
      <created>1601894034870</created>
      <option name="number" value="00365" />
      <option name="presentableId" value="LOCAL-00365" />
      <option name="project" value="LOCAL" />
      <updated>1601894034871</updated>
    </task>
    <task id="LOCAL-00366" summary="Solve medium find whether all paths from a source node end in target node or not by performing DFS. Only challenge was to perform cycle detection. Leveraged previous learnings during implementation of topological sort in CourseSchedule">
      <created>1601927720066</created>
      <option name="number" value="00366" />
      <option name="presentableId" value="LOCAL-00366" />
      <option name="project" value="LOCAL" />
      <updated>1601927720066</updated>
    </task>
    <task id="LOCAL-00367" summary="Solve medium find shortest distance pair between a bike and a worker by calculating all pairs of distances, sort them, and assign greedily. Trick to reduce time complexity was to use counting sort because max manhattan distance can be 2000 based on the input.">
      <created>1601930711173</created>
      <option name="number" value="00367" />
      <option name="presentableId" value="LOCAL-00367" />
      <option name="project" value="LOCAL" />
      <updated>1601930711173</updated>
    </task>
    <task id="LOCAL-00368" summary="Add TODO to solve using Gale Shapley algorithm, Stable marriage problem">
      <created>1602009710266</created>
      <option name="number" value="00368" />
      <option name="presentableId" value="LOCAL-00368" />
      <option name="project" value="LOCAL" />
      <updated>1602009710267</updated>
    </task>
    <task id="LOCAL-00369" summary="Solve easy print a message only if it was not printed in the last 10 seconds using sliding window. Can optimize it if we create an hashmap of message -&gt; timestamp, for the new message if the timestamp is expired, then print it else exclude it.">
      <created>1602009816870</created>
      <option name="number" value="00369" />
      <option name="presentableId" value="LOCAL-00369" />
      <option name="project" value="LOCAL" />
      <updated>1602009816870</updated>
    </task>
    <task id="LOCAL-00370" summary="Add another duplicate problem">
      <created>1602010902294</created>
      <option name="number" value="00370" />
      <option name="presentableId" value="LOCAL-00370" />
      <option name="project" value="LOCAL" />
      <updated>1602010902294</updated>
    </task>
    <task id="LOCAL-00371" summary="Solve medium Rotate a linked list by k units by keeping a dummy pointer and joining the second part with the first part.">
      <created>1602092094243</created>
      <option name="number" value="00371" />
      <option name="presentableId" value="LOCAL-00371" />
      <option name="project" value="LOCAL" />
      <updated>1602092094243</updated>
    </task>
    <task id="LOCAL-00372" summary="Add top down memoization solution in finding longest common subarray. First time seeing that top down is complicated than bottom up.">
      <created>1602105240843</created>
      <option name="number" value="00372" />
      <option name="presentableId" value="LOCAL-00372" />
      <option name="project" value="LOCAL" />
      <updated>1602105240843</updated>
    </task>
    <task id="LOCAL-00373" summary="Add top down memoization solution in finding longest common subsequence.&#10;&#10;Update comment in LongestCommonSubarray">
      <created>1602107411205</created>
      <option name="number" value="00373" />
      <option name="presentableId" value="LOCAL-00373" />
      <option name="project" value="LOCAL" />
      <updated>1602107411205</updated>
    </task>
    <task id="LOCAL-00374" summary="Solve medium and tricky count all palindromic substrings by considering all indexes as the center and expand around the center in both left and right direction considering both even and odd length palindromes`">
      <created>1602107709815</created>
      <option name="number" value="00374" />
      <option name="presentableId" value="LOCAL-00374" />
      <option name="project" value="LOCAL" />
      <updated>1602107709815</updated>
    </task>
    <task id="LOCAL-00375" summary="Update logic in FindShortestSubarrayToBeRemovedToMakeArraySorted">
      <created>1602184688134</created>
      <option name="number" value="00375" />
      <option name="presentableId" value="LOCAL-00375" />
      <option name="project" value="LOCAL" />
      <updated>1602184688134</updated>
    </task>
    <task id="LOCAL-00376" summary="Solve medium find longest palindromic subsequence using top down memoized recursion &#10;If s[left] == s[right] then candidate length will be 2 + recur(left+1, right-1) Otherwise it will be max(recur(left+1, right), recur(left, right-1))&#10;&#10;Learnings -- Difference between substring and subsequence problem is continuity, substring problem needs the recursion part to be adjacent to the current part, subsequence does not care about it.">
      <created>1602189207298</created>
      <option name="number" value="00376" />
      <option name="presentableId" value="LOCAL-00376" />
      <option name="project" value="LOCAL" />
      <updated>1602189207298</updated>
    </task>
    <task id="LOCAL-00377" summary="Update logic in finding longest common substring">
      <created>1602189728895</created>
      <option name="number" value="00377" />
      <option name="presentableId" value="LOCAL-00377" />
      <option name="project" value="LOCAL" />
      <updated>1602189728895</updated>
    </task>
    <task id="LOCAL-00378" summary="Solve medium find longest palindromic substring by&#10;1. Expanding around the center by considering each index as the center for even/odd length palindrome.&#10;2. Top down recursion with memoization if s[left] == s[right], recur for [left+1, right-1] and check if it's palindrome.&#10;If it's palindrome, then only update the current candidate length.">
      <created>1602189844244</created>
      <option name="number" value="00378" />
      <option name="presentableId" value="LOCAL-00378" />
      <option name="project" value="LOCAL" />
      <updated>1602189844245</updated>
    </task>
    <task id="LOCAL-00379" summary="Simplify the solution in SerializeAndDeserializeBinaryTree by encoding the preorder traversal of tree.">
      <created>1602251455855</created>
      <option name="number" value="00379" />
      <option name="presentableId" value="LOCAL-00379" />
      <option name="project" value="LOCAL" />
      <updated>1602251455856</updated>
    </task>
    <task id="LOCAL-00380" summary="Solve medium Serialize and Deserialize BST by encoding it in a compact form by leveraging the bounds property of BST, we can quickly filter out a node from being added to a subtree of BST if we keep track of lower_bound and upper_bound of current subtree. &#10;&#10;While recursing left, update the upper_bound and while recursing right, update the lower_bound.">
      <created>1602251680819</created>
      <option name="number" value="00380" />
      <option name="presentableId" value="LOCAL-00380" />
      <option name="project" value="LOCAL" />
      <updated>1602251680819</updated>
    </task>
    <task id="LOCAL-00381" summary="Solve medium and a bit tricky find the no of delete operations to make two strings equal by top down memoization. &#10;&#10;If characters at idx1 and idx2 mismatch, then we have two options, either delete one character at idx1 or idx2 or delete both of the characters at idx1 or idx2 &#10;&#10;If characters at idx1 and idx2 matches, do nothing and skip to idx1-1, idx2-1 &#10;&#10;In case we are done with word1 (idx1&lt;0) but word2 isn't done (idx2&gt;0), only option is to delete all the characters remaining in idx2.">
      <created>1602255952133</created>
      <option name="number" value="00381" />
      <option name="presentableId" value="LOCAL-00381" />
      <option name="project" value="LOCAL" />
      <updated>1602255952133</updated>
    </task>
    <task id="LOCAL-00382" summary="Add comment for redundant logic and fix incorrect check in Make Two Strings equal by deleting characters.">
      <created>1602256571208</created>
      <option name="number" value="00382" />
      <option name="presentableId" value="LOCAL-00382" />
      <option name="project" value="LOCAL" />
      <updated>1602256571208</updated>
    </task>
    <task id="LOCAL-00383" summary="Solve medium find minimum ascii sum of characters to be deleted to make two strings equal. Similar to previously solved DeleteOperationsForTwoString">
      <created>1602258441045</created>
      <option name="number" value="00383" />
      <option name="presentableId" value="LOCAL-00383" />
      <option name="project" value="LOCAL" />
      <updated>1602258441045</updated>
    </task>
    <task id="LOCAL-00384" summary="Solve medium find max no of binary strings that can be picked provided we can have max 'm' no of ones and 'n' no of zeroes in the result set by top down memoization. &#10;&#10;Every index has two options, either get picked or be skipped.">
      <created>1602260559370</created>
      <option name="number" value="00384" />
      <option name="presentableId" value="LOCAL-00384" />
      <option name="project" value="LOCAL" />
      <updated>1602260559370</updated>
    </task>
    <task id="LOCAL-00385" summary="Solve classical hard problem EditDistance, find the minimum no of operations (insert, delete, replace) required to convert one string to another using top down memoization. &#10;&#10;Learnings -- Leveraged prior learnings in DeleteOperationForTwoStrings">
      <created>1602270014260</created>
      <option name="number" value="00385" />
      <option name="presentableId" value="LOCAL-00385" />
      <option name="project" value="LOCAL" />
      <updated>1602270014260</updated>
    </task>
    <task id="LOCAL-00386" summary="Solve medium classical painting problem, no two adjacent house can have same color and we need to paint all the houses with min cost.&#10;&#10;Recursive solution was easy, took me a while to convert into memoized solution because we need the color of the house being painted as a state as well.">
      <created>1602325530657</created>
      <option name="number" value="00386" />
      <option name="presentableId" value="LOCAL-00386" />
      <option name="project" value="LOCAL" />
      <updated>1602325530657</updated>
    </task>
    <task id="LOCAL-00387" summary="Solve hard and tricky Dungeon Game, find the min health required at the start to reach the target provided the health cant be &lt;= 0 at any state.&#10;&#10;This is similar to BusRoutes where BFS needs to be applied but the condition for BFS has changed. Similarly here, the start is actually our target state, because we need the min health at the start. So at start node, we ask adjacent node on their min health required and update the health at start accordingly.">
      <created>1602329269846</created>
      <option name="number" value="00387" />
      <option name="presentableId" value="LOCAL-00387" />
      <option name="project" value="LOCAL" />
      <updated>1602329269847</updated>
    </task>
    <task id="LOCAL-00388" summary="Solve medium and tricky book an event only if it does not create a conflict with existing events. The simplest solution was to keep start and end time together and then find the first event starting before the current event finishes. That event should finish before the current event starts for a successful booking.">
      <created>1602331514767</created>
      <option name="number" value="00388" />
      <option name="presentableId" value="LOCAL-00388" />
      <option name="project" value="LOCAL" />
      <updated>1602331514767</updated>
    </task>
    <task id="LOCAL-00389" summary="Update comment regarding visited check in Djikstra -- visited check is not really required because once a node is done, we can't get  a better path for that node in future because we are using a priority queue">
      <created>1602337587609</created>
      <option name="number" value="00389" />
      <option name="presentableId" value="LOCAL-00389" />
      <option name="project" value="LOCAL" />
      <updated>1602337587609</updated>
    </task>
    <task id="LOCAL-00390" summary="Solve medium and tricky problem find cheapest cost to reach a target node from source node with max k depth allowed by djikstra and bfs (with pruning)&#10;&#10;Learnings -- &#10;1. BFS can be applied to find shortest path between two nodes in a weighted graph but with pruning and entire traversal of the graph.&#10;2. In case of additional constraint in Djikstra make sure to relax the bounds accordingly while skipping addition of nodes in PQ.">
      <created>1602338861050</created>
      <option name="number" value="00390" />
      <option name="presentableId" value="LOCAL-00390" />
      <option name="project" value="LOCAL" />
      <updated>1602338861050</updated>
    </task>
    <task id="LOCAL-00391" summary="Solve hard and tricky classical problem find the max area of rectangle in matrix. Finding max square is relatively easy than calculating rectangle because of different length and width. It can be reduced to finding max rectangle in histogram if we visualize histogram for each row and find max area in it.">
      <created>1602350555675</created>
      <option name="number" value="00391" />
      <option name="presentableId" value="LOCAL-00391" />
      <option name="project" value="LOCAL" />
      <updated>1602350555675</updated>
    </task>
    <task id="LOCAL-00392" summary="Add comments in count no of elements smaller than current element on the right using merge sort. Merge portion of mergesort is tricky">
      <created>1602365257371</created>
      <option name="number" value="00392" />
      <option name="presentableId" value="LOCAL-00392" />
      <option name="project" value="LOCAL" />
      <updated>1602365257371</updated>
    </task>
    <task id="LOCAL-00393" summary="Solve medium find maximum distance between two occupied seats. Similar to ExamRoom">
      <created>1602365556673</created>
      <option name="number" value="00393" />
      <option name="presentableId" value="LOCAL-00393" />
      <option name="project" value="LOCAL" />
      <updated>1602365556673</updated>
    </task>
    <task id="LOCAL-00394" summary="Solve medium find maximum distance between two occupied seats. Similar to previously solved ExamRoom">
      <created>1602365590549</created>
      <option name="number" value="00394" />
      <option name="presentableId" value="LOCAL-00394" />
      <option name="project" value="LOCAL" />
      <updated>1602365590549</updated>
    </task>
    <task id="LOCAL-00395" summary="Solve hard and tricky count no of submatrices that sum to target sum using 2D prefix sum and reducing the problem to SubarraySumEqualsK. Trick was to generate all submatrices sum in constant time using 2D prefix sum.">
      <created>1602369687617</created>
      <option name="number" value="00395" />
      <option name="presentableId" value="LOCAL-00395" />
      <option name="project" value="LOCAL" />
      <updated>1602369687617</updated>
    </task>
    <task id="LOCAL-00396" summary="Solve medium and tricky find smallest subsequence of distinct characters by greedily deleting the characters that are greater than current characters and occurs on the right of current character (duplicate)">
      <created>1602438820916</created>
      <option name="number" value="00396" />
      <option name="presentableId" value="LOCAL-00396" />
      <option name="project" value="LOCAL" />
      <updated>1602438820916</updated>
    </task>
    <task id="LOCAL-00397" summary="Solve medium and tricky validate whether the provided stack sequences of push and pop are valid or not using greedy algorithm.&#10;&#10;Greedily check whether the top of the stack can be popped or not. At the end, check if all the characters have been popped or not.">
      <created>1602534443724</created>
      <option name="number" value="00397" />
      <option name="presentableId" value="LOCAL-00397" />
      <option name="project" value="LOCAL" />
      <updated>1602534443724</updated>
    </task>
    <task id="LOCAL-00398" summary="Solve hard and tricky find minimum window in a string that has target string as a subsequence using sliding window. Similar to previously solved MinWindowSubstring. &#10;&#10;Keep increasing the window until the current window has T as a subsequence. Then trim the window by iterating from the end to find the first window that has T as a subsequence, since we are iterating from the end, the first window would be the shortest window. Set the right pointer just after the start of the current window.">
      <created>1602604133833</created>
      <option name="number" value="00398" />
      <option name="presentableId" value="LOCAL-00398" />
      <option name="project" value="LOCAL" />
      <updated>1602604133834</updated>
    </task>
    <task id="LOCAL-00399" summary="Solve easy find the longest increasing subarray in an array by sliding window. Keep increasing the window if current window is valid, otherwise reset it to after the end of current window.">
      <created>1602607387087</created>
      <option name="number" value="00399" />
      <option name="presentableId" value="LOCAL-00399" />
      <option name="project" value="LOCAL" />
      <updated>1602607387087</updated>
    </task>
    <task id="LOCAL-00400" summary="Solve hard classical trapping rain water problem. Was asked this question during my first amazon onsite interview.">
      <created>1602618762889</created>
      <option name="number" value="00400" />
      <option name="presentableId" value="LOCAL-00400" />
      <option name="project" value="LOCAL" />
      <updated>1602618762889</updated>
    </task>
    <task id="LOCAL-00401" summary="Solve hard and tricky robot room cleaner problem, given an infinite grid and no sense of coordinates, how will you traverse all the valid coordinates of the grid&#10;&#10;Learnings -- Trick was to rotate 4 times and identify the next index given current direction. Once a cell is done, backtrack by actually moving the robot back to the caller. Backtrack just got real fellas.">
      <created>1602689618207</created>
      <option name="number" value="00401" />
      <option name="presentableId" value="LOCAL-00401" />
      <option name="project" value="LOCAL" />
      <updated>1602689618207</updated>
    </task>
    <task id="LOCAL-00402" summary="Solve medium Walls and Gates, find the shortest distance between an empty room and a gate, provided there are multiple empty rooms and multiple gates. &#10;&#10;Used standard BFS to find the shortest distance.">
      <created>1602691965653</created>
      <option name="number" value="00402" />
      <option name="presentableId" value="LOCAL-00402" />
      <option name="project" value="LOCAL" />
      <updated>1602691965653</updated>
    </task>
    <task id="LOCAL-00403" summary="Solve medium and tricky HouseRobber2, houses are present in circular array and can't rob adjacent houses.&#10;Trick was to understand that first and last houses can never be robbed together, so if you rob first, then you have to skip last and vice versa.&#10;After this, problem is similar to solving HouseRobber1. Fuck them circular things">
      <created>1602707373787</created>
      <option name="number" value="00403" />
      <option name="presentableId" value="LOCAL-00403" />
      <option name="project" value="LOCAL" />
      <updated>1602707373790</updated>
    </task>
    <task id="LOCAL-00404" summary="Simplify the generation of submatrices after going through Tushar roy's video on finding the max rectangle submatrix sum in a matrix.&#10;&#10;No need to use 2d prefix sum and get the diff's and all, it was very tricky. Now visualize the generation as picking a new base and start expanding on top of the new base">
      <created>1602773851765</created>
      <option name="number" value="00404" />
      <option name="presentableId" value="LOCAL-00404" />
      <option name="project" value="LOCAL" />
      <updated>1602773851766</updated>
    </task>
    <task id="LOCAL-00405" summary="Solve hard find max submatrix sum &lt;= k in a matrix. This question had two parts:&#10;&#10;1. Finding all the submatrix sum (similar to NumberOfSubmatricesThatSumsToTarget)&#10;2. Once submatrix sum is reduced to 1d array, find a subarray with sum &lt;= k, need to use treeset in order to find any subarrays with valid diff.">
      <created>1602774734327</created>
      <option name="number" value="00405" />
      <option name="presentableId" value="LOCAL-00405" />
      <option name="project" value="LOCAL" />
      <updated>1602774734327</updated>
    </task>
    <task id="LOCAL-00406" summary="Solve hard classical jump game problem, find the min hops required to reach the last index via greedy and dp.&#10;&#10;DP problem was easy to write, just update all the indexes reachable from current node to current jumps + 1&#10;&#10;Greedy was difficult to visualize because I was not sure on when to update the jumps done so far. Trick was to visualize it as BFS problem instead and update the level count when end of current level is reached.">
      <created>1602869682248</created>
      <option name="number" value="00406" />
      <option name="presentableId" value="LOCAL-00406" />
      <option name="project" value="LOCAL" />
      <updated>1602869682248</updated>
    </task>
    <task id="LOCAL-00407" summary="Solve medium find repeated substrings using rolling hash. Using rolling hash allows you to compute hash in constant time, which is much better than creating a substring and then checking whether it's a repeated substring or not.&#10;&#10;Learnings -- Robin Karp Rolling Hash">
      <created>1602938249004</created>
      <option name="number" value="00407" />
      <option name="presentableId" value="LOCAL-00407" />
      <option name="project" value="LOCAL" />
      <updated>1602938249004</updated>
    </task>
    <option name="localTasksCounter" value="408" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="text">
                    <value>
                      <list>
                        <option value="tricky" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="COLUMN_WIDTH">
                <map>
                  <entry key="2" value="82" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="1" value="TOOL_WINDOW" />
        <entry key="2" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Solve medium find minimum ascii sum of characters to be deleted to make two strings equal. Similar to previously solved DeleteOperationsForTwoString" />
    <MESSAGE value="Solve medium find max no of binary strings that can be picked provided we can have max 'm' no of ones and 'n' no of zeroes in the result set by top down memoization. &#10;&#10;Every index has two options, either get picked or be skipped." />
    <MESSAGE value="Solve classical hard problem EditDistance, find the minimum no of operations (insert, delete, replace) required to convert one string to another using top down memoization. &#10;&#10;Learnings -- Leveraged prior learnings in DeleteOperationForTwoStrings" />
    <MESSAGE value="Solve medium classical painting problem, no two adjacent house can have same color and we need to paint all the houses with min cost.&#10;&#10;Recursive solution was easy, took me a while to convert into memoized solution because we need the color of the house being painted as a state as well." />
    <MESSAGE value="Solve hard and tricky Dungeon Game, find the min health required at the start to reach the target provided the health cant be &lt;= 0 at any state.&#10;&#10;This is similar to BusRoutes where BFS needs to be applied but the condition for BFS has changed. Similarly here, the start is actually our target state, because we need the min health at the start. So at start node, we ask adjacent node on their min health required and update the health at start accordingly." />
    <MESSAGE value="Solve medium and tricky book an event only if it does not create a conflict with existing events. The simplest solution was to keep start and end time together and then find the first event starting before the current event finishes. That event should finish before the current event starts for a successful booking." />
    <MESSAGE value="Update comment regarding visited check in Djikstra -- visited check is not really required because once a node is done, we can't get  a better path for that node in future because we are using a priority queue" />
    <MESSAGE value="Solve medium and tricky problem find cheapest cost to reach a target node from source node with max k depth allowed by djikstra and bfs (with pruning)&#10;&#10;Learnings -- &#10;1. BFS can be applied to find shortest path between two nodes in a weighted graph but with pruning and entire traversal of the graph.&#10;2. In case of additional constraint in Djikstra make sure to relax the bounds accordingly while skipping addition of nodes in PQ." />
    <MESSAGE value="Solve hard and tricky classical problem find the max area of rectangle in matrix. Finding max square is relatively easy than calculating rectangle because of different length and width. It can be reduced to finding max rectangle in histogram if we visualize histogram for each row and find max area in it." />
    <MESSAGE value="Add comments in count no of elements smaller than current element on the right using merge sort. Merge portion of mergesort is tricky" />
    <MESSAGE value="Solve medium find maximum distance between two occupied seats. Similar to ExamRoom" />
    <MESSAGE value="Solve medium find maximum distance between two occupied seats. Similar to previously solved ExamRoom" />
    <MESSAGE value="Solve hard and tricky count no of submatrices that sum to target sum using 2D prefix sum and reducing the problem to SubarraySumEqualsK. Trick was to generate all submatrices sum in constant time using 2D prefix sum." />
    <MESSAGE value="Solve medium and tricky find smallest subsequence of distinct characters by greedily deleting the characters that are greater than current characters and occurs on the right of current character (duplicate)" />
    <MESSAGE value="Solve medium and tricky validate whether the provided stack sequences of push and pop are valid or not using greedy algorithm.&#10;&#10;Greedily check whether the top of the stack can be popped or not. At the end, check if all the characters have been popped or not." />
    <MESSAGE value="Solve hard and tricky find minimum window in a string that has target string as a subsequence using sliding window. Similar to previously solved MinWindowSubstring. &#10;&#10;Keep increasing the window until the current window has T as a subsequence. Then trim the window by iterating from the end to find the first window that has T as a subsequence, since we are iterating from the end, the first window would be the shortest window. Set the right pointer just after the start of the current window." />
    <MESSAGE value="Solve easy find the longest increasing subarray in an array by sliding window. Keep increasing the window if current window is valid, otherwise reset it to after the end of current window." />
    <MESSAGE value="Solve hard classical trapping rain water problem. Was asked this question during my first amazon onsite interview." />
    <MESSAGE value="Solve hard and tricky robot room cleaner problem, given an infinite grid and no sense of coordinates, how will you traverse all the valid coordinates of the grid&#10;&#10;Learnings -- Trick was to rotate 4 times and identify the next index given current direction. Once a cell is done, backtrack by actually moving the robot back to the caller. Backtrack just got real fellas." />
    <MESSAGE value="Solve medium Walls and Gates, find the shortest distance between an empty room and a gate, provided there are multiple empty rooms and multiple gates. &#10;&#10;Used standard BFS to find the shortest distance." />
    <MESSAGE value="Solve medium and tricky HouseRobber2, houses are present in circular array and can't rob adjacent houses.&#10;Trick was to understand that first and last houses can never be robbed together, so if you rob first, then you have to skip last and vice versa.&#10;After this, problem is similar to solving HouseRobber1. Fuck them circular things" />
    <MESSAGE value="Simplify the generation of submatrices after going through Tushar roy's video on finding the max rectangle submatrix sum in a matrix.&#10;&#10;No need to use 2d prefix sum and get the diff's and all, it was very tricky. Now visualize the generation as picking a new base and start expanding on top of the new base" />
    <MESSAGE value="Solve hard find max submatrix sum &lt;= k in a matrix. This question had two parts:&#10;&#10;1. Finding all the submatrix sum (similar to NumberOfSubmatricesThatSumsToTarget)&#10;2. Once submatrix sum is reduced to 1d array, find a subarray with sum &lt;= k, need to use treeset in order to find any subarrays with valid diff." />
    <MESSAGE value="Solve hard classical jump game problem, find the min hops required to reach the last index via greedy and dp.&#10;&#10;DP problem was easy to write, just update all the indexes reachable from current node to current jumps + 1&#10;&#10;Greedy was difficult to visualize because I was not sure on when to update the jumps done so far. Trick was to visualize it as BFS problem instead and update the level count when end of current level is reached." />
    <MESSAGE value="Solve medium find repeated substrings using rolling hash. Using rolling hash allows you to compute hash in constant time, which is much better than creating a substring and then checking whether it's a repeated substring or not.&#10;&#10;Learnings -- Robin Karp Rolling Hash" />
    <option name="LAST_COMMIT_MESSAGE" value="Solve medium find repeated substrings using rolling hash. Using rolling hash allows you to compute hash in constant time, which is much better than creating a substring and then checking whether it's a repeated substring or not.&#10;&#10;Learnings -- Robin Karp Rolling Hash" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="726" y="229" key="#Auto_Import" timestamp="1599427305776">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="726" y="229" key="#Auto_Import/0.0.1920.1050@0.0.1920.1050" timestamp="1599427305776" />
    <state x="586" y="203" key="#Inspections" timestamp="1602866625843">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="586" y="203" key="#Inspections/0.0.1920.1050@0.0.1920.1050" timestamp="1602866625843" />
    <state x="727" y="349" key="#Notifications" timestamp="1598814073398">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="727" y="349" key="#Notifications/0.0.1920.1050@0.0.1920.1050" timestamp="1598814073398" />
    <state x="552" y="166" key="#Plugins" timestamp="1602243118631">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="166" key="#Plugins/0.0.1920.1050@0.0.1920.1050" timestamp="1602243118631" />
    <state x="552" y="183" key="#Project_Structure" timestamp="1594324360886">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="183" key="#Project_Structure/0.0.1920.1050@0.0.1920.1050" timestamp="1594324360886" />
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser" timestamp="1602625275158">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1602625275158" />
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog" timestamp="1597609089094">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609089094" />
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog" timestamp="1594451678382">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="683" y="214" key="#com.intellij.ide.util.frameworkSupport.AddFrameworkSupportDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451678382" />
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog" timestamp="1594451490581">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="779" y="216" key="#com.intellij.openapi.keymap.impl.ui.EditKeymapsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451490581" />
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog" timestamp="1600328299277">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1600328299277" />
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1597609083441">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609083441" />
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1601817471147">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1920.1050@0.0.1920.1050" timestamp="1601817471147" />
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog" timestamp="1597609092731">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092731" />
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1602625429268">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602625429268" />
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1601403451266">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601403451266" />
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog" timestamp="1595271326137">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.typeMigration.ui.FailedConversionsDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1595271326137" />
    <state x="1378" y="422" key="#xdebugger.evaluate" timestamp="1599053535463">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="1378" y="422" key="#xdebugger.evaluate/0.0.1920.1050@0.0.1920.1050" timestamp="1599053535463" />
    <state x="522" y="75" width="1374" height="975" key="CommitChangelistDialog2" timestamp="1602938248198">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="522" y="75" width="1374" height="975" key="CommitChangelistDialog2/0.0.1920.1050@0.0.1920.1050" timestamp="1602938248198" />
    <state width="412" height="466" key="DebuggerActiveHint" timestamp="1599062046773">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="412" height="466" key="DebuggerActiveHint/0.0.1920.1050@0.0.1920.1050" timestamp="1599062046773" />
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog" timestamp="1602366420951">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602366420951" />
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog" timestamp="1596567099935">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1596567099935" />
    <state width="1877" height="285" key="GridCell.Tab.0.bottom" timestamp="1602771360458">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360458" />
    <state width="1877" height="285" key="GridCell.Tab.0.center" timestamp="1602771360458">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360458" />
    <state width="1877" height="285" key="GridCell.Tab.0.left" timestamp="1602771360458">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360458" />
    <state width="1877" height="285" key="GridCell.Tab.0.right" timestamp="1602771360458">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360458" />
    <state width="1877" height="352" key="GridCell.Tab.1.bottom" timestamp="1602771360438">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360438" />
    <state width="1877" height="352" key="GridCell.Tab.1.center" timestamp="1602771360438">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.center/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360438" />
    <state width="1877" height="352" key="GridCell.Tab.1.left" timestamp="1602771360438">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.left/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360438" />
    <state width="1877" height="352" key="GridCell.Tab.1.right" timestamp="1602771360438">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="352" key="GridCell.Tab.1.right/0.0.1920.1050@0.0.1920.1050" timestamp="1602771360438" />
    <state width="1877" height="285" key="GridCell.Tab.2.bottom" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.center" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.left" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.right" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state x="490" y="180" key="Maven.ArtifactSearchDialog" timestamp="1594451518521">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="490" y="180" key="Maven.ArtifactSearchDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594451518521" />
    <state x="695" y="245" key="RollbackChangesDialog" timestamp="1598184917635">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="695" y="245" key="RollbackChangesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598184917635" />
    <state x="668" y="259" key="SettingsEditor" timestamp="1601568700981">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="668" y="259" key="SettingsEditor/0.0.1920.1050@0.0.1920.1050" timestamp="1601568700981" />
    <state x="681" y="266" width="570" height="524" key="StructurePopup" timestamp="1602622184266">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="681" y="266" width="570" height="524" key="StructurePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1602622184266" />
    <state width="498" height="446" key="SwitcherDM" timestamp="1602011044663">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="498" height="446" key="SwitcherDM/0.0.1920.1050@0.0.1920.1050" timestamp="1602011044663" />
    <state x="669" y="222" key="VCS.ChangeListViewerDialog" timestamp="1602604186144">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="669" y="222" key="VCS.ChangeListViewerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602604186144" />
    <state x="807" y="439" key="VCS.ChangelistChooser" timestamp="1598799850245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="807" y="439" key="VCS.ChangelistChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1598799850245" />
    <state x="870" y="99" key="Vcs.Push.Dialog.v2" timestamp="1602938249933">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="870" y="99" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1602938249933" />
    <state x="775" y="303" key="chooseDestDirectoryDialog" timestamp="1597609092682">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="775" y="303" key="chooseDestDirectoryDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092682" />
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD" timestamp="1594451868089">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="664" y="417" key="com.intellij.jarRepository.RepositoryAttachDialog-DOWNLOAD/0.0.1920.1050@0.0.1920.1050" timestamp="1594451868089" />
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1601403444304">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1601403444304" />
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog" timestamp="1594592599434">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="731" y="335" key="com.intellij.testIntegration.createTest.CreateTestDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1594592599434" />
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1597606354834">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1920.1050@0.0.1920.1050" timestamp="1597606354834" />
    <state x="690" y="275" key="extract.method.dialog" timestamp="1599589184838">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="275" key="extract.method.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599589184838" />
    <state x="667" y="258" width="1045" height="624" key="find.popup" timestamp="1602935497738">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="667" y="258" width="1045" height="624" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1602935497738" />
    <state width="676" height="169" key="javadoc.popup.new" timestamp="1602602543657">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="676" height="169" key="javadoc.popup.new/0.0.1920.1050@0.0.1920.1050" timestamp="1602602543657" />
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog" timestamp="1602938867471">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602938867471" />
    <state x="616" y="243" width="672" height="677" key="run.anything.popup" timestamp="1602865676937">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="616" y="243" width="672" height="677" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1602865676937" />
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup" timestamp="1602923518539">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="623" y="227" width="672" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1602923518539" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KDiffPairInArray.java</url>
          <line>50</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RepeatedStringMatch.java</url>
          <line>11</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ShuffleTheArray.java</url>
          <line>17</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RotateArray.java</url>
          <line>15</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CreateTargetArrayinGivenOrder.java</url>
          <line>40</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MergeSortedArray.java</url>
          <line>35</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>67</line>
          <option name="timeStamp" value="26" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FloodFill.java</url>
          <line>62</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>36</line>
          <option name="timeStamp" value="32" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CombinationSum.java</url>
          <line>30</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/RottingOrangesTest.java</url>
          <line>12</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/RottingOranges.java</url>
          <line>55</line>
          <option name="timeStamp" value="46" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>51</line>
          <option name="timeStamp" value="55" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch.java</url>
          <line>57</line>
          <option name="timeStamp" value="56" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Permutations2.java</url>
          <line>37</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/Trie.java</url>
          <line>40</line>
          <option name="timeStamp" value="61" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/AddAndSearchWordTest.java</url>
          <line>20</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/AddAndSearchWord.java</url>
          <line>52</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PrisonCellAfterNDays.java</url>
          <line>69</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordSearch2.java</url>
          <line>49</line>
          <option name="timeStamp" value="72" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>59</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BinaryTreeLevelOrderTraversal2.java</url>
          <line>31</line>
          <option name="timeStamp" value="75" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/ArrangingCoinsTest.java</url>
          <line>9</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>45</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MajorityElement2.java</url>
          <line>53</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/UniqueBST.java</url>
          <line>35</line>
          <option name="timeStamp" value="83" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/UniqueBST.java</url>
          <line>37</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/GroupAnagrams.java</url>
          <line>51</line>
          <option name="timeStamp" value="85" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>61</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>55</line>
          <option name="timeStamp" value="87" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/TargetSum.java</url>
          <line>27</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/HeightBalancedBinaryTree.java</url>
          <line>26</line>
          <option name="timeStamp" value="91" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CourseSchedule.java</url>
          <line>23</line>
          <option name="timeStamp" value="96" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/PathWithMaxProbability.java</url>
          <line>41</line>
          <option name="timeStamp" value="101" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>70</line>
          <option name="timeStamp" value="106" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinHeightTree.java</url>
          <line>79</line>
          <option name="timeStamp" value="107" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/FindTwoSingleNumber.java</url>
          <line>23</line>
          <option name="timeStamp" value="116" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/BestTimeToBuyAndSellStockWithCooldown.java</url>
          <line>45</line>
          <option name="timeStamp" value="117" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak2.java</url>
          <line>114</line>
          <option name="timeStamp" value="120" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/WordBreak1.java</url>
          <line>63</line>
          <option name="timeStamp" value="122" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ConstructMaximumBinaryTree.java</url>
          <line>37</line>
          <option name="timeStamp" value="123" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LargestRectangleInHistogram.java</url>
          <line>30</line>
          <option name="timeStamp" value="125" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/NQueen.java</url>
          <line>53</line>
          <option name="timeStamp" value="132" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/KthSymbolInGrammar.java</url>
          <line>25</line>
          <option name="timeStamp" value="134" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/DivisorGame.java</url>
          <line>34</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CheapestFlightWithinKStop.java</url>
          <line>73</line>
          <option name="timeStamp" value="136" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/LongestCommonSubarray.java</url>
          <line>82</line>
          <option name="timeStamp" value="140" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/MinimumNumberOfFibonacciRequiredToReachSumK.java</url>
          <line>91</line>
          <option name="timeStamp" value="141" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange2.java</url>
          <line>47</line>
          <option name="timeStamp" value="148" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CoinChange.java</url>
          <line>51</line>
          <option name="timeStamp" value="150" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>11</line>
          <option name="timeStamp" value="152" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/LRUCacheTest.java</url>
          <line>8</line>
          <option name="timeStamp" value="153" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/alternate/TargetNumberWithOperations.java</url>
          <line>38</line>
          <option name="timeStamp" value="157" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/CheapestFlightWithinKStop.java</url>
          <line>27</line>
          <option name="timeStamp" value="158" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <condition expression="this instanceof java.lang.NullPointerException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
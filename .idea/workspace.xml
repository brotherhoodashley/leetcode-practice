<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand />
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/CountofSmallerNumbersAfterSelf.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CountofSmallerNumbersAfterSelf.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="PUSH_TAGS">
      <GitPushTagMode />
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="hiddenUrls">
      <set>
        <option value="https://github.com/snehasishroy/leetcode-practice.git" />
      </set>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="vmOptionsForImporter" value="-Xmx768m" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="1OYjUozR2wA5XfxN4lSupdXEdA9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="true" />
    <property name="Repository.Attach.JavaDocs" value="true" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JAVA" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last.edited.regexp" value="abc\ntasd\n" />
    <property name="last_directory_selection" value="$PROJECT_DIR$/src/main/java/common" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.codota.intellij.common.configuration.CodotaConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="alternate" />
      <recent name="" />
      <recent name="common" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="common" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Java Scratch.Scratch">
    <configuration name="ConcatenatedWords" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ConcatenatedWords" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DistinctSubsequences" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DistinctSubsequences" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NumberOfAtoms" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="NumberOfAtoms" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SudokuSolver" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="SudokuSolver" />
      <module name="leetcode-practice" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="JUnit" factoryName="JUnit" nameIsGenerated="true">
      <module name="leetcode-practice" />
      <option name="MAIN_CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <option name="PARAMETERS" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Scratch" type="Java Scratch" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Scratch" />
      <option name="SCRATCH_FILE_URL" value="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.NumberOfAtoms" />
      <item itemvalue="Application.ConcatenatedWords" />
      <item itemvalue="Application.DistinctSubsequences" />
      <item itemvalue="Application.SudokuSolver" />
      <item itemvalue="Java Scratch.Scratch" />
      <item itemvalue="JUnit.Unnamed" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Java Scratch.Scratch" />
        <item itemvalue="Application.SudokuSolver" />
        <item itemvalue="Application.DistinctSubsequences" />
        <item itemvalue="Application.ConcatenatedWords" />
        <item itemvalue="Application.NumberOfAtoms" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="project-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dbb84ff-cb70-4f33-84ac-c2138746d980" name="Default Changelist" comment="" />
      <created>1561288929632</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1561288929632</updated>
    </task>
    <task id="LOCAL-00429" summary="Solve medium search in sorted array of unknown size, trick is to find the range in which we can perform binary search.&#10;Keep incrementing the candidate upper bound until value at that index &gt; target or is invalid (out of bounds)">
      <created>1603455699864</created>
      <option name="number" value="00429" />
      <option name="presentableId" value="LOCAL-00429" />
      <option name="project" value="LOCAL" />
      <updated>1603455699864</updated>
    </task>
    <task id="LOCAL-00430" summary="Add greedy approach of solving hard split array into m subarrays such that largest sum is maximized. &#10;Need to perform binary search on the largest sum possible for single sized subarray and largest sum possible if we choose the entire array.&#10;Target subarray sum would be somewhere in between.&#10;If our chosen candidate sum results in split &lt; target split, we have to decrease the candidate sum&#10;else increase the candidate sum">
      <created>1603463530567</created>
      <option name="number" value="00430" />
      <option name="presentableId" value="LOCAL-00430" />
      <option name="project" value="LOCAL" />
      <updated>1603463530569</updated>
    </task>
    <task id="LOCAL-00431" summary="Update logic of transforming the input range into prefix/suffix of True/False, very critical in solving binary search related problems">
      <created>1603484819292</created>
      <option name="number" value="00431" />
      <option name="presentableId" value="LOCAL-00431" />
      <option name="project" value="LOCAL" />
      <updated>1603484819293</updated>
    </task>
    <task id="LOCAL-00432" summary="Solve hard and tricky divide a array into m subarrays such that minimum sum of all subarrays is maximized. &#10;&#10;It can be solved using DP but due to strict bounds, it times out. Need to use the tricky greedy approach used in SplitArrayLargestSum.&#10;&#10;Pick a target subarray sum that should be the minimum subarray sum, check how many chunks can be formed from the input array. If there are fewer chunks than required, need to reduce target sum otherwise increase target sum.&#10;&#10;Visualize the transformation as prefix of T/F as errichto mentioned in his lecture.">
      <created>1603485573281</created>
      <option name="number" value="00432" />
      <option name="presentableId" value="LOCAL-00432" />
      <option name="project" value="LOCAL" />
      <updated>1603485573281</updated>
    </task>
    <task id="LOCAL-00433" summary="Solve easy find the first index with value &gt;= target value using binary search.&#10;&#10;Used learnings shared by errichto for setting the answer to a value that needs to be returned if no element satisfies the given condition.">
      <created>1603486391073</created>
      <option name="number" value="00433" />
      <option name="presentableId" value="LOCAL-00433" />
      <option name="project" value="LOCAL" />
      <updated>1603486391073</updated>
    </task>
    <task id="LOCAL-00434" summary="Solve medium find first and last position of element in sorted array using two binary searches">
      <created>1603487914119</created>
      <option name="number" value="00434" />
      <option name="presentableId" value="LOCAL-00434" />
      <option name="project" value="LOCAL" />
      <updated>1603487914119</updated>
    </task>
    <task id="LOCAL-00435" summary="Solve medium but easy find left most column with at least a one given a row sorted binary matrix containing 0 and 1.&#10;&#10;Performed binary search on each row to find the left most index of 1 and keep updating the global minima.&#10;&#10;Can also be done in linear time. Kinda forgot to think about it as I was on a roll doing binary search questions.">
      <created>1603489585867</created>
      <option name="number" value="00435" />
      <option name="presentableId" value="LOCAL-00435" />
      <option name="project" value="LOCAL" />
      <updated>1603489585867</updated>
    </task>
    <task id="LOCAL-00436" summary="Update example input and and gotcha in CourseSchedule2">
      <created>1603541652155</created>
      <option name="number" value="00436" />
      <option name="presentableId" value="LOCAL-00436" />
      <option name="project" value="LOCAL" />
      <updated>1603541652155</updated>
    </task>
    <task id="LOCAL-00437" summary="Add comment in ChangeOnlyOneElementToSortArray">
      <created>1603543518259</created>
      <option name="number" value="00437" />
      <option name="presentableId" value="LOCAL-00437" />
      <option name="project" value="LOCAL" />
      <updated>1603543518259</updated>
    </task>
    <task id="LOCAL-00438" summary="Update comment in MaximumSumOfTwoNonOverlappingSubarraysOfSpecificSize">
      <created>1603621722614</created>
      <option name="number" value="00438" />
      <option name="presentableId" value="LOCAL-00438" />
      <option name="project" value="LOCAL" />
      <updated>1603621722615</updated>
    </task>
    <task id="LOCAL-00439" summary="Add top down recursion approach in HouseRobber">
      <created>1603622417147</created>
      <option name="number" value="00439" />
      <option name="presentableId" value="LOCAL-00439" />
      <option name="project" value="LOCAL" />
      <updated>1603622417147</updated>
    </task>
    <task id="LOCAL-00440" summary="Add comment in FindTwoNonOverlappingSubarrayWithTargetSum">
      <created>1603623471645</created>
      <option name="number" value="00440" />
      <option name="presentableId" value="LOCAL-00440" />
      <option name="project" value="LOCAL" />
      <updated>1603623471645</updated>
    </task>
    <task id="LOCAL-00441" summary="Update comment in MinDeletionCostToAvoidRepeatingLetters">
      <created>1603628676043</created>
      <option name="number" value="00441" />
      <option name="presentableId" value="LOCAL-00441" />
      <option name="project" value="LOCAL" />
      <updated>1603628676043</updated>
    </task>
    <task id="LOCAL-00442" summary="Update approach in ContainsDuplicate2">
      <created>1603630446436</created>
      <option name="number" value="00442" />
      <option name="presentableId" value="LOCAL-00442" />
      <option name="project" value="LOCAL" />
      <updated>1603630446436</updated>
    </task>
    <task id="LOCAL-00443" summary="Add approach in ContainsDuplicate3">
      <created>1603630646071</created>
      <option name="number" value="00443" />
      <option name="presentableId" value="LOCAL-00443" />
      <option name="project" value="LOCAL" />
      <updated>1603630646071</updated>
    </task>
    <task id="LOCAL-00444" summary="Add alternate approach of pushing numbers instead of indices in SlidingWindowMaximum and add comment on how does it handles duplicate elements">
      <created>1603638617355</created>
      <option name="number" value="00444" />
      <option name="presentableId" value="LOCAL-00444" />
      <option name="project" value="LOCAL" />
      <updated>1603638617355</updated>
    </task>
    <task id="LOCAL-00445" summary="Simplify logic in DistributeNCandiesToKPeople">
      <created>1603644571203</created>
      <option name="number" value="00445" />
      <option name="presentableId" value="LOCAL-00445" />
      <option name="project" value="LOCAL" />
      <updated>1603644571203</updated>
    </task>
    <task id="LOCAL-00446" summary="Add approach in FindKthBitInNthBinaryString, tricky binary search and index handling">
      <created>1603645468371</created>
      <option name="number" value="00446" />
      <option name="presentableId" value="LOCAL-00446" />
      <option name="project" value="LOCAL" />
      <updated>1603645468371</updated>
    </task>
    <task id="LOCAL-00447" summary="Remove initial solution and add approach in tricky question MaxPathSum">
      <created>1603661240783</created>
      <option name="number" value="00447" />
      <option name="presentableId" value="LOCAL-00447" />
      <option name="project" value="LOCAL" />
      <updated>1603661240783</updated>
    </task>
    <task id="LOCAL-00448" summary="Update variable name in TimeNeededToInformAllEmployees">
      <created>1603702933296</created>
      <option name="number" value="00448" />
      <option name="presentableId" value="LOCAL-00448" />
      <option name="project" value="LOCAL" />
      <updated>1603702933296</updated>
    </task>
    <task id="LOCAL-00449" summary="Add constraints in problem statement">
      <created>1603703405478</created>
      <option name="number" value="00449" />
      <option name="presentableId" value="LOCAL-00449" />
      <option name="project" value="LOCAL" />
      <updated>1603703405478</updated>
    </task>
    <task id="LOCAL-00450" summary="Add another solution in PathSum3 by extending the path from children and starting a new path from current node before returning to parent.&#10;&#10;Learnings -- Paths in a tree can be visualized as subarray problem.">
      <created>1603706019107</created>
      <option name="number" value="00450" />
      <option name="presentableId" value="LOCAL-00450" />
      <option name="project" value="LOCAL" />
      <updated>1603706019107</updated>
    </task>
    <task id="LOCAL-00451" summary="Add problem statement and update approach">
      <created>1603708186462</created>
      <option name="number" value="00451" />
      <option name="presentableId" value="LOCAL-00451" />
      <option name="project" value="LOCAL" />
      <updated>1603708186462</updated>
    </task>
    <task id="LOCAL-00452" summary="Add errichto's template of binary search, does not work for finding min element in rotated sorted array containing duplicates.">
      <created>1603715329342</created>
      <option name="number" value="00452" />
      <option name="presentableId" value="LOCAL-00452" />
      <option name="project" value="LOCAL" />
      <updated>1603715329342</updated>
    </task>
    <task id="LOCAL-00453" summary="Simplify code and add approach in find no of ways to achieve target sum">
      <created>1603744510848</created>
      <option name="number" value="00453" />
      <option name="presentableId" value="LOCAL-00453" />
      <option name="project" value="LOCAL" />
      <updated>1603744510848</updated>
    </task>
    <task id="LOCAL-00454" summary="Add clarifications/gotcha in generation of ugly numbers">
      <created>1603746438554</created>
      <option name="number" value="00454" />
      <option name="presentableId" value="LOCAL-00454" />
      <option name="project" value="LOCAL" />
      <updated>1603746438554</updated>
    </task>
    <task id="LOCAL-00455" summary="Solve medium find the start of the cycle in linked list using warshall floyd algorithm">
      <created>1603832235130</created>
      <option name="number" value="00455" />
      <option name="presentableId" value="LOCAL-00455" />
      <option name="project" value="LOCAL" />
      <updated>1603832235130</updated>
    </task>
    <task id="LOCAL-00456" summary="Solve medium find all possible partitions of a string such that each partition is a palindrome by backtracking. &#10;&#10;Important to understand the time complexity of this solution, there can be maximum n-1 cuts and each cut can either be picked or be skipped, so total is 2^(n-1)">
      <created>1603900278195</created>
      <option name="number" value="00456" />
      <option name="presentableId" value="LOCAL-00456" />
      <option name="project" value="LOCAL" />
      <updated>1603900278195</updated>
    </task>
    <task id="LOCAL-00457" summary="Solve hard and tricky find the kth sorted permutation of the given input array using greedy + maths.&#10;&#10;Backtracking solution is trivial and requires generating all k permutations of the input array. &#10;&#10;Greedy solution fixes one digit at a time of the result; by figuring out how many permutations does a digit can generate if it's the first digit of the permutation. We recursively fix one digit and are left with n-1 digits.">
      <created>1603914512266</created>
      <option name="number" value="00457" />
      <option name="presentableId" value="LOCAL-00457" />
      <option name="project" value="LOCAL" />
      <updated>1603914512266</updated>
    </task>
    <task id="LOCAL-00458" summary="Solve easy find whether any permutation of the input string can be a palindrome or not by checking the count of characters with odd frequency.">
      <created>1603915088234</created>
      <option name="number" value="00458" />
      <option name="presentableId" value="LOCAL-00458" />
      <option name="project" value="LOCAL" />
      <updated>1603915088234</updated>
    </task>
    <task id="LOCAL-00459" summary="Solve hard and tricky find whether a word is entirely composed of two or more words from dictionary. Similar to previously solved WordBreak1 but gives TLE for me somehow.&#10;&#10;Solved it using Trie to quickly find whether the current prefix is valid prefix or not. Important to sort the words because a word can only be made from shorter words.">
      <created>1603990037365</created>
      <option name="number" value="00459" />
      <option name="presentableId" value="LOCAL-00459" />
      <option name="project" value="LOCAL" />
      <updated>1603990037365</updated>
    </task>
    <task id="LOCAL-00460" summary="Solve medium and tricky find number of longest increasing subsequences. Need to store the count of LIS ending at any index, while updating the length of LIS at current index, reset or increment the count depending upon the current length.&#10;&#10;If current length &gt; currently stored length, reset the count, else if current length == currently stored length, increment the count">
      <created>1604067768731</created>
      <option name="number" value="00460" />
      <option name="presentableId" value="LOCAL-00460" />
      <option name="project" value="LOCAL" />
      <updated>1604067768731</updated>
    </task>
    <task id="LOCAL-00461" summary="Solve medium find length of the longest consecutive sequence in a binary tree by passing information to the child.&#10;&#10;Child needs to know what is the length of the consecutive sequence present at parent and decide whether it can extend it or not.">
      <created>1604070480173</created>
      <option name="number" value="00461" />
      <option name="presentableId" value="LOCAL-00461" />
      <option name="project" value="LOCAL" />
      <updated>1604070480174</updated>
    </task>
    <task id="LOCAL-00462" summary="Solve medium and a bit tricky find length of the longest increasing/decreasing consecutive sequence in a binary tree&#10;&#10;Since both increasing/decreasing sequence needs to be considered, parent node must be aware of the longest sequence ending/beginning at child node. This will ensure parent has the information to choose either of the path.">
      <created>1604091791761</created>
      <option name="number" value="00462" />
      <option name="presentableId" value="LOCAL-00462" />
      <option name="project" value="LOCAL" />
      <updated>1604091791762</updated>
    </task>
    <task id="LOCAL-00463" summary="Solve hard and a bit tricky to reduce time complexity, find two nodes whose values are swapped in a bst.&#10;&#10;This is similar to finding two elements in nearly sorted array that have been swapped. It's a classical problem that can be done in linear time without sorting the entire input using two pointers">
      <created>1604141274330</created>
      <option name="number" value="00463" />
      <option name="presentableId" value="LOCAL-00463" />
      <option name="project" value="LOCAL" />
      <updated>1604141274330</updated>
    </task>
    <task id="LOCAL-00464" summary="Solve medium and very interesting low level implementation problem, encode a list of strings to a single string that can be decoded to convert into list of strings.&#10;&#10;There are multiple ways to solve this question, use a delimiter outside of input char range, or escape the chosen delimiter if present in the input or use chunked transfer encoding">
      <created>1604143784957</created>
      <option name="number" value="00464" />
      <option name="presentableId" value="LOCAL-00464" />
      <option name="project" value="LOCAL" />
      <updated>1604143784957</updated>
    </task>
    <task id="LOCAL-00465" summary="Solve easy meeting rooms, check whether there is a conflict in the appointment.&#10;&#10;Leveraged prior learnings of MyCalendar1. Can also be done by sorting the entire array and then checking for conflicts.">
      <created>1604218374711</created>
      <option name="number" value="00465" />
      <option name="presentableId" value="LOCAL-00465" />
      <option name="project" value="LOCAL" />
      <updated>1604218374712</updated>
    </task>
    <task id="LOCAL-00466" summary="Solve medium but very tricky to optimize sentence screen fitting, fit a sentence into a grid such that a word can't be split across two rows. &#10;&#10;Learnings -- Deal with questions related to finding no of repetitions in a infinitely repeating sequence">
      <created>1604219833078</created>
      <option name="number" value="00466" />
      <option name="presentableId" value="LOCAL-00466" />
      <option name="project" value="LOCAL" />
      <updated>1604219833078</updated>
    </task>
    <task id="LOCAL-00467" summary="Solve hard find all possible subsequences of a target string in the source string by recursion.&#10;&#10;Initially I thought to implement it by storing indices of all target characters and look for a greater index than previous chosen index but sadly it timed out. (Similar to MinWindowSubsequence)&#10;&#10;Later I thought to implement it the classic way of solving problems related to two string, compare characters at two indices and update indices accordingly.">
      <created>1604238894584</created>
      <option name="number" value="00467" />
      <option name="presentableId" value="LOCAL-00467" />
      <option name="project" value="LOCAL" />
      <updated>1604238894584</updated>
    </task>
    <task id="LOCAL-00468" summary="Solve hard find all possible subsequences of a target string in the source string by recursion.&#10;&#10;Initially I thought to implement it by storing indices of all target characters and look for a greater index than previous chosen index but sadly it timed out. (Similar to MinWindowSubsequence)&#10;&#10;Later I thought to implement it the classic way of solving problems related to two string, compare characters at two indices and update indices accordingly.">
      <created>1604238913765</created>
      <option name="number" value="00468" />
      <option name="presentableId" value="LOCAL-00468" />
      <option name="project" value="LOCAL" />
      <updated>1604238913765</updated>
    </task>
    <task id="LOCAL-00469" summary="Simplify treeMap solution by directly adding element to the map if map is empty.">
      <created>1604240322069</created>
      <option name="number" value="00469" />
      <option name="presentableId" value="LOCAL-00469" />
      <option name="project" value="LOCAL" />
      <updated>1604240322070</updated>
    </task>
    <task id="LOCAL-00470" summary="Simplify code by removing complicated initial code and add approach in find maximum width of a binary tree">
      <created>1604243843120</created>
      <option name="number" value="00470" />
      <option name="presentableId" value="LOCAL-00470" />
      <option name="project" value="LOCAL" />
      <updated>1604243843120</updated>
    </task>
    <task id="LOCAL-00471" summary="Solve classical hard problem merge k sorted linked list using priority queue">
      <created>1604243949090</created>
      <option name="number" value="00471" />
      <option name="presentableId" value="LOCAL-00471" />
      <option name="project" value="LOCAL" />
      <updated>1604243949090</updated>
    </task>
    <task id="LOCAL-00472" summary="Solve hard problem find the longest substring with balanced '(' and ')' using two pass algorithm.&#10;&#10;First use stack to mark balanced indices, then find the longest subarray with all balanced index.&#10;&#10;Tried to initially solve the question via a lot of approaches, sliding window, prefix sum but it failed.&#10;&#10;This question can also be solved by using DP, care must be taken to carry forward the results which I missed.">
      <created>1604254094056</created>
      <option name="number" value="00472" />
      <option name="presentableId" value="LOCAL-00472" />
      <option name="project" value="LOCAL" />
      <updated>1604254094056</updated>
    </task>
    <task id="LOCAL-00473" summary="Solve medium sudoku solver using classic backtracking algorithm. Try to place candidates on an emptyIndex and recur for the remaining empty indices. If none of the candidates are safe to place, backtrack and unset a previously placed candidate.&#10;&#10;Care must be taken to properly backtrack all the associated datastructures as there are many in this case.">
      <created>1604261801290</created>
      <option name="number" value="00473" />
      <option name="presentableId" value="LOCAL-00473" />
      <option name="project" value="LOCAL" />
      <updated>1604261801290</updated>
    </task>
    <task id="LOCAL-00474" summary="Solve medium partition a binary tree into two subtree with equal sum using two pass algorithm. First find the total sum and then for each parent, check if the child subtree has half the total sum. If yes, cut that edge.&#10;&#10;Care must be taken to disambiguate null nodes vs nodes with val 0">
      <created>1604327792973</created>
      <option name="number" value="00474" />
      <option name="presentableId" value="LOCAL-00474" />
      <option name="project" value="LOCAL" />
      <updated>1604327792973</updated>
    </task>
    <task id="LOCAL-00475" summary="Solve medium tricky problem find longest substring with all unique characters repeating &gt;=k times.&#10;&#10;Sliding window technique is really odd and seems hacky. Recursive solution to create splits at invalid characters makes sense.">
      <created>1604347780478</created>
      <option name="number" value="00475" />
      <option name="presentableId" value="LOCAL-00475" />
      <option name="project" value="LOCAL" />
      <updated>1604347780478</updated>
    </task>
    <task id="LOCAL-00476" summary="Solve easy find average of top 5 scores of each student using counting sort.">
      <created>1604349401280</created>
      <option name="number" value="00476" />
      <option name="presentableId" value="LOCAL-00476" />
      <option name="project" value="LOCAL" />
      <updated>1604349401280</updated>
    </task>
    <task id="LOCAL-00477" summary="Rename file to match problem statement">
      <created>1604351241880</created>
      <option name="number" value="00477" />
      <option name="presentableId" value="LOCAL-00477" />
      <option name="project" value="LOCAL" />
      <updated>1604351241880</updated>
    </task>
    <option name="localTasksCounter" value="478" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="2">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                  <entry key="text">
                    <value>
                      <list>
                        <option value="hard and tricky" />
                      </list>
                    </value>
                  </entry>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="snehasishiiita" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_WIDTH">
                <map>
                  <entry key="2" value="82" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="1" value="TOOL_WINDOW" />
        <entry key="2" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Add errichto's template of binary search, does not work for finding min element in rotated sorted array containing duplicates." />
    <MESSAGE value="Simplify code and add approach in find no of ways to achieve target sum" />
    <MESSAGE value="Add clarifications/gotcha in generation of ugly numbers" />
    <MESSAGE value="Solve medium find the start of the cycle in linked list using warshall floyd algorithm" />
    <MESSAGE value="Solve medium find all possible partitions of a string such that each partition is a palindrome by backtracking. &#10;&#10;Important to understand the time complexity of this solution, there can be maximum n-1 cuts and each cut can either be picked or be skipped, so total is 2^(n-1)" />
    <MESSAGE value="Solve hard and tricky find the kth sorted permutation of the given input array using greedy + maths.&#10;&#10;Backtracking solution is trivial and requires generating all k permutations of the input array. &#10;&#10;Greedy solution fixes one digit at a time of the result; by figuring out how many permutations does a digit can generate if it's the first digit of the permutation. We recursively fix one digit and are left with n-1 digits." />
    <MESSAGE value="Solve easy find whether any permutation of the input string can be a palindrome or not by checking the count of characters with odd frequency." />
    <MESSAGE value="Solve hard and tricky find whether a word is entirely composed of two or more words from dictionary. Similar to previously solved WordBreak1 but gives TLE for me somehow.&#10;&#10;Solved it using Trie to quickly find whether the current prefix is valid prefix or not. Important to sort the words because a word can only be made from shorter words." />
    <MESSAGE value="Solve medium and tricky find number of longest increasing subsequences. Need to store the count of LIS ending at any index, while updating the length of LIS at current index, reset or increment the count depending upon the current length.&#10;&#10;If current length &gt; currently stored length, reset the count, else if current length == currently stored length, increment the count" />
    <MESSAGE value="Solve medium find length of the longest consecutive sequence in a binary tree by passing information to the child.&#10;&#10;Child needs to know what is the length of the consecutive sequence present at parent and decide whether it can extend it or not." />
    <MESSAGE value="Solve medium and a bit tricky find length of the longest increasing/decreasing consecutive sequence in a binary tree&#10;&#10;Since both increasing/decreasing sequence needs to be considered, parent node must be aware of the longest sequence ending/beginning at child node. This will ensure parent has the information to choose either of the path." />
    <MESSAGE value="Solve hard and a bit tricky to reduce time complexity, find two nodes whose values are swapped in a bst.&#10;&#10;This is similar to finding two elements in nearly sorted array that have been swapped. It's a classical problem that can be done in linear time without sorting the entire input using two pointers" />
    <MESSAGE value="Solve medium and very interesting low level implementation problem, encode a list of strings to a single string that can be decoded to convert into list of strings.&#10;&#10;There are multiple ways to solve this question, use a delimiter outside of input char range, or escape the chosen delimiter if present in the input or use chunked transfer encoding" />
    <MESSAGE value="Solve easy meeting rooms, check whether there is a conflict in the appointment.&#10;&#10;Leveraged prior learnings of MyCalendar1. Can also be done by sorting the entire array and then checking for conflicts." />
    <MESSAGE value="Solve medium but very tricky to optimize sentence screen fitting, fit a sentence into a grid such that a word can't be split across two rows. &#10;&#10;Learnings -- Deal with questions related to finding no of repetitions in a infinitely repeating sequence" />
    <MESSAGE value="Solve hard find all possible subsequences of a target string in the source string by recursion.&#10;&#10;Initially I thought to implement it by storing indices of all target characters and look for a greater index than previous chosen index but sadly it timed out. (Similar to MinWindowSubsequence)&#10;&#10;Later I thought to implement it the classic way of solving problems related to two string, compare characters at two indices and update indices accordingly." />
    <MESSAGE value="Simplify treeMap solution by directly adding element to the map if map is empty." />
    <MESSAGE value="Simplify code by removing complicated initial code and add approach in find maximum width of a binary tree" />
    <MESSAGE value="Solve classical hard problem merge k sorted linked list using priority queue" />
    <MESSAGE value="Solve hard problem find the longest substring with balanced '(' and ')' using two pass algorithm.&#10;&#10;First use stack to mark balanced indices, then find the longest subarray with all balanced index.&#10;&#10;Tried to initially solve the question via a lot of approaches, sliding window, prefix sum but it failed.&#10;&#10;This question can also be solved by using DP, care must be taken to carry forward the results which I missed." />
    <MESSAGE value="Solve medium sudoku solver using classic backtracking algorithm. Try to place candidates on an emptyIndex and recur for the remaining empty indices. If none of the candidates are safe to place, backtrack and unset a previously placed candidate.&#10;&#10;Care must be taken to properly backtrack all the associated datastructures as there are many in this case." />
    <MESSAGE value="Solve medium partition a binary tree into two subtree with equal sum using two pass algorithm. First find the total sum and then for each parent, check if the child subtree has half the total sum. If yes, cut that edge.&#10;&#10;Care must be taken to disambiguate null nodes vs nodes with val 0" />
    <MESSAGE value="Solve medium tricky problem find longest substring with all unique characters repeating &gt;=k times.&#10;&#10;Sliding window technique is really odd and seems hacky. Recursive solution to create splits at invalid characters makes sense." />
    <MESSAGE value="Solve easy find average of top 5 scores of each student using counting sort." />
    <MESSAGE value="Rename file to match problem statement" />
    <option name="LAST_COMMIT_MESSAGE" value="Rename file to match problem statement" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="726" y="229" key="#Auto_Import" timestamp="1599427305776">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="726" y="229" key="#Auto_Import/0.0.1920.1050@0.0.1920.1050" timestamp="1599427305776" />
    <state x="586" y="203" key="#Inspections" timestamp="1602866625843">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="586" y="203" key="#Inspections/0.0.1920.1050@0.0.1920.1050" timestamp="1602866625843" />
    <state x="727" y="349" key="#Notifications" timestamp="1598814073398">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="727" y="349" key="#Notifications/0.0.1920.1050@0.0.1920.1050" timestamp="1598814073398" />
    <state x="552" y="166" key="#Plugins" timestamp="1602243118631">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="552" y="166" key="#Plugins/0.0.1920.1050@0.0.1920.1050" timestamp="1602243118631" />
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser" timestamp="1604417536568">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="765" y="231" key="#com.intellij.ide.util.MemberChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1604417536568" />
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog" timestamp="1597609089094">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="703" y="304" key="#com.intellij.ide.util.PackageChooserDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609089094" />
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog" timestamp="1600328299277">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="640" y="254" key="#com.intellij.openapi.updateSettings.impl.PluginUpdateInfoDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1600328299277" />
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1597609083441">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="820" y="449" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609083441" />
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1603035926121">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="756" y="384" width="433" height="288" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1920.1050@0.0.1920.1050" timestamp="1603035926121" />
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog" timestamp="1597609092731">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="743" y="369" key="#com.intellij.refactoring.move.moveInner.MoveInnerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092731" />
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog" timestamp="1602625429268">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="504" y="0" key="#com.intellij.refactoring.rename.AutomaticRenamingDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602625429268" />
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1601403451266">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="272" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1601403451266" />
    <state x="1378" y="422" key="#xdebugger.evaluate" timestamp="1603206721809">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="1378" y="422" key="#xdebugger.evaluate/0.0.1920.1050@0.0.1920.1050" timestamp="1603206721809" />
    <state x="340" y="72" width="1374" height="978" key="CommitChangelistDialog2" timestamp="1604351241273">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="340" y="72" width="1374" height="978" key="CommitChangelistDialog2/0.0.1920.1050@0.0.1920.1050" timestamp="1604351241273" />
    <state width="412" height="466" key="DebuggerActiveHint" timestamp="1599062046773">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="412" height="466" key="DebuggerActiveHint/0.0.1920.1050@0.0.1920.1050" timestamp="1599062046773" />
    <state width="456" height="442" key="Diff.GoToChangePopup" timestamp="1603722673482">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="456" height="442" key="Diff.GoToChangePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1603722673482" />
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog" timestamp="1604240167961">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="368" y="174" width="1536" height="867" maximized="true" key="DiffContextDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1604240167961" />
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog" timestamp="1596567099935">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="550" y="425" key="Git.Rebase.Log.Action.NewCommitMessage.Dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1596567099935" />
    <state width="1877" height="282" key="GridCell.Tab.0.bottom" timestamp="1604347055847">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1604347055847" />
    <state width="1877" height="282" key="GridCell.Tab.0.center" timestamp="1604347055847">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1604347055847" />
    <state width="1877" height="282" key="GridCell.Tab.0.left" timestamp="1604347055846">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1604347055846" />
    <state width="1877" height="282" key="GridCell.Tab.0.right" timestamp="1604347055847">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1604347055847" />
    <state width="1877" height="282" key="GridCell.Tab.1.bottom" timestamp="1604256096153">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.1.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1604256096153" />
    <state width="1877" height="282" key="GridCell.Tab.1.center" timestamp="1604256096153">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.1.center/0.0.1920.1050@0.0.1920.1050" timestamp="1604256096153" />
    <state width="1877" height="282" key="GridCell.Tab.1.left" timestamp="1604256096153">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.1.left/0.0.1920.1050@0.0.1920.1050" timestamp="1604256096153" />
    <state width="1877" height="282" key="GridCell.Tab.1.right" timestamp="1604256096153">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="282" key="GridCell.Tab.1.right/0.0.1920.1050@0.0.1920.1050" timestamp="1604256096153" />
    <state width="1877" height="285" key="GridCell.Tab.2.bottom" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.center" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.center/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.left" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.left/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state width="1877" height="285" key="GridCell.Tab.2.right" timestamp="1599757745387">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1877" height="285" key="GridCell.Tab.2.right/0.0.1920.1050@0.0.1920.1050" timestamp="1599757745387" />
    <state x="695" y="245" key="RollbackChangesDialog" timestamp="1598184917635">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="695" y="245" key="RollbackChangesDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1598184917635" />
    <state x="668" y="259" key="SettingsEditor" timestamp="1604217553251">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="668" y="259" key="SettingsEditor/0.0.1920.1050@0.0.1920.1050" timestamp="1604217553251" />
    <state x="681" y="266" width="570" height="524" key="StructurePopup" timestamp="1604420337760">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="681" y="266" width="570" height="524" key="StructurePopup/0.0.1920.1050@0.0.1920.1050" timestamp="1604420337760" />
    <state width="498" height="446" key="SwitcherDM" timestamp="1604343879478">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="498" height="446" key="SwitcherDM/0.0.1920.1050@0.0.1920.1050" timestamp="1604343879478" />
    <state x="669" y="222" key="VCS.ChangeListViewerDialog" timestamp="1602604186144">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="669" y="222" key="VCS.ChangeListViewerDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1602604186144" />
    <state x="807" y="439" key="VCS.ChangelistChooser" timestamp="1598799850245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="807" y="439" key="VCS.ChangelistChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1598799850245" />
    <state x="870" y="99" key="Vcs.Push.Dialog.v2" timestamp="1604351243002">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="870" y="99" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1604351243002" />
    <state x="775" y="303" key="chooseDestDirectoryDialog" timestamp="1597609092682">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="775" y="303" key="chooseDestDirectoryDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1597609092682" />
    <state x="562" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1603744207245">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="562" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.0.1920.1050@0.0.1920.1050" timestamp="1603744207245" />
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1604256234093">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="769" y="439" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1604256234093" />
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1603983886792">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="489" y="261" width="941" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1920.1050@0.0.1920.1050" timestamp="1603983886792" />
    <state x="690" y="275" key="extract.method.dialog" timestamp="1599589184838">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="690" y="275" key="extract.method.dialog/0.0.1920.1050@0.0.1920.1050" timestamp="1599589184838" />
    <state x="667" y="258" width="1045" height="624" key="find.popup" timestamp="1604351184818">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="667" y="258" width="1045" height="624" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1604351184818" />
    <state width="632" height="189" key="javadoc.popup.new" timestamp="1604416046239">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="632" height="189" key="javadoc.popup.new/0.0.1920.1050@0.0.1920.1050" timestamp="1604416046239" />
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog" timestamp="1604238243461">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="666" y="282" key="refactoring.ChangeSignatureDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1604238243461" />
    <state x="616" y="243" width="672" height="677" key="run.anything.popup" timestamp="1604417364473">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="616" y="243" width="672" height="677" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1604417364473" />
    <state x="623" y="227" width="766" height="650" key="search.everywhere.popup" timestamp="1604420335305">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="623" y="227" width="766" height="650" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1604420335305" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/DistinctSubsequences.java</url>
          <line>78</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <condition expression="this instanceof StringIndexOutOfBoundsException" language="JAVA" />
          <properties>
            <catch-class-filters>
              <class-filter pattern="java.lang.ArrayIndexOutOfBoundsException" />
            </catch-class-filters>
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="grid" />
        <watch expression="uniqueString.entrySet().toArray()[0]" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>